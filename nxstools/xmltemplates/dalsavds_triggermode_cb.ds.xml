<?xml version='1.0'?>
<definition>
  <datasource type="PYEVAL" name="$(name)_triggermode_cb">
    <result name="result">
ds.result = ds.$(name)_triggermode

if ds.$(name)_filesaving:
    if "__root__" in commonblock.keys():
        root = commonblock["__root__"]
    filenames = []
    framestartnumbers = []
    if "$(name)_filestartnum" in commonblock:
        filestartnumbers = commonblock["$(name)_filestartnum"]
    fln = len(filestartnumbers)

    lastfile = None
    totalframenumbers = 0
    framespernxfile = ds.$(name)_framespernxfile


    height = ds.$(name)_height
    width = ds.$(name)_width

    fileprefix = ds.$(name)_fileprefix
    filepostfix = ds.$(name)_filepostfix
    filestartnum = ds.$(name)_filestartnum
    triggermode = ds.$(name)_triggermode
    pixelformat = ds.$(name)_pixelformat
    mode = ds.$(name)_acquisitionmode
    framecount = ds.$(name)_acquisitionframecount
    filesizes = []
    totalframenumbers = []
    nbfiles = 0
    if mode in ["MultiFrame"]:
        totalframenumbers = fln * framecount
        if framespernxfile < 1 or framespernxfile >  framecount:
            filesizes = [framecount for _ in range(fln)]
            nbfiles = len(filesizes)
        else:
            nbfiles = (framecount + 1) // framspernxfile + 1
            lastfilenbframes = framecount % framspernxfile
    elif mode in ["SingleFrame"]:
        totalframenumbers = fln
        filesizes = [1 for _ in range(fln)]
        nbfiles = len(filesizes)
    elif mode in ["Continuous"]:
            
            
    
    dtm = {
        "Mono8": "uint8",
        "Mono8Signed": "int8",
        "Mono10": "uint16",
        "Mono12": "uint16",
        "Mono10Packed": "uint16",
        "Mono12Packed": "uint16",
        "Mono14": "uint16",
        "Mono16": "uint16",
        "Mono16Signed": "int16",
        "BayerGR10": "uint16",
        "BayerRG10": "uint16",
        "BayerGB10": "uint16",
        "BayerBG10": "uint16",
        "BayerGR12": "uint16",
        "BayerRG12": "uint16",
        "BayerGB12": "uint16",
        "BayerBG12": "uint16",
    }
    try:
        dtype = dtm[pixelformat]
    except Exception:
        dtype = "uint8"

    shape = [totalframenumbers, height, width]


    if "$var.filename":
        path = ("$var.filename").split("/")[-1].split(".")[0] + "/"
    else:
        path = ""

    if "__root__" in commonblock.keys():
        root = commonblock["__root__"]
        if root.h5object.__class__.__name__ == "File":
            import nxstools.h5pywriter as nxw
        else:
            import nxstools.h5cppwriter as nxw
    else:
        raise("Writer cannot be found")

    en = root.open("$var.entryname#'$(__entryname__)'$var.serialno")
    dt = en.open("data")
    ins = en.open("instrument")
    det = ins.open("$(name)")
    npath = "/entry/instrument/detector/data"

    vfl = nxw.virtual_field_layout([totalframenumbers, height, width], dtype)


    foffset = 0
    for savefilename, framenumbers in filesframes:

        if framenumbers > 0 and framesperfile > 10:
            nbfiles = (framenumbers - 1) // framesperfile + 1
            lastfilenbframes = framenumbers - (nbfiles - 1) * framesperfile
        elif framenumbers > 0:
            nbfiles = 1
            lastfilenbframes = framenumbers
        else:
            nbfiles = 0
            lastfilenbframes = 0

        if nbfiles > 0:
            for nbf in range(0, nbfiles):
                if framenumbers > framesperfile and framesperfile > 10:
                    connector = "_part%05d." % nbf
                else:
                    connector = "."
                filename = path + "$(name)/" + str(savefilename) + connector + str(ds.$(name)_filepostfix)
                ln = framesperfile if nbf + 1 != nbfiles else lastfilenbframes
                ef = nxw.target_field_view(filename, npath, [ln, height, width], dtype)
                vfl[(foffset + nbf * framesperfile):(foffset + nbf * framesperfile + ln), :, :] = ef
            foffset += framenumbers
    det.create_virtual_field("data", vfl)

    </result>
    $datasources.$(name)_filedir
    $datasources.$(name)_fileprefix
    $datasources.$(name)_filepostfix
    $datasources.$(name)_filestartnum
    $datasources.$(name)_filesaving
    $datasources.$(name)_triggermode
    $datasources.$(name)_framespernxfile
    $datasources.$(name)_pixelformat
    $datasources.$(name)_height
    $datasources.$(name)_width 
    $datasources.$(name)_acquisitionmode
    $datasources.$(name)_acquisitionframecount
  </datasource>
</definition>
