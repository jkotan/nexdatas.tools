.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "NXSTOOLS" "1" "Jun 11, 2024" "4.4" "NXSTools"
.SH NAME
nxstools \- nxstools Documentation
.sp
\fI\%\fP
\fI\%\fP
\fI\%\fP
\fI\%\fP
.sp
Authors: Jan Kotanski
.SH INTRODUCTION
.sp
Configuration tools for NeXDaTaS Tango Servers consists of the following command\-line scripts:
.INDENT 0.0
.IP \(bu 2
\fI\%nxscollect\fP uploads external images into the NeXus/HDF5 file
.IP \(bu 2
\fI\%nxsconfig\fP reads NeXus Configuration Server settings
.IP \(bu 2
\fI\%nxscreate\fP creates NeXus Configuration components
.IP \(bu 2
\fI\%nxsdata\fP runs NeXus Data Writer
.IP \(bu 2
\fI\%nxsfileinfo\fP shows metadata of the NeXus/HDF5 file
.IP \(bu 2
\fI\%nxsetup\fP setups NeXDaTaS Tango Server environment
.UNINDENT
.sp
as well as the \fI\%nxstools\fP package which allows perform these operations
directly from a python code.
.nf
Source code: \fI\%https://github.com/nexdatas/nxstools\fP
Web page: \fI\%https://nexdatas.github.io/nxstools\fP
NexDaTaS Web page: \fI\%https://nexdatas.github.io\fP
.fi
.sp
.SH INSTALLATION
.sp
Install the dependencies:
.nf
pninexus or h5py, numpy, tango, sphinx
.fi
.sp
.SS From sources
.sp
Download the latest NXS Tools version from
.nf
\fI\%https://github.com/nexdatas/nxstools\fP
.fi
.sp
.sp
Extract sources and run
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ python setup.py install
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Debian packages
.sp
Debian \fIbookworm\fP, \fIbullseye\fP, \fIbuster\fP  or Ubuntu \fIlunar\fP, \fIjammy\fP, \fIfocal\fP packages can be found in the HDRI repository.
.sp
To install the debian packages, add the PGP repository key
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ sudo su
$ curl \-s http://repos.pni\-hdri.de/debian_repo.pub.gpg | gpg \-\-no\-default\-keyring \-\-keyring gnupg\-ring:/etc/apt/trusted.gpg.d/debian\-hdri\-repo.gpg \-\-import
$ chmod 644 /etc/apt/trusted.gpg.d/debian\-hdri\-repo.gpg
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and then download the corresponding source list
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ cd /etc/apt/sources.list.d
$ wget http://repos.pni\-hdri.de/bookworm\-pni\-hdri.list
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To install nxstools scripts
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get update
$ apt\-get install nxstools
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get update
$ apt\-get install nxstools3
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
for older python3 releases.
.sp
To install only the python3 package
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get update
$ apt\-get install python3\-nxstools
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and for python2
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get update
$ apt\-get install python\-nxstools
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
if exists.
.SS From pip
.sp
To install it from pip you can
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ python3 \-m venv myvenv
$ . myvenv/bin/activate

$ pip install nxstools
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Moreover it is also good to install
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ pip install pytango
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXCOLLECT
.SS Description
.sp
The nxscollect is  a command\-line tool dedicated to collect detector images.
.sp
The append sub\-commnand adds images of external formats into the NeXus master file.
The images to collect should be denoted by postrun fields inside NXcollection groups or given by command\-line parameters.
.sp
The link sub\-commnand creates external or internal link in the NeXus master file to NeXus data files.
.SS Synopsis for nxscollect append
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
        nxscollect append [\-h] [\-c COMPRESSION] [\-p PATH] [\-i INPUTFILES]
                       [\-\-separator SEPARATOR] [\-\-dtype DATATYPE]
                       [\-\-shape SHAPE] [\-s] [\-r] [\-\-test] [\-\-h5py]
                       [\-\-h5cpp]
                       [nexus_file [nexus_file ...]]


nexus_file            nexus files to be collected
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPRESSION\fR,\fB \ \-\-compression \ COMPRESSION
deflate compression rate from 0 to 9 (default: 2) or
<filterid>:opt1,opt2,... e.g. \-c 32008:0,2 for
bitshuffle with lz4
.TP
.BI \-p \ PATH\fR,\fB \ \-\-path \ PATH
nexus path for the output field, e.g.
/scan/instrument/pilatus/data
.TP
.BI \-i \ INPUTFILES\fR,\fB \ \-\-input_files \ INPUTFILES
input data files defined with a pattern or separated
by \(aq,\(aq e.g.\(aqscan_%05d.tif:0:100\(aq
.TP
.BI \-\-separator \ SEPARATOR
input data files separator (default: \(aq,\(aq)
.TP
.BI \-\-dtype \ DATATYPE
datatype of input data \- only for raw data, e.g.
\(aquint8\(aq
.TP
.BI \-\-shape \ SHAPE
shape of input data \- only for raw data, e.g.
\(aq[4096,2048]\(aq
.TP
.B  \-s\fP,\fB  \-\-skip_missing
skip missing files
.TP
.B  \-r\fP,\fB  \-\-replace_nexus_file
if it is set the old file is not copied into a file
with .__nxscollect__old__* extension
.TP
.B  \-\-test
execute in the test mode
.TP
.B  \-\-h5py
use h5py module as a nexus reader/writer
.TP
.B  \-\-h5cpp
use h5cpp module as a nexus reader/writer
.UNINDENT
.UNINDENT
.SS Examples of nxscollect append
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscollect append \-c1 /tmp/gpfs/raw/scan_234.nxs

nxscollect append \-c32008:0,2 /ramdisk/scan_123.nxs

nxscollect append \-\-test /tmp/gpfs/raw/scan_234.nxs

nxscollect append scan_234.nxs \-\-path /scan/instrument/pilatus/data  \-\-inputfiles \(aqscan_%05d.tif:0:100\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Synopsis for nxscollect link
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
        nxscollect link [\-h] [\-n NAME] [\-t TARGET] [\-r] [\-\-test]
                     [\-\-h5py] [\-\-h5cpp]
                     [nexus_file_path]

nexus_file_path       nexus files with the nexus directory to place the link
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-n \ NAME\fR,\fB \ \-\-name \ NAME
link name
.TP
.BI \-t \ TARGET\fR,\fB \ \-\-target \ TARGET
link target with the file name if external
.TP
.B  \-r\fP,\fB  \-\-replace_nexus_file
if it is set the old file is not copied into a file
with .__nxscollect__old__* extension
.TP
.B  \-\-test
execute in the test mode
.TP
.B  \-\-h5py
use h5py module as a nexus reader/writer
.TP
.B  \-\-h5cpp
use h5cpp module as a nexus reader
.UNINDENT
.UNINDENT
.SS Examples of nxscollect link
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscollect link scan_234.nxs://entry/instrument/lambda \-\-name data \-\-target lambda.nxs://entry/data/data

nxscollect link scan_123.nxs://entry:NXentry/instrument/eiger:NXdetector  \-\-target eiger.nxs://entry/data/data
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Synopsis for nxscollect vds
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscollect vds [\-h] [\-e TARGETFIELDS] [\-\-separator SEPARATOR]
            [\-t DTYPE] [\-s SHAPE] [\-f FILLVALUE] [\-p SHAPES]
            [\-o OFFSETS] [\-b BLOCKS] [\-c COUNTS] [\-d STRIDES]
            [\-l SLICES] [\-P TARGETSHAPES] [\-O TARGETOFFSETS]
            [\-B TARGETBLOCKS] [\-C TARGETCOUNTS] [\-D TARGETSTRIDES]
            [\-L TARGETSLICES] [\-r] [\-\-test] [\-\-h5cpp] [\-\-h5py]
            [nexus_file_path_field]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
create a virual dataset in the master file
.sp
nexus_file_path_field    nexus files with the nexus directory and a field name  to create the VDS field
.sp
Options:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-t \ DTYPE\fR,\fB \ \-\-dtype \ DTYPE
datatype of the VDS field, e.g. \(aquint8\(aq
.TP
.BI \-s \ SHAPE\fR,\fB \ \-\-shape \ SHAPE
shape of the VDS field, e.g. \(aq[U,4096,2048]\(aq or
U,4096,2048 where U means span along the field\(aq
.TP
.BI \-f \ FILLVALUE\fR,\fB \ \-\-fill\-value \ FILLVALUE
fill value for the gaps, default is 0
.TP
.BI \-e \ TARGETFIELDS\fR,\fB \ \-\-target\-fields \ TARGETFIELDS
external fields with their NeXus file paths defined
with a pattern or separated by \(aq,\(aq
e.g.\(aqscan_123/lambda_%05d.nxs://entry/data/\fI\%data:0:3\fP\(aq
.TP
.BI \-\-separator \ SEPARATOR
input data files separator (default: \(aq,\(aq)
.TP
.BI \-p \ SHAPES\fR,\fB \ \-\-shapes \ SHAPES
shapes in the VDS layout hyperslab for the
corresponding target fields with coordinates sepatated
by \(aq,\(aq and different fields separated by \(aq;\(aq, \(aq:\(aq or
spaces e.g.\(aq,,;,300,;,600,0\(aq where an empty coordinate
means 0
.TP
.BI \-o \ OFFSETS\fR,\fB \ \-\-offsets \ OFFSETS
offsets in the VDS layout hyperslab for the
corresponding target fields with coordinates sepatated
by \(aq,\(aq and different fields separated by \(aq;\(aq, \(aq:\(aq or
spaces e.g.\(aq,,;,300,;,600,0\(aq where an empty coordinate
means 0
.TP
.BI \-b \ BLOCKS\fR,\fB \ \-\-blocks \ BLOCKS
block sizes in the VDS layout hyperslab for the
corresponding target fields with coordinates sepatated
by \(aq,\(aq and different fields separated by \(aq;\(aq, \(aq:\(aq or
spaces e.g. \(aq,256,512;,256,512;,256,512\(aq where an
empty coordinate means 1
.TP
.BI \-c \ COUNTS\fR,\fB \ \-\-counts \ COUNTS
count numbers in the VDS layout hyperslabfor the
corresponding target fields with coordinates sepatated
by \(aq,\(aq and different fields separated by \(aq;\(aq, \(aq:\(aq or
spaces e.g. \(aq,1,1;,1,1;,1,1\(aq where an empty coordinate
means span along the layout
.TP
.BI \-d \ STRIDES\fR,\fB \ \-\-strides \ STRIDES
stride sizes in the VDS layout hyperslabfor the
corresponding target fields with coordinates sepatated
by \(aq,\(aq and different fields separated by \(aq;\(aq, \(aq:\(aq or
spaces e.g. \(aq,,;,,;,,\(aq where an empty coordinate means
1
.TP
.BI \-l \ SLICES\fR,\fB \ \-\-slices \ SLICES
mapping slices in the VDS layoutfor the corresponding
target fields with coordinates sepatated by \(aq,\(aq and
different fields separated by \(aq;\(aq or spaces e.g.
\(aq:,0:50,: :,50:100,:\(aq where U means span along the
layout
.TP
.BI \-P \ TARGETSHAPES\fR,\fB \ \-\-target\-shapes \ TARGETSHAPES
field shapes with coordinates sepatated by \(aq,\(aq and
different fields separated by \(aq;\(aq, \(aq:\(aq or spaces
e.g.\(aq,,;,300,;,600,0\(aq
.TP
.BI \-O \ TARGETOFFSETS\fR,\fB \ \-\-target\-offsets \ TARGETOFFSETS
offsets in the view hyperslab of target fieldswith
coordinates sepatated by \(aq,\(aq and different fields
separated by \(aq;\(aq, \(aq:\(aq or spaces e.g.\(aq,,;,300,;,600,0\(aq
where an empty coordinate means 0
.TP
.BI \-B \ TARGETBLOCKS\fR,\fB \ \-\-target\-blocks \ TARGETBLOCKS
block sizes in the view hyperslab of target fields
with coordinates sepatated by \(aq,\(aq and different fields
separated by \(aq;\(aq, \(aq:\(aq or spaces e.g.
\(aq,256,512;,256,512;,256,512\(aq where an empty coordinate
means 1
.TP
.BI \-C \ TARGETCOUNTS\fR,\fB \ \-\-target\-counts \ TARGETCOUNTS
count numbers in the view hyperslab of target fields
with coordinates sepatated by \(aq,\(aq and different fields
separated by \(aq;\(aq, \(aq:\(aq or spaces e.g. \(aq,1,1;,1,1;,1,1\(aq
where an empty coordinate means span along the layout
.TP
.BI \-D \ TARGETSTRIDES\fR,\fB \ \-\-target\-strides \ TARGETSTRIDES
stride sizes numbers in the view hyperslab of target
fields with coordinates sepatated by \(aq,\(aq and different
fields separated by \(aq;\(aq, \(aq:\(aq or spaces e.g. \(aq,,;,,;,,\(aq
where an empty coordinate means 1
.TP
.BI \-L \ TARGETSLICES\fR,\fB \ \-\-target\-slices \ TARGETSLICES
view slices of target fields with coordinates
sepatated by \(aq,\(aq and different fields separated by \(aq;\(aq
or spaces e.g. \(aq:,0:50,: :,0:50,:\(aq where U means span
along the layout
.TP
.B  \-r\fP,\fB  \-\-replace\-nexus\-file
if it is set the old file is not copied into a file
with .__nxscollect__old__* extension
.TP
.B  \-\-test
execute in the test mode
.TP
.B  \-\-h5cpp
use h5cpp module as a nexus reader
.TP
.B  \-\-h5py
use h5py module as a nexus reader/writer
.UNINDENT
.UNINDENT
.UNINDENT
.SS Examples of nxscollect vds
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscollect vds scan_234.nxs://entry/instrument/eiger/data  \-\-shape \(aq1000,2048,1024\(aq \-\-dtype uint32 \-\-target\-fields \(aqeiger_%05d.nxs://entry/data/data:1:10\(aq \-\-shapes \(aq100,,:100,,:100,,:100,,:100,,:100,,:100,,:100,,:100,,:100,,\(aq   \-\-offsets \(aq0,,:100,,:200,,:300,,:400,,:500,,:600,,:700,,:800,,:900,,\(aq

    \- creates VDS (shape [1000,2048,1024]) of ten nexus files (shape [100,2048,1024]) merged in their first dimension

nxscollect vds scan_234.nxs://entry/instrument/lambda/data  \-\-shape \(aq100,300,762\(aq  \-\-dtype uint32 \-\-target\-fields \(aqlambda_%05d.nxs://entry/data/data:0:2\(aq \-\-shapes \(aq,,250:,,250:,,250\(aq   \-\-offsets \(aq,,:,,256:,,512\(aq  \-\-counts \(aqU,,:U,,:U,,\(aq \-f 1

    \- creates VDS (shape [100,300,762]) of three nexus files (shape [100,300,250]) merged in their third dimension,
        separated with a 6 pixel gap of 1 values and unlimited first dimension

nxscollect vds scan_234.nxs://entry/instrument/percival/data  \-\-shape \(aq4000,1600,2000\(aq \-\-dtype int16 \-\-target\-fields \(aqpercival_%05d.nxs://entry/data/data:1:4\(aq \-\-shapes \(aq1000,,:1000,,:1000,,:1000,,\(aq   \-\-offsets \(aq0,,:1,,:2,,:3,,\(aq  \-\-counts \(aqU,,:U,,:U,,:U,,\(aq \-\-strides \(aq4,,:4,,:4,,:4,,\(aq

    \- creates VDS (shape [1000,1600,2000]) of three nexus files (shape [1000,1600,2000])
         merged in their the first dimension with interlaying frames
         and unlimited first dimension
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCONFIG
.SS Description
.sp
The nxsconfig program
is a command\-line interface to NXS Configuration Tango Server.
It allows one to read XML configuration datasources
and components. It also gives possibility to
perform the process of component merging.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsconfig <command> [\-s <config_server>]  [\-d] [\-r] [\-m] [\-n] [\-p] [<name1>] [<name2>] [<name3>] ...
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Commands:
.INDENT 7.0
.TP
.B list [\-s <config_server>] [\-m] [\-p] [\-n]
list names of available components
.TP
.B list \-d [\-s <config_server>] [\-n]
list names of available datasources
.TP
.B list \-r [\-s <config_server>] [\-n]
list names of available profiles
.TP
.B show [\-s <config_server>] [\-m] [\-o <dir>] component_name1 component_name2 ...
show components with given names
.TP
.B show \-d [\-s <config_server>]  [\-o <dir>] dsource_name1 dsource_name2 ...
show datasources with given names
.TP
.B show \-r [\-s <config_server>]  [\-o <dir>] profile_name1 profile_name2 ...
show profiles with given names
.TP
.B upload [\-s <config_server>] [\-m] [\-i <dir>] [\-f] component_name1 component_name2 ...
load components from given files
.TP
.B upload \-d [\-s <config_server>]  [\-i <dir>] [\-f] dsource_name1 dsource_name2 ...
load datasources from given files
.TP
.B upload \-r [\-s <config_server>]  [\-i <dir>] [\-f] profile_name1 profile_name2 ...
load profiles from given files
.TP
.B get [\-s <config_server>]  [\-n] component_name1 component_name2 ...
get merged configuration of components
.TP
.B delete [\-s <config_server>] [\-f] component_name1 component_name2 ...
delete components with given names
.TP
.B delete \-d [\-s <config_server>] [\-f] dsource_name1 dsource_name2 ...
delete datasources with given names
.TP
.B delete \-r [\-s <config_server>] [\-f] profile_name1 profile_name2 ...
delete profiles with given names
.TP
.B sources [\-s <config_server>] [\-m] [\-n] component_name1 component_name2 ...
get a list of component datasources
.TP
.B components [\-s <config_server>] [\-n] component_name1 component_name2 ...
get a list of dependent components
.TP
.B variables [\-s <config_server>] [\-m] [\-n] component_name1 component_name2 ...
get a list of component variables
.TP
.B data [\-s <config_server>] json_data
set values of component variables
.TP
.B record [\-s <config_server>] [\-n] component_name1
get a list of datasource record names from component
.TP
.B record \-d [\-s <config_server>] [\-n] datasource_name1
get a list of datasource record names
.TP
.B servers [\-s <config_server/host>] [\-n]
get lists of configuration servers from the current tango host
.TP
.B describe [\-s <config_server>] [\-m | \-p] [\-n] component_name1 component_name2 ...
show all parameters of given components
.TP
.B describe|info \-d [\-s <config_server>] [\-n] dsource_name1 dsource_name2 ...
show all parameters of given datasources
.TP
.B info [\-s <config_server>] [\-m | \-p] [\-n] component_name1 component_name2 ...
show source parameters of given components
.TP
.B info \-r [\-s <config_server>]  [\-n] profile_name1 profile_name2 ...
show general parameters of given profiles
.TP
.B geometry [\-s <config_server>] [\-m | \-p] [\-n] component_name1 component_name2 ...
show transformation parameters of given components
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-s \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.B  \-d\fP,\fB  \-\-datasources
perform operation on datasources
.TP
.B  \-m\fP,\fB  \-\-mandatory
make use mandatory components as well
.TP
.B  \-p\fP,\fB  \-\-private
make use private components, i.e. starting with \(aq__\(aq
.TP
.B  \-n\fP,\fB  \-\-no\-newlines
split result with space characters
.TP
.B  \-f\fP,\fB  \-\-force
do not ask
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsconfig list \-s p02/xmlconfigserver/exp.01 \-d
nxsconfig info
nxsconfig geometry
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSCREATE
.SS Description
.sp
The nxscreate program allows one to create simple datasources and components.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate  <command> [ <options>]  [<arg1> [<arg2>  ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following commands are available: clientds, tangods, deviceds, onlineds, onlinecp, poolds, stdcomp, comp, secopcp, compare.
.SS nxscreate clientds
.sp
It creates a set of CLIENT datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate clientds [options] [name1] [name2]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c (mandatory w/o <name1>)
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first\fB= FIRST
first index (mandatory w/o <name1>)
.TP
.BI \-l \ LAST\fR,\fB \ \-\-last\fB= LAST
last index (mandatory w/o <name1>)
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing datasources
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-s \ DSOURCE\fR,\fB \ \-\-datasource\-prefix\fB= DSOURCE
datasource prefix, i.e. counter (useful for avoiding duplicated datasource names)
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.B  \-m\fP,\fB  \-\-minimal_device
device name without first \(aq0\(aq
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate clientds starttime \-b
nxscreate clientds title \-d /home/user/xmldir
nxscreate clientds \-v exp_c \-f1 \-l4 \-b
nxscreate clientds \-v hasppXX:10000/expchan/vfcadc_exp/ \-f1 \-l8  \-m \-b \-s exp_vfc
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate tangods
.sp
It creates a set of TANGO datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate tangods [options]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <datasource> is \(aqexp_mot\(aq
.IP \(bu 2
default <host>, <port> are taken from <server>
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c (mandatory)
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first\fB= FIRST
first index
.TP
.BI \-l \ LAST\fR,\fB \ \-\-last\fB= LAST
last index
.TP
.BI \-a \ ATTRIBUTE\fR,\fB \ \-\-attribute\fB= ATTRIBUTE
tango attribute name
.TP
.BI \-s \ DATASOURCE\fR,\fB \ \-\-datasource\-prefix\fB= DATASOURCE
datasource\-prefix (useful for avoiding duplicated
datasource names)
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing datasources
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-u \ HOST\fR,\fB \ \-\-host\fB= HOST
tango host name
.TP
.BI \-t \ PORT\fR,\fB \ \-\-port\fB= PORT
tango host port
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-g \ GROUP\fR,\fB \ \-\-group\fB= GROUP
device group name
.TP
.BI \-e \ ELEMENTTYPE\fR,\fB \ \-\-elementtype\fB= ELEMENTTYPE
element type, i.e. attribute, property or command
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate tangods \-f1 \-l2  \-v p09/motor/exp. \-s exp_mot
nxscreate tangods \-f1 \-l32  \-v p02/motor/eh1a. \-s exp_mot \-b
nxscreate tangods \-f1 \-l32  \-v p01/motor/oh1. \-s exp_mot \-b
nxscreate tangods \-f1 \-l8  \-v pXX/slt/exp. \-s slt_exp_ \-u hasppXX.desy.de \-b
nxscreate tangods \-v petra/globals/keyword \-s source_current \-u haso228 \-t 10000 \e
                  \-a BeamCurrent \-b \-r p09/nxsconfigserver/haso228 \-o \-g __CLIENT__
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate deviceds
.sp
It creates a set of TANGO datasources for all device attributes.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate deviceds [options] [dv_attr1 [dv_attr2 [dv_attr3 ...]]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without <dv_attr1>: datasources for all attributes are created
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <datasource> is \(aqexp_mot\(aq
.IP \(bu 2
default <host>, <port> are taken from <server>
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\fB= DEVICE
device, i.e. p09/pilatus300k/01 (mandatory)
.TP
.BI \-o \ DATASOURCE\fR,\fB \ \-\-datasource\-prefix\fB= DATASOURCE
datasource\-prefix
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-s \ HOST\fR,\fB \ \-\-host\fB= HOST
tango host name
.TP
.BI \-t \ PORT\fR,\fB \ \-\-port\fB= PORT
tango host port
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.B  \-n\fP,\fB  \-\-no\-group
don\(aqt create common group with a name of datasource
prefix
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate deviceds  \-v p09/pilatus/haso228k
nxscreate deviceds  \-v p09/lambda2m/haso228k  \-s haslambda \-b
nxscreate deviceds  \-v p09/pilatus300k/haso228k \-b \-o pilatus300k_ RoI Energy ExposureTime
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate onlineds
.sp
It creates a set of motor datasources from an online xml file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds [options] inputFile
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
with \-d <directory>: datasources are created on the local filesystem
.IP \(bu 2
without \-b or \-d <directory>: run in the test mode
.IP \(bu 2
default <inputFile> is \(aq/online_dir/online.xml\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.sp
\fIonlineds\fP overwrites existing datasources
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.B  \-t\fP,\fB  \-\-noclientlike
set motor tango datasources to be non __CLIENT__ like
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output directory where datasources will be saved
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-e \ EXTERNAL\fR,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.TP
.B  \-\-verbose
printout verbose mode
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds \-b
nxscreate onlineds \-b \-t
nxscreate onlineds \-d /home/user/xmldir
nxscreate onlineds
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate poolds
.sp
It creates a set of motor datasources from a sardana pool device channels.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds [options] [channel [channel]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
with \-d <directory>: datasources are created on the local filesystem
.IP \(bu 2
without \-b or \-d <directory>: run in the test mode
.IP \(bu 2
default <channel> is \(aqALL\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <pool> is taken from Tango DB
.UNINDENT
.sp
\fIpoolds\fP overwrites existing datasources
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.B  \-t\fP,\fB  \-\-noclientlike
set motor tango datasources to be non __CLIENT__ like
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output directory where datasources will be saved
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-p \ POOL\fR,\fB \ \-\-pool\fB= POOL
sardana pool device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate poolds \-b
nxscreate poolds \-b \-t
nxscreate poolds \-d \-s p09/pool/haso228
nxscreate poolds \-b Motor CTExpChannel
nxscreate poolds \-b mot01 mot03
nxscreate poolds
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate onlinecp
.sp
It creates a detector component from the online.xml file
and its set of datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlinecp [options] inputFile
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without \(aq\-c <component>\(aq: show a list of possible components
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <inputFile> is \(aq/online_dir/online.xml\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPONENT\fR,\fB \ \-\-component\fB= COMPONENT
component namerelated to the device name from
<inputFile>
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-t \ CPTYPE\fR,\fB \ \-\-type \ CPTYPE
component type
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device \ DEVICE
device, i.e. p09/pilatus300k/01
.TP
.BI \-u \ HOST\fR,\fB \ \-\-host \ HOST
tango host name
.TP
.BI \-w \ PORT\fR,\fB \ \-\-port \ PORT
tango host port
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing component
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-e \ EXTERNAL\fR,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.TP
.BI \-y \ ENTRYNAME\fR,\fB \ \-\-entryname \ ENTRYNAME
entry group name (prefix)
.TP
.BI \-i \ INSNAME\fR,\fB \ \-\-insname \ INSNAME
instrument group name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlinecp
nxscreate onlinecp \-c lambda
nxscreate onlinecp \-c pilatus \-b
nxscreate onlinecp \-c lambda \-d /home/user/xmldir/
nxscreate onlinecp \-c lmbd \-t lambda \-b
nxscreate onlinecp \-c lmbd \-t lambda \-v p00/lmbd/1 \-u haso000 \-w 10000 \-b
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate stdcomp
.sp
It creates a standard component from the xml template files
and its set of datasources.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate stdcomp [options] [name1 value1 [name2 value2] ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
without \(aq\-t <type>\(aq: show a list of possible component types
.IP \(bu 2
with \(aq\-t <type>  and without \-c <component>: show a list of component variables for the given component type
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
[name1 value1 [name2 value2] ...] sequence  defines component variable values
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ COMPONENT\fR,\fB \ \-\-component\fB= COMPONENT
component name
.TP
.BI \-t \ CPTYPE\fR,\fB \ \-\-type\fB= CPTYPE
component type
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package\fB= XMLPACKAGE
xml template package
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing component
.TP
.B  \-m\fP,\fB  \-\-mandatory
set the component as mandatory
.TP
.B  \-b\fP,\fB  \-\-database
store datasources in Configuration Server database
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output datasource directory
.TP
.BI \-e \ EXTERNAL\fR,\fB \ \-\-external\fB= EXTERNAL
external configuration server
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-y \ ENTRYNAME\fR,\fB \ \-\-entryname \ ENTRYNAME
entry group name (prefix)
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate stdcomp
nxscreate stdcomp \-t source
nxscreate stdcomp \-t slit \-c \-b front_slit1 xgap slt1x ygap slt1y
nxscreate stdcomp \-t default \-c default \-b \-m
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate comp
.sp
It creates a set of simple components.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate comp [options] [name1] [name2] ...
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <directory> is \(aq.\(aq
.IP \(bu 2
default <server> is taken from Tango DB
.IP \(bu 2
default <strategy> is step
.IP \(bu 2
default <type> is NX_FLOAT
.IP \(bu 2
default <chunk> is SCALAR
.IP \(bu 2
default <nexuspath> is \(dq/$var.entryname#\(aqscan\(aq$var.serialno:NXentry/instrument/collection/\(dq
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-v \ DEVICE\fR,\fB \ \-\-device\-prefix\fB= DEVICE
device prefix, i.e. exp_c
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first\fB= FIRST
first index
.TP
.BI \-l \ LAST\fR,\fB \ \-\-last\fB= LAST
last index
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing components
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory\fB= DIRECTORY
output component directory
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix\fB= FILE
file prefix, i.e. counter
.TP
.BI \-n \ NEXUSPATH\fR,\fB \ \-\-nexuspath\fB= NEXUSPATH
nexus path with field name
.TP
.BI \-g \ STRATEGY\fR,\fB \ \-\-strategy\fB= STRATEGY
writing strategy, i.e. STEP, INIT, FINAL, POSTRUN
.TP
.BI \-s \ DATASOURCE\fR,\fB \ \-\-datasource\-prefix \ DATASOURCE
datasource\-prefix or datasourcename
.TP
.BI \-t \ TYPE\fR,\fB \ \-\-type\fB= TYPE
nexus type of the field
.TP
.BI \-u \ UNITS\fR,\fB \ \-\-units\fB= UNITS
nexus units of the field
.TP
.B  \-k\fP,\fB  \-\-links
create datasource links
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server\fB= SERVER
configuration server device name
.TP
.BI \-c \ CHUNK\fR,\fB \ \-\-chunk\fB= CHUNK
chunk format, i.e. SCALAR, SPECTRUM, IMAGE
.TP
.B  \-m\fP,\fB  \-\-minimal_device
device name without first \(aq0\(aq
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate comp counter
nxscreate comp \-f1 \-l3 \-v exp_c \-b
nxscreate comp lambda \-d /home/user/xmldir/
nxscreate comp \-n \(dq/\e$var.entryname#\(aqscan\(aq\e$var.serialno:NXentry/instrument/sis3302:NXdetector/collection:NXcollection/\(aq \-v sis3302_1_roi \-f1 \-l4  \-g STEP \-t NX_FLOAT64 \-k \-b \-m
nxscreate comp \-n \(dq/\e$var.entryname#\(aqscan\(aq\e$var.serialno:NXentry/instrument/eh1_mca01:NXdetector/data\(dq eh1_mca01 \-g STEP \-t NX_FLOAT64 \-i \-b \-c SPECTRUM
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate secopcp
.sp
It creates a  component or components describing modules of the secop node.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate secopcp [\-h] [\-l] [\-o] [\-a] [\-q] [\-w] [\-c COMPONENT] [\-e PARAMSTRATEGY] [\-g STRATEGY] [\-m TIMEOUT] [\-s SAMPLENAME] [\-s SAMPLEENVNAME] [\-k MEANINGS] [\-v ENVIRONMENTS] [\-f FIRST] [\-z TRANSATTRS] [\-p XMLPACKAGE] [\-y ENTRYNAME] [\-i INSNAME] [\-d DIRECTORY] [\-j JSON] [\-x FILE] [\-n] [\-b] [\-u HOST] [\-t PORT] [\-r SERVER] [component_name ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
with \-b: datasources are created in Configuration Server database
.IP \(bu 2
without \-b: datasources are created on the local filesystem in \-d <directory>
.IP \(bu 2
default <port> is 5000
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-l\fP,\fB  \-\-list
list modules of the given node
.TP
.B  \-o\fP,\fB  \-\-overwrite
overwrite existing components
.TP
.B  \-a\fP,\fB  \-\-can\-fail
can fail strategy flag
.TP
.B  \-q\fP,\fB  \-\-dynamic
create dynamic links
.TP
.B  \-\-sample\-nxdata
create NXdata in NXsample
.TP
.BI \-c \ COMPONENT\fR,\fB \ \-\-component \ COMPONENT
component namesecop component name
.TP
.BI \-e \ PARAMSTRATEGY\fR,\fB \ \-\-param\-strategy \ PARAMSTRATEGY
sensor parameter strategy, i.e. INIT, STEP or FINAL, default: INIT
.TP
.BI \-g \ STRATEGY\fR,\fB \ \-\-strategy \ STRATEGY
sensor value strategy, i.e. INIT, STEP or FINAL, default: INIT
.TP
.BI \-m \ TIMEOUT\fR,\fB \ \-\-timeout \ TIMEOUT
sensor minimum timeout default: 0.001
.TP
.BI \-s \ SAMPLENAME\fR,\fB \ \-\-sample \ SAMPLENAME
sample name
.TP
.BI \-w \ SAMPLEENVNAME\fR,\fB \ \-\-sample\-environment \ SAMPLEENVNAME
sample environment name
.TP
.BI \-k \ MEANINGS\fR,\fB \ \-\-links \ MEANINGS
NXlog links of physical quantities to sensors
separated by comman. Default:
\(aqtemperature,magnetic_field,electric_field,stress_field,pressure\(aq
.TP
.BI \-v \ ENVIRONMENTS\fR,\fB \ \-\-environments \ ENVIRONMENTS
NXenvironment links of physical quantities separated
by comman. Default: \(aqtemperature,magnetic_field\(aq
.TP
.BI \-f \ FIRST\fR,\fB \ \-\-first \ FIRST
first linked targets separated by comman
.TP
.BI \-z \ TRANSATTRS\fR,\fB \ \-\-transformation\-attributes \ TRANSATTRS
a JSON dictionary with transformation parameters i.e, \(dqtransformation_type\(dq, \(dqvector\(dq, \(dqdepends_on\(dq. Default:
{\(dqrotation_z\(dq:{\(dqtransformation_type\(dq:\(dqrotation\(dq,\(dqvector\(dq:[0,\-1,0]}}
.TP
.BI \-p \ XMLPACKAGE\fR,\fB \ \-\-xml\-package \ XMLPACKAGE
xml template package
.TP
.BI \-y \ ENTRYNAME\fR,\fB \ \-\-entryname \ ENTRYNAME
entry group name (prefix)
.TP
.BI \-i \ INSNAME\fR,\fB \ \-\-insname \ INSNAME
instrument group name
.TP
.BI \-d \ DIRECTORY\fR,\fB \ \-\-directory \ DIRECTORY
output component directory
.TP
.BI \-j \ JSON\fR,\fB \ \-\-json\-file \ JSON
json configuration file
.TP
.BI \-x \ FILE\fR,\fB \ \-\-file\-prefix \ FILE
file prefix, i.e. counter
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.TP
.B  \-b\fP,\fB  \-\-database
store components in Configuration Server database
.TP
.BI \-u \ HOST\fR,\fB \ \-\-host \ HOST
secop host name
.TP
.BI \-t \ PORT\fR,\fB \ \-\-port \ PORT
secop host port
.TP
.BI \-r \ SERVER\fR,\fB \ \-\-server \ SERVER
configuration server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate secopcp
nxscreate secopcp \-l

    \- list all modules of the given node

nxscreate secopcp \-c temp_node \-d . \-j secop_node.json

    \- create the all secop components in the local directory for the node configured with the json file

nxscreate secopcp T \-t 5001 \-b

    \- create the component for the T secop module  in the NXSConfigServer database for the node on the port 5000

nxscreate secopcp \-d /home/user/xmldir/

    \- create the all secop components in the given directory
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxscreate compare
.sp
It compares two online.xml files
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate compare [\-h] [\-n] online_file [online_file]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
default: second <online_file> is \(aq/online_dir/online.xml\(aq if only file is given
.UNINDENT
.INDENT 0.0
.TP
.B positional arguments:
online_file    online.xml files
.TP
.B optional arguments:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-n\fP,\fB  \-\-nolower
do not change aliases into lower case
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate onlineds /online_dir/online.xml online.xml
nxscreate compare online.xml
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSDATA
.SS Description
.sp
The nxsdata program is a command\-line interface to Nexus Data Tango Server.
Program allows one to store NeXuS Data in H5 files.
The writer provides storing data from other Tango devices, various databases
as well as passed by a user client via JSON strings.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsdata <command> [\-s <nexus_server>]  [<arg1> [<arg2>  ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Commands:
.INDENT 7.0
.TP
.B openfile [\-s <nexus_server>]  <file_name>
open new H5 file
.TP
.B setdata [\-s <nexus_server>] <json_data_string>
assign global JSON data
.TP
.B openentry [\-s <nexus_server>] <xml_config>
create new entry
.TP
.B record [\-s <nexus_server>]  <json_data_string>
record one step with step JSON data
.TP
.B closeentry [\-s <nexus_server>]
close the current entry
.TP
.B closefile [\-s <nexus_server>]
close the current file
.TP
.B servers [\-s <nexus_server/host>]
get lists of tango data servers from the current tango host
.UNINDENT
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-s \ SERVER\fR,\fB \ \-\-server\fB= SERVER
tango data server device name
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsdata openfile \-s p02/tangodataserver/exp.01  /user/data/myfile.h5
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSFILEINFO
.SS Description
.sp
The nxsfileinfo program show metadata from nexus files
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo <command> [options] <nexus_file_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following commands are available: general, field, metadata, origdatablock, sample, instrument, attachment
.SS nxsfileinfo general
.sp
It shows general information for he nexus file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo general <nexus_file_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-\-h5py
use h5py module as a nexus reader
.TP
.B  \-\-h5cpp
use h5cpp module as a nexus reader
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo general saxs_ref1_02.nxs
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo field
.sp
It shows field information for the nexus file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo field [options]  <file_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-c \ HEADERS\fR,\fB \ \-\-columns\fB= HEADERS
names of column to be shown (separated by commas without spaces). The possible names are: depends_on, dtype, full_path, nexus_path, nexus_type, shape, source, source_name, source_type, strategy, trans_type, trans_offset, trans_vector, units, value
.TP
.BI \-f \ FILTERS\fR,\fB \ \-\-filters\fB= FILTERS
full_path filters (separated by commas without spaces). Default: \(aq*\(aq. E.g. \(aq\fI:NXsample/\fP\(aq
.TP
.BI \-v \ VALUES\fR,\fB \ \-\-values\fB= VALUES
field names which value should be stored (separated by commas without spaces). Default: depends_on
.TP
.B  \-g\fP,\fB  \-\-geometry
show fields with geometry full_path filters, i.e. \fI:NXtransformations/\fP,*/depends_on. It works only when \-f is not defined
.TP
.B  \-s\fP,\fB  \-\-source
show datasource parameters
.TP
.B  \-\-h5py
use h5py module as a nexus reader
.TP
.B  \-\-h5cpp
use h5cpp module as a nexus reader
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo field /tmp/saxs_ref1_02.nxs
nxsfileinfo field /user/data/myfile.nxs \-g
nxsfileinfo field /user/data/myfile.nxs \-s
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo metadata
.sp
It shows metadata of the nexus file.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo metadata [options] <file_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-a \ ATTRS\fR,\fB \ \-\-attributes \ ATTRS
names of field or group attributes to be show (separated by commas without spaces). The default takes all attributes
.TP
.BI \-n \ NATTRS\fR,\fB \ \-\-hidden\-attributes \ NATTRS
names of field or group attributes to be hidden (separated by commas without spaces). The default: \(aqnexdatas_source,nexdatas_strategy\(aq
.TP
.BI \-v \ VALUES\fR,\fB \ \-\-values \ VALUES
field names of more dimensional datasets which value should be shown (separated by commas without spaces)
.TP
.BI \-z \ KEYWORDS\fR,\fB \ \-\-keywords \ KEYWORDS
dataset keywords separated by commas.
.TP
.BI \-w \ OWNERGROUP\fR,\fB \ \-\-owner\-group \ OWNERGROUP
owner group name. Default is {beamtimeid}\-part
.TP
.BI \-c \ ACCESSGROUPS\fR,\fB \ \-\-access\-groups \ ACCESSGROUPS
access group names separated by commas. Default is
{beamtimeid}\-clbt,{beamtimeId}\-dmgt,{beamline}dmgt
.TP
.BI \-g \ GROUP_POSTFIX\fR,\fB \ \-\-group\-postfix \ GROUP_POSTFIX
postfix to be added to NeXus group name. The default: \(aqParameters\(aq
.TP
.BI \-t \ ENTRYCLASSES\fR,\fB \ \-\-entry\-classes \ ENTRYCLASSES
names of entry NX_class to be shown (separated by commas without spaces). If name is \(aq\(aq all groups are shown. The default: \(aqNXentry\(aq
.TP
.BI \-e \ ENTRYNAMES\fR,\fB \ \-\-entry\-names \ ENTRYNAMES
names of entry groups to be shown (separated by commas without spaces). If name is \(aq\(aq all groups are shown. The default: \(aq\(aq
.TP
.B  \-m\fP,\fB  \-\-raw\-metadata
do not store NXentry as scientificMetadata
.TP
.B  \-\-add\-empty\-units
add empty units for fields without units
.TP
.B  \-\-oned
add 1d values to scientificMetadata
.TP
.BI \-\-max\-oned\-size \ MAXONEDSIZE
add min and max (or first and last) values of 1d records to scientificMetadata if its size excides \-\-max\-oned\-size value
.TP
.BI \-p \ PID\fR,\fB \ \-\-pid \ PID
dataset pid
.TP
.BI \-i \ BEAMTIMEID\fR,\fB \ \-\-beamtimeid \ BEAMTIMEID
beamtime id
.TP
.B  \-u\fP,\fB  \-\-pid\-with\-uuid
generate pid with uuid
.TP
.B  \-f\fP,\fB  \-\-pid\-with\-filename
generate pid with file name
.TP
.BI \-q \ TECHNIQUES\fR,\fB \ \-\-techniques \ TECHNIQUES
names of techniques (separated by commas without
spaces).The default: \(aq\(aq
.TP
.BI \-j \ SAMPLEID\fR,\fB \ \-\-sample\-id \ SAMPLEID
sampleId
.TP
.B  \-\-sample\-id\-from\-name
get sampleId from the sample name
.TP
.BI \-y \ INSTRUMENTID\fR,\fB \ \-\-instrument\-id \ INSTRUMENTID
instrumentId
.TP
.B  \-\-raw\-instrument\-id
leave raw instrument id
.TP
.BI \-b \ BEAMTIMEMETA\fR,\fB \ \-\-beamtime\-meta \ BEAMTIMEMETA
beamtime metadata file
.TP
.BI \-s \ SCIENTIFICMETA\fR,\fB \ \-\-scientific\-meta \ SCIENTIFICMETA
scientific metadata file
.TP
.BI \-o \ OUTPUT\fR,\fB \ \-\-output \ OUTPUT
output scicat metadata file
.TP
.BI \-r \ RELPATH\fR,\fB \ \-\-relative\-path \ RELPATH
relative path to the scan files
.TP
.BI \-x \ CHMOD\fR,\fB \ \-\-chmod \ CHMOD
json metadata file mod bits, e.g. 0o662
.TP
.BI \-\-copy\-map \ COPYMAP
json or yaml map {output: input} or [[output, input],]
or a text file list to re\-arrange metadata
.TP
.BI \-\-copy\-map\-field \ COPYMAPFIELD
field json or yaml with map {output: input} or [[output, input],]
or a text file list to re\-arrange metadata. The default:
\(aqscientificMetadata.nxsfileinfo_parameters.copymap.value\(aq
.TP
.B  \-\-copy\-map\-error
Raise an error when the copy map file does not exist
.TP
.BI \-\-copy\-map\-file \ COPYMAPFILE
json or yaml file containing the copy map, see also \-\-copy\-map
.TP
.BI \-f \ FILEFORMAT\fR,\fB \ \-\-file\-format \ FILEFORMAT
input file format, e.g. \(aqnxs\(aq. Default is defined by the file extension
.TP
.B  \-\-proposal\-as\-proposal
Store the DESY proposal as the SciCat proposal
.TP
.B  \-\-h5py
use h5py module as a nexus reader
.TP
.B  \-\-h5cpp
use h5cpp module as a nexus reader
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo metadata /user/data/myfile.nxs
nxsfileinfo metadata /user/data/myfile.fio
nxsfileinfo metadata /user/data/myfile.nxs \-p \(aqGroup\(aq
nxsfileinfo metadata /user/data/myfile.nxs \-s
nxsfileinfo metadata /user/data/myfile.nxs \-a units,NX_class
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo origdatablock
.sp
It generates description of all scan files
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo origdatablock [options] <scan_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-p \ PID\fR,\fB \ \-\-pid \ PID
dataset pid
.TP
.BI \-o \ OUTPUT\fR,\fB \ \-\-output \ OUTPUT
output scicat metadata file
.TP
.BI \-w \ OWNERGROUP\fR,\fB \ \-\-owner\-group \ OWNERGROUP
owner group name. Default is {beamtimeid}\-part
.TP
.BI \-c \ ACCESSGROUPS\fR,\fB \ \-\-access\-groups \ ACCESSGROUPS
access group names separated by commas. Default is
{beamtimeid}\-clbt,{beamtimeId}\-dmgt
.TP
.BI \-s \ SKIP\fR,\fB \ \-\-skip \ SKIP
filters for files to be skipped (separated by commas
without spaces). Default: \(aq\(aq. E.g.
\(aq\fI\&.pyc,\fP~\(aq
.TP
.BI \-a \ ADD\fR,\fB \ \-\-add \ ADD
list of files to be added (separated by commas
without spaces). Default: \(aq\(aq. E.g.
\(aqscan1.nxs,scan2.nxs\(aq
.TP
.BI \-r \ RELPATH\fR,\fB \ \-\-relative\-path \ RELPATH
relative path to the scan files
.TP
.BI \-x \ CHMOD\fR,\fB \ \-\-chmod \ CHMOD
json metadata file mod bits, e.g. 0o662
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo origdatablock /user/data/scan_12345
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo sample
.sp
It generates description of sample
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo sample [options]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-s \ SAMPLEID\fR,\fB \ \-\-sample\-id \ SAMPLEID
sample id
.TP
.BI \-i \ BEAMTIMEID\fR,\fB \ \-\-beamtimeid \ BEAMTIMEID
beamtime id
.TP
.BI \-b \ BEAMLINE\fR,\fB \ \-\-beamline \ BEAMLINE
beamline
.TP
.BI \-d \ DESCRIPTION\fR,\fB \ \-\-description \ DESCRIPTION
sample description
.TP
.BI \-r \ OWNER\fR,\fB \ \-\-owner \ OWNER
sample owner
.TP
.B  \-p\fP,\fB  \-\-published
sample is published
.TP
.BI \-w \ OWNERGROUP\fR,\fB \ \-\-owner\-group \ OWNERGROUP
owner group name. Default is {beamtimeid}\-dmgt
.TP
.BI \-c \ ACCESSGROUPS\fR,\fB \ \-\-access\-groups \ ACCESSGROUPS
access group names separated by commas. Default is {be
amtimeId}\-dmgt,{beamtimeid}\-clbt,{beamtimeId}\-part,{be
amline}dmgt,{beamline}staff
.TP
.BI \-x \ CHMOD\fR,\fB \ \-\-chmod \ CHMOD
json metadata file mod bits, e.g. 0o662
.TP
.BI \-m \ CHARACTERISTICSMETA\fR,\fB \ \-\-sample\-characteristics \ CHARACTERISTICSMETA
sample characteristics metadata file
.TP
.BI \-o \ OUTPUT\fR,\fB \ \-\-output \ OUTPUT
output scicat metadata file
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo sample \-i petra3/h2o/234234 \-d \(aqHH water\(aq \-s ~/cm.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo instrument
.sp
It generates description of instrument
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo instrument [options]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-p \ PID\fR,\fB \ \-\-pid \ PID
instrument pid
.TP
.BI \-n \ NAME\fR,\fB \ \-\-name \ NAME
instrument name
.TP
.BI \-i \ BEAMTIMEID\fR,\fB \ \-\-beamtimeid \ BEAMTIMEID
beamtime id
.TP
.BI \-b \ BEAMLINE\fR,\fB \ \-\-beamline \ BEAMLINE
beamline
.TP
.BI \-w \ OWNERGROUP\fR,\fB \ \-\-owner\-group \ OWNERGROUP
owner group name. Default is {beamtimeid}\-dmgt
.TP
.BI \-c \ ACCESSGROUPS\fR,\fB \ \-\-access\-groups \ ACCESSGROUPS
access group names separated by commas. Default is {be
amtimeId}\-dmgt,{beamtimeid}\-clbt,{beamtimeId}\-part,{be
amline}dmgt,{beamline}staff
.TP
.BI \-x \ CHMOD\fR,\fB \ \-\-chmod \ CHMOD
json metadata file mod bits, e.g. 0o662
.TP
.BI \-m \ CUSTOMMETA\fR,\fB \ \-\-custom\-metadata \ CUSTOMMETA
instrument characteristics metadata file
.TP
.BI \-o \ OUTPUT\fR,\fB \ \-\-output \ OUTPUT
output scicat metadata file
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo instrument \-p /petra3/p00 \-n P00 \-m ~/cm.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo attachment
.sp
It generates description of attachment
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo attachment [options] <image_file|scan_file>
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-a \ ATID\fR,\fB \ \-\-id \ ATID
attachment id
.TP
.BI \-t \ CAPTION\fR,\fB \ \-\-caption \ CAPTION
caption text
.TP
.BI \-i \ BEAMTIMEID\fR,\fB \ \-\-beamtimeid \ BEAMTIMEID
beamtime id
.TP
.BI \-b \ BEAMLINE\fR,\fB \ \-\-beamline \ BEAMLINE
beamline
.TP
.BI \-r \ OWNER\fR,\fB \ \-\-owner \ OWNER
attachment owner
.TP
.BI \-w \ OWNERGROUP\fR,\fB \ \-\-owner\-group \ OWNERGROUP
owner group name. Default is {beamtimeid}\-dmgt
.TP
.BI \-c \ ACCESSGROUPS\fR,\fB \ \-\-access\-groups \ ACCESSGROUPS
access group names separated by commas. Default is {be
amtimeId}\-dmgt,{beamtimeid}\-clbt,{beamtimeId}\-part,{be
amline}dmgt,{beamline}staff
.TP
.BI \-f \ FILEFORMAT\fR,\fB \ \-\-file\-format \ FILEFORMAT
input file format, e.g. \(aqnxs\(aq. Default is defined by
the file extension
.TP
.B  \-\-h5py
use h5py module as a nexus reader
.TP
.B  \-\-h5cpp
use h5cpp module as a nexus reader
.TP
.BI \-x \ CHMOD\fR,\fB \ \-\-chmod \ CHMOD
json metadata file mod bits, e.g. 0o662
.TP
.BI \-s \ SIGNALS\fR,\fB \ \-\-signals \ SIGNALS
signals data name(s) separated by comma
.TP
.BI \-e \ AXES\fR,\fB \ \-\-axes \ AXES
axis/axes data name(s) separated by comma
.TP
.BI \-q \ SCANCMDAXES\fR,\fB \ \-\-scan\-command\-axes \ SCANCMDAXES
a JSON dictionary with scan\-command axes to override,
axis/axes data name(s) separated by comma for
detectors and by semicolon for more plots. Default:
{\(dqhklscan\(dq:\(dqh;k;l\(dq,\(dqqscan\(dq:\(dqqz;qpar\(dq}
.TP
.BI \-m \ FRAME\fR,\fB \ \-\-frame \ FRAME
a frame number for if more 2D images in the data
.TP
.BI \-\-signal\-label \ SLABEL
signal label
.TP
.BI \-\-xlabel \ XLABEL
x\-axis label
.TP
.BI \-\-ylabel \ YLABEL
y\-axis label
.TP
.B  \-u\fP,\fB  \-\-override
override NeXus entries by script parameters
.TP
.B  \-\-parameters\-in\-caption
add plot paramters to the caption
.TP
.BI \-n \ NEXUSPATH\fR,\fB \ \-\-nexus\-path \ NEXUSPATH
base nexus path to element to be shown.
If th path is \(aq\(aq the default group is shown. The default: \(aq\(aq
.TP
.BI \-o \ OUTPUT\fR,\fB \ \-\-output \ OUTPUT
output scicat metadata file
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo attachment \-b p00 \-i 2342342 \-t \(aqHH water\(aq \-o ~/at1.json thumbnail.png
nxsfileinfo attachment \-b p00 \-i 2342342 \-t \(aqHH water\(aq \-o ~/at2.json \-s pilatus myscan_00123.nxs
nxsfileinfo attachment \-b p00 \-i 2342342 \-t \(aqHH water\(aq \-o ~/at2.json  myscan_00124.fio
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsfileinfo groupmetadata
.sp
It groups scan metadata to one dataset
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Usage: nxsfileinfo groupmetadata [options] [groupname]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B Options:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-p \ PID\fR,\fB \ \-\-pid \ PID
dataset pid
.TP
.B  \-\-raw
raw dataset type
.TP
.BI \-i \ BEAMTIMEID\fR,\fB \ \-\-beamtimeid
BEAMTIMEID beamtime id
.TP
.B  \-s\fP,\fB  \-\-skip\-group\-datablock
skip group datablock
.TP
.B  \-w\fP,\fB  \-\-allow\-duplication
allow to merge metadata with duplicated pid
.TP
.B  \-q\fP,\fB  \-\-raw
raw dataset type
.TP
.B  \-f\fP,\fB  \-\-write\-files
write output to files
.TP
.BI \-k \ SCICATVERSION\fR,\fB \ \-\-scicat\-version \ SCICATVERSION
major scicat version metadata
.TP
.BI \-x \ CHMOD\fR,\fB \ \-\-chmod \ CHMOD
json metadata file mod bits, e.g. 0o662
.TP
.BI \-g \ GROUPMAP\fR,\fB \ \-\-group\-map \ GROUPMAP
json or yaml map of {output: input} or [[output,
input],] or a text file list to re\-arrange metadata
.TP
.B  \-e\fP,\fB  \-\-group\-map\-error
Raise an error when the group map file does not exist
.TP
.BI \-r \ GROUPMAPFILE\fR,\fB \ \-\-group\-map\-file \ GROUPMAPFILE
json or yaml file containing the copy map, see also
.TP
.BI \-m \ METADATAFILE\fR,\fB \ \-\-metadata \ METADATAFILE
json metadata file
.TP
.BI \-d \ ORIGDATABLOCKFILE\fR,\fB \ \-\-origdatablock \ ORIGDATABLOCKFILE
json origmetadata file
.TP
.BI \-a \ ATTACHMENTFILE\fR,\fB \ \-\-attachment \ ATTACHMENTFILE
json attachment file
.TP
.BI \-o \ OUTPUT\fR,\fB \ \-\-output \ OUTPUT
output scicat group metadata file
.TP
.BI \-l \ DBOUTPUT\fR,\fB \ \-\-datablock\-output \ DBOUTPUT
output scicat group datablocks list file
.TP
.BI \-t \ ATOUTPUT\fR,\fB \ \-\-attachment\-output \ ATOUTPUT
output scicat group attachments list file
.UNINDENT
.UNINDENT
.SS Example
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxsfileinfo groupmetadata \-o /user/data/myscan.scan.json  \-t /user/data/myscan.attachment.json  \-l /user/data/myscan.origdatablock.json  \-c /home/user/group_config.txt  \-m /user/data/myscan_00023.scan.json  \-d /user/data/myscan_00023.origdatablock.json  \-a /user/data/myscan_00023.attachment.json

nxsfileinfo groupmetadata myscan_m001  \-m /user/data/myscan_00021.scan.json \-c /home/user/group_config.txt

nxsfileinfo groupmetadata  myscan_m001  \-c /home/user/group_config.txt  \-m /user/data/myscan_00023.scan.json  \-d /user/data/myscan_00023.origdatablock.json  \-a /user/data/myscan_00023.attachment.json

nxsfileinfo groupmetadata  \-m /user/data/myscan_00023.scan.json  \-d /user/data/myscan_00023.origdatablock.json  \-c /home/user/group_config.txt
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSETUP
.SS Description
.sp
The nxsetup is is a command\-line setup tool for NeXus servers.  It allows to set NXSDataWriter, NXSConfigServer and NXSRecSelector in Tango environment, restart them or change property names.
.SS Synopsis
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
nxscreate  <command> [ <options>]  [<arg1> [<arg2>  ...]]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following commands are available: set, restart, start, stop, move\-prop, change\-prop, add\-recorder\-path
.SS nxsetup set
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup set [\-h] [\-b BEAMLINE] [\-m MASTERHOST] [\-u USER] [\-d DBNAME]
                   [\-j CSJSON]
                   [server_name [server_name ...]]

set up NXSConfigServer NXSDataWriter and NXSRecSelector servers

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-b BEAMLINE, \-\-beamline BEAMLINE
                        name of the beamline ( default: \(aqnxs\(aq )
  \-m MASTERHOST, \-\-masterHost MASTERHOST
                        the host that stores the Mg ( default: <localhost> )
  \-c CONFIGHOST, \-\-confighost CONFIGHOST
                        the host to run the config server ( default: <mysqlhost> )
  \-r RUNHOST, \-\-runhost RUNHOST
                        the host to run the server ( default: localhost )
  \-u USER, \-\-user USER  the local user ( default: \(aqtango\(aq )
  \-d DBNAME, \-\-database DBNAME
                        the database name ( default: \(aqnxsconfig\(aq)
  \-j CSJSON, \-\-csjson CSJSON
                        JSONSettings for the configuration server. ( default:
                        \(aq{\(dqhost\(dq: \(dqlocalhost\(dq,\(dqdb\(dq: <DBNAME>, \(dquse_unicode\(dq:
                        true\(aq, \(dqread_default_file\(dq: <MY_CNF_FILE>}\(aq where
                        <MY_CNF_FILE> stays for \(dq/home/<USER>/.my.cnf\(dq or
                        \(dq/var/lib/nxsconfigserver/.my.cnf\(dq )
  \-k CLASSNAME, \-\-class\-name CLASSNAME
                        tango server class name
  \-y PROPJSON, \-\-json\-device\-properties PROPJSON
                        JSON tango device properties ( default: \(aq{}\(aq )
  \-t, \-\-postpone        do not start the server

 examples:
       nxsetup set
       nxsetup set \-b p09 \-m haso228 \-u p09user \-d nxsconfig NXSConfigServer
       nxsetup set NexusWriter/haso228  \-k NexusWriter  \-y \(aq{\(dqp00/bliss_nexuswriter/test_session\(dq:{\(dqsession\(dq:\(dqtest_session\(dq,\(dqbeacon_host\(dq:\(dqhaso228:25000\(dq}}\(aq  \-t
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup restart
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
   usage: nxsetup restart [\-h] [\-l LEVEL] [server_name [server_name ...]]

   restart tango server

   positional arguments:
     server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

   optional arguments:
     \-h, \-\-help            show this help message and exit
     \-l LEVEL, \-\-level LEVEL
                           startup level
     \-z TIMEOUT, \-\-timeout TIMEOUT
                           timeout in seconds
     \-e, \-\-no\-wait         do not wait

examples:

    examples:
          nxsetup restart Pool/haso228 \-l 2
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup start
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup start [\-h] [\-l LEVEL] [server_name [server_name ...]]

start tango server

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-l LEVEL, \-\-level LEVEL
                        startup level
  \-z TIMEOUT, \-\-timeout TIMEOUT
                        timeout in seconds
  \-e, \-\-no\-wait         do not wait

 examples:
       nxsetup start Pool/haso228 \-l 2
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup stop
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup stop [\-h] [server_name [server_name ...]]

stop tango server

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit

 examples:
       nxsetup stop Pool/haso228
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup wait
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup wait [\-h] [server_name [server_name ...]]

stop tango server

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-z TIMEOUT, \-\-timeout TIMEOUT
                        timeout in seconds


 examples:
       nxsetup wait Pool/haso228
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup move\-prop
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup move\-prop [\-h] [\-n NEWNAME] [\-o OLDNAME]
                         [server_name [server_name ...]]

change property name

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-n NEWNAME, \-\-newname NEWNAME
                        (new) property name
  \-o OLDNAME, \-\-oldname OLDNAME
                        old property name
  \-t, \-\-postpone        do not restart the server
  \-z TIMEOUT, \-\-timeout TIMEOUT
                        timeout in seconds
  \-e, \-\-no\-wait         do not wait

 examples:
       nxsetup move\-prop \-n DefaultPreselectedComponents \-o DefaultAutomaticComponents NXSRecSelector
       nxsetup move\-prop \-t \-n DefaultPreselectedComponents  \-o DefaultAutomaticComponents NXSRecSelector
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup change\-prop
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup change\-prop [\-h] [\-n NEWNAME] [\-w PROPVALUE]
                           [server_name [server_name ...]]

change property value

positional arguments:
  server_name           server names, e.g.: NXSRecSelector NXSDataWriter/TDW1

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-n NEWNAME, \-\-newname NEWNAME
                        (new) property name
  \-w PROPVALUE, \-\-propvalue PROPVALUE
                        new property value
  \-t, \-\-postpone        do not restart the server
  \-z TIMEOUT, \-\-timeout TIMEOUT
                        timeout in seconds
  \-e, \-\-no\-wait         do not wait


 examples:
       nxsetup change\-prop \-n ClientRecordKeys \-t \-w \(dq[\e\(dqphoibos_scan_command\e\(dq,\e\(dqphoibos_scan_comment\e\(dq]\(dq NXSRecSelector/r228
       nxsetup change\-prop \-n DefaultPreselectedComponents \-w \(dq[\e\(dqpinhole1\e\(dq,\e\(dqslit2\e\(dq]\(dq NXSRecSelector/r228
       nxsetup change\-prop \-n StartDsPath \-w \(dq[\e\(dq/usr/bin\e\(dq,\e\(dq/usr/lib/tango\e\(dq]\(dq Starter
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxsetup add\-recorder\-path
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: nxsetup add\-recorder\-path [\-h] recorder_path

add\-recorder\-path into MacroServer(s) property

positional arguments:
  recorder_path  sardana recorder path

optional arguments:
  \-h, \-\-help     show this help message and exit
  \-t, \-\-postpone  do not restart the server
  \-z TIMEOUT, \-\-timeout TIMEOUT
                        timeout in seconds
  \-e, \-\-no\-wait         do not wait
  \-i INSTANCE, \-\-instance INSTANCE
                        macroserver instance name, i.e. haso ( default: \(aq*\(aq)
 examples:
       nxsetup add\-recorder\-path /usr/share/pyshared/sardananxsrecorder
       nxsetup add\-recorder\-path \-t /usr/share/pyshared/sardananxsrecorder
.ft P
.fi
.UNINDENT
.UNINDENT
.SH NXSTOOLS PACKAGE
.SS Submodules
.SS nxstools.filenamegenerator module
.sp
Filename generator
.INDENT 0.0
.TP
.B class  nxstools.filenamegenerator.FilenameGenerator(fname_template, start_index=0, stop_index=None)
Bases: \fI\%object\fP
.sp
Generate image file names
.sp
(c) Copyright 2015 Eugen Wintersberger <\fI\%eugen.wintersberger@gmail.com\fP>
(c) Copyright 2015 DESY
This file is part of nx2img.
.sp
nx2img is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.
.sp
nx2img is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
.sp
You should have received a copy of the GNU General Public License
along with nx2img.  If not, see <\fI\%http://www.gnu.org/licenses/\fP>.
.sp
Generator class creating image file names.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfname_template\fP (\fI\%str\fP) \-\- file name template
.IP \(bu 2
\fBstart_index\fP (\fI\%int\fP) \-\- file start index
.IP \(bu 2
\fBstop_index\fP (\fI\%int\fP) \-\- file stop index
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B file_index
(\fI\%int\fP) file start index
.UNINDENT
.INDENT 7.0
.TP
.B file_template
(\fI\%str\fP) file name template
.UNINDENT
.INDENT 7.0
.TP
.B static  from_slice(file_template)
Static factory method to create a filename_generator instance
from a sliced user input
.INDENT 7.0
.TP
.B Parameters
\fBfile_template\fP (\fI\%str\fP) \-\- file template
.TP
.B Returns
filename generator object
.TP
.B Return type
\fI\%FilenameGenerator\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B stop_index
(\fI\%int\fP) file stop index
.UNINDENT
.UNINDENT
.SS nxstools.filewriter module
.sp
Provides abstraction for file writer
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTAttribute(h5object, tparent=None)
Bases: \fI\%FTObject\fP
.sp
virtual file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  dtype
attribute data type
.INDENT 7.0
.TP
.B Returns
attribute data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read attribute value
.INDENT 7.0
.TP
.B Returns
python object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  shape
attribute shape
.INDENT 7.0
.TP
.B Returns
attribute shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write attribute value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- python object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTAttributeManager(h5object, tparent=None)
Bases: \fI\%FTObject\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create(name, dtype, shape=None, overwrite=False)
create a new attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBshape\fP (\fBlist\(ga< :obj:\(gaint\fP>) \-\- attribute shape
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.UNINDENT
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B names()
key values
.INDENT 7.0
.TP
.B Returns
attribute names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTDataFilter(h5object=None, tparent=None)
Bases: \fI\%FTObject\fP
.sp
file tree data filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  availability
getter for filter availability
.INDENT 7.0
.TP
.B Returns
filter availability
.TP
.B Return type
\fI\%tuple\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  filterid
getter for compression filter id
.INDENT 7.0
.TP
.B Returns
compression rate
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  name
getter for filter name
.INDENT 7.0
.TP
.B Returns
filter name
.TP
.B Return type
\fI\%tuple\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  options
getter for compression options
.INDENT 7.0
.TP
.B Returns
compression options
.TP
.B Return type
\fI\%tuple\fP <\fI\%int\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  rate
getter for compression rate
.INDENT 7.0
.TP
.B Returns
compression rate
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  shuffle
getter for compression shuffle
.INDENT 7.0
.TP
.B Returns
compression shuffle
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTDeflate(h5object=None, tparent=None)
Bases: \fI\%FTDataFilter\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTField(h5object, tparent=None)
Bases: \fI\%FTObject\fP
.sp
file writer field
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%FTAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B grow(dim=0, ext=1)
grow the field
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdim\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBdim\fP \-\- size of the grow
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read the field value
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  shape
field shape
.INDENT 7.0
.TP
.B Returns
field shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  size
field size
.INDENT 7.0
.TP
.B Returns
field size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write the field value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTFile(h5object, filename)
Bases: \fI\%FTObject\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBwriter\fP (\fBPNIWriter\fP or \fBH5PYWriter\fP
or \fBH5CppWriter\fP) \-\- writer module
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  currenttime()
returns current time string
.INDENT 7.0
.TP
.B Returns
current time
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B default_field()
field pointed by default attributes
.INDENT 7.0
.TP
.B Returns
field pointed by default attributes
.TP
.B Return type
\fI\%FTField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B flush()
flash the data
.UNINDENT
.INDENT 7.0
.TP
.B hasswmr()
if has swmr_mode
.INDENT 7.0
.TP
.B Returns
has swmr_mode
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) file name
.UNINDENT
.INDENT 7.0
.TP
.B property  readonly
check if file is readonly
.INDENT 7.0
.TP
.B Returns
readonly flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen(readonly=False, swmr=False, libver=None)
reopen attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBswmr\fP (\fI\%bool\fP) \-\- swmr flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version, default: \(aqlatest\(aq
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root()
root object
.INDENT 7.0
.TP
.B Returns
parent object
.TP
.B Return type
\fI\%FTGroup\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTGroup(h5object, tparent=None)
Bases: \fI\%FTObject\fP
.sp
file tree group
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%FTAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_field(name, type_code, shape=None, chunk=None, dfilter=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBtype_code\fP (\fI\%str\fP) \-\- nexus field type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBchunk\fP (\fI\%list\fP < \fI\%int\fP >) \-\- chunk
.IP \(bu 2
\fBdfilter\fP (\fI\%FTDeflate\fP) \-\- filter deflater
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%FTField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_group(n, nxclass=\(aq\(aq)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- group type
.UNINDENT
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%FTGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_virtual_field(name, layout, fillvalue=None)
creates a virtual filed tres element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBlayout\fP (\fBH5CppFieldLayout\fP) \-\- virual field layout
.IP \(bu 2
\fBfillvalue\fP (\fI\%int\fP or \fBnp.ndarray\fP) \-\- fill value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B default_field(signals=None, nexuspath=None)
field pointed by default attributes
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBaxes\fP \-\- axes names
.IP \(bu 2
\fBentryname\fP (\fI\%str\fP) \-\- base nexus path to be opened
.UNINDENT
.TP
.B Returns
field pointed by default attributes
.TP
.B Return type
\fI\%FTField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B exists(name)
if child exists
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- child name
.TP
.B Returns
existing flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B names()
read the child names
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%list\fP <\fIstr\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open(name)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fI\%FTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open_link(name)
open a file tree element as link
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fI\%FTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  size
group size
.INDENT 7.0
.TP
.B Returns
group size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B stepsperfile
(\fI\%int\fP) steps per file
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTHyperslab(offset=None, block=None, count=None, stride=None)
Bases: \fI\%object\fP
.sp
hyperslab class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoffset\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- a list of offsets
.IP \(bu 2
\fBblock\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- a list of blocks
.IP \(bu 2
\fBcount\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- a list of counts
.IP \(bu 2
\fBstride\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- a list of strides
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTLink(h5object, tparent=None)
Bases: \fI\%FTObject\fP
.sp
file tree link
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the link
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  target_path
target path
.INDENT 7.0
.TP
.B Returns
target path
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTObject(h5object, tparent=None)
Bases: \fI\%object\fP
.sp
virtual file tree object
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- tree parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append(child)
append child weakref
.INDENT 7.0
.TP
.B Parameters
\fBtparent\fP (\fI\%FTObject\fP) \-\- tree parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close element
.UNINDENT
.INDENT 7.0
.TP
.B property  h5object
provide object of native library
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if attribute is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  parent
return the parent object
.INDENT 7.0
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%FTGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reload()
reload a list of valid children
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTTargetFieldView(h5object=None)
Bases: \fI\%FTObject\fP
.sp
target field view for VDS
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.filewriter.FTVirtualFieldLayout(h5object=None)
Bases: \fI\%FTObject\fP
.sp
virtual field layout
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.INDENT 7.0
.TP
.B add(key, source, sourcekey=None)
add target field to layout
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkey\fP (\fI\%tuple\fP) \-\- slide or selection
.IP \(bu 2
\fBsource\fP (\fI\%FTTargetFieldView\fP) \-\- target field
.IP \(bu 2
\fBsourcekey\fP (\fI\%tuple\fP) \-\- slide or selection
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.create_file(filename, overwrite=False, **pars)
create a new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%FTFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.data_filter(parent=None)
create deflate filter
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%FTDeflate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.deflate_filter(parent=None)
create deflate filter
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%FTDeflate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.first(array)
get first element if the only
.INDENT 7.0
.TP
.B Parameters
\fBarray\fP (\fI\%any\fP) \-\- numpy array
.TP
.B Returns
first element of the array
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.get_links(parent)
get links
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
list of link objects
.TP
.B Return type
.INDENT 7.0
.TP
.B obj
\fIlist\fP <\fI\%FTLink\fP>
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.link(target, parent, name)
create link
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- link name
.UNINDENT
.TP
.B Returns
link object
.TP
.B Return type
\fI\%FTLink\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.load_file(membuffer, filename=None, readonly=False, **pars)
load a file from memory byte buffer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file objects
.TP
.B Return type
\fBH5PYFile\fP or \fBH5CppFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.open_file(filename, readonly=False, **pars)
open the new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%FTFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.setwriter(wr)
sets writer
.INDENT 7.0
.TP
.B Parameters
\fBwr\fP (\fBPNIWriter\fP or \fBH5PYWriter\fP or \fBH5CppWriter\fP) \-\- writer module
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.target_field_view(filename, fieldpath, shape, dtype=None, maxshape=None, parent=None)
create target field view for VDS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.UNINDENT
.TP
.B Returns
target field object
.TP
.B Return type
\fI\%FTTargetFieldView\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.unlimited(parent=None)
return dataspace UNLIMITED variable for the current writer module
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
dataspace UNLIMITED variable
.TP
.B Return type
\fBh5cpp.dataspace.UNLIMITED\fP or \fBh5py.UNLIMITED\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.virtual_field_layout(shape, dtype, maxshape=None, parent=None)
creates a virtual field layout for a VDS file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.UNINDENT
.TP
.B Returns
virtual layout
.TP
.B Return type
\fI\%FTVirtualFieldLayout\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.filewriter.writerlock  =  <unlocked _thread.lock object>
(\fI\%threading.Lock\fP) writer module
.UNINDENT
.SS nxstools.h5cppwriter module
.sp
Provides h5cpp file writer
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppAttribute(h5object, tparent=None)
Bases: \fI\%FTAttribute\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if attribute is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B read()
read attribute value
.INDENT 7.0
.TP
.B Returns
python object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  shape
attribute shape
.INDENT 7.0
.TP
.B Returns
attribute shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write attribute value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- python object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppAttributeManager(h5object, tparent=None)
Bases: \fI\%FTAttributeManager\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribure manager
.UNINDENT
.INDENT 7.0
.TP
.B create(name, dtype, shape=None, overwrite=False)
create a new attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- attribute shape
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.UNINDENT
.TP
.B Returns
attribute object
.TP
.B Return type
\fBH5CppAtribute\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B names()
key values
.INDENT 7.0
.TP
.B Returns
attribute names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppDataFilter(h5object=None, tparent=None)
Bases: \fI\%FTDataFilter\fP
.sp
file tree deflate
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppDeflate(h5object=None, tparent=None)
Bases: \fI\%H5CppDataFilter\fP
.sp
deflate filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppField(h5object, tparent=None)
Bases: \fI\%FTField\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5CppAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close field
.UNINDENT
.INDENT 7.0
.TP
.B property  dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B grow(dim=0, ext=1)
grow the field
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdim\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBdim\fP \-\- size of the grow
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if field is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B read()
read the field value
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B property  shape
field shape
.INDENT 7.0
.TP
.B Returns
field shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  size
field size
.INDENT 7.0
.TP
.B Returns
field size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write the field value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppFile(h5object, filename)
Bases: \fI\%FTFile\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close file
.UNINDENT
.INDENT 7.0
.TP
.B filename
(\fI\%str\fP) nexus file name
.UNINDENT
.INDENT 7.0
.TP
.B flush()
flash the data
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if file is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B property  readonly
check if file is readonly
.INDENT 7.0
.TP
.B Returns
readonly flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen(readonly=False, swmr=False, libver=None)
reopen file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBswmr\fP (\fI\%bool\fP) \-\- swmr flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version, default: \(aqlatest\(aq
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root()
root object
.INDENT 7.0
.TP
.B Returns
parent object
.TP
.B Return type
\fI\%H5CppGroup\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppGroup(h5object, tparent=None)
Bases: \fI\%FTGroup\fP
.sp
file tree group
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- tree parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class  H5CppGroupIter(group)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBgroup\fP \-\- group object
.UNINDENT
.INDENT 7.0
.TP
.B next()
the next attribute
.INDENT 7.0
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5CppAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B create_field(name, type_code, shape=None, chunk=None, dfilter=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBtype_code\fP (\fI\%str\fP) \-\- nexus field type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBchunk\fP (\fI\%list\fP < \fI\%int\fP >) \-\- chunk
.IP \(bu 2
\fBdfilter\fP (\fI\%H5CppDataFilter\fP) \-\- filter deflater
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%H5CppField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_group(n, nxclass=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- group type
.UNINDENT
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%H5CppGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_virtual_field(name, layout, fillvalue=0)
creates a virtual filed tres element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- field name
.IP \(bu 2
\fBlayout\fP (\fBH5CppFieldLayout\fP) \-\- virual field layout
.IP \(bu 2
\fBfillvalue\fP (\fI\%int\fP or \fBnp.ndarray\fP) \-\- fill value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B exists(name)
if child exists
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- child name
.TP
.B Returns
existing flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if field is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B names()
read the child names
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%list\fP <\fIstr\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open(name)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open_link(name)
open a file tree element as link
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen group
.UNINDENT
.INDENT 7.0
.TP
.B property  size
group size
.INDENT 7.0
.TP
.B Returns
group size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppLink(h5object, tparent=None)
Bases: \fI\%FTLink\fP
.sp
file tree link
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  getfilename(obj)
provides a filename from h5 node
.INDENT 7.0
.TP
.B Parameters
\fBobj\fP (\fBFTObject\fP) \-\- h5 node
.TP
.B Returns
file name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B property  target_path
target path
.INDENT 7.0
.TP
.B Returns
target path
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppTargetFieldView(filename, fieldpath, shape, dtype=None, maxshape=None)
Bases: \fI\%FTTargetFieldView\fP
.sp
target field for VDS
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B fieldpath
(\fI\%str\fP) nexus field path
.UNINDENT
.INDENT 7.0
.TP
.B filename
(\fI\%str\fP) directory and file name
.UNINDENT
.INDENT 7.0
.TP
.B maxshape
(\fI\%list\fP < \fI\%int\fP >) maximal shape
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5cppwriter.H5CppVirtualFieldLayout(h5object, shape, dtype=None, maxshape=None)
Bases: \fI\%FTVirtualFieldLayout\fP
.sp
virtual field layout
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add(key, source, sourcekey=None, shape=None)
add target field to layout
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkey\fP (\fI\%tuple\fP) \-\- slide
.IP \(bu 2
\fBsource\fP (\fBH5PYTargetFieldView\fP) \-\- target field view
.IP \(bu 2
\fBsourcekey\fP (\fI\%tuple\fP) \-\- slide or selection
.IP \(bu 2
\fBshape\fP (\fI\%tuple\fP) \-\- target shape in the layout
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B maxshape
(\fI\%list\fP < \fI\%int\fP >) maximal shape
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.create_file(filename, overwrite=False, libver=None, swmr=None)
create a new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version: \(aqlastest\(aq or \(aqearliest\(aq
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5CppFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.data_filter(filterid=None, name=None, options=None, availability=None, shuffle=None, rate=None)
create data filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilterid\fP (\fI\%int\fP) \-\- hdf5 filter id
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- filter name
.IP \(bu 2
\fBoptions\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- filter cd values
.IP \(bu 2
\fBavailability\fP (\fI\%str\fP) \-\- filter availability i.e. \(aqoptional\(aq or \(aqmandatory\(aq
.IP \(bu 2
\fBshuffle\fP (\fI\%bool\fP) \-\- filter shuffle
.IP \(bu 2
\fBrate\fP (\fI\%bool\fP) \-\- filter shuffle
.UNINDENT
.TP
.B Returns
data filter object
.TP
.B Return type
\fI\%H5CppDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.deflate_filter(rate=None, shuffle=None, availability=None)
create data filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrate\fP (\fI\%bool\fP) \-\- filter shuffle
.IP \(bu 2
\fBshuffle\fP (\fI\%bool\fP) \-\- filter shuffle
.UNINDENT
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%H5CppDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.get_links(parent)
get links
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
list of link objects
.TP
.B Returns
link object
.TP
.B Return type
.INDENT 7.0
.TP
.B obj
\fIlist\fP <\fI\%H5CppLink\fP>
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.is_image_file_supported()
provides if loading of image files are supported
.INDENT 7.0
.TP
.B Retruns
if loading of image files are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.is_unlimited_vds_supported()
provides if unlimited vds are supported
.INDENT 7.0
.TP
.B Retruns
if unlimited vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.is_vds_supported()
provides if vds are supported
.INDENT 7.0
.TP
.B Retruns
if vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.link(target, parent, name)
create link
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- nexus path name
.IP \(bu 2
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- link name
.UNINDENT
.TP
.B Returns
link object
.TP
.B Return type
\fI\%H5CppLink\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.load_file(membuffer, filename=None, readonly=False, **pars)
load a file from memory byte buffer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fBH5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.nptype(dtype)
converts to numpy types
.INDENT 7.0
.TP
.B Parameters
\fBdtype\fP (\fI\%str\fP) \-\- h5 writer type type
.TP
.B Returns
nupy type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.open_file(filename, readonly=False, libver=None, swmr=False)
open the new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version: \(aqlastest\(aq or \(aqearliest\(aq
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5CppFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.target_field_view(filename, fieldpath, shape, dtype=None, maxshape=None)
create target field view for VDS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
target field view object
.TP
.B Return type
\fI\%H5CppTargetFieldView\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.unlimited(parent=None)
return dataspace UNLIMITED variable for the current writer module
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
dataspace UNLIMITED variable
.TP
.B Return type
\fBh5cpp.dataspace.UNLIMITED\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.unlimited_selection(sel, shape)
checks if hyperslab is unlimited
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsel\fP (\fBfilewriter.FTHyperslab\fP) \-\- hyperslab selection
.IP \(bu 2
\fBshape\fP (\fI\%list\fP) \-\- give shape
.UNINDENT
.TP
.B Returns
if hyperslab is unlimited list
.TP
.B Return type
\fI\%list\fP <\fI\%bool\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5cppwriter.virtual_field_layout(shape, dtype, maxshape=None)
creates a virtual field layout for a VDS file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
virtual layout
.TP
.B Return type
\fI\%H5CppVirtualFieldLayout\fP
.UNINDENT
.UNINDENT
.SS nxstools.h5pywriter module
.sp
Provides h5py file writer
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYAttribute(h5object, tparent=None)
Bases: \fI\%FTAttribute\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  dtype
attribute data type
.INDENT 7.0
.TP
.B Returns
attribute data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if field is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read attribute value
.INDENT 7.0
.TP
.B Returns
python object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property  shape
attribute shape
.INDENT 7.0
.TP
.B Returns
attribute shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write attribute value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- python object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYAttributeManager(h5object, tparent=None)
Bases: \fI\%FTAttributeManager\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class  H5PYAttrIter(manager)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBmanager\fP (\fI\%H5PYAttributeManager\fP) \-\- attribute manager
.UNINDENT
.INDENT 7.0
.TP
.B next()
the next attribute
.INDENT 7.0
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribure manager
.UNINDENT
.INDENT 7.0
.TP
.B create(name, dtype, shape=None, overwrite=False)
create a new attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- attribute shape
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.UNINDENT
.TP
.B Returns
attribute object
.TP
.B Return type
\fBH5PYAtribute\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B names()
key values
.INDENT 7.0
.TP
.B Returns
attribute names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYDataFilter(h5object=None, tparent=None)
Bases: \fI\%FTDataFilter\fP
.sp
file tree data filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYDeflate(h5object=None, tparent=None)
Bases: \fI\%H5PYDataFilter\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYField(h5object, tparent=None)
Bases: \fI\%FTField\fP
.sp
file writer field
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5PYAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close field
.UNINDENT
.INDENT 7.0
.TP
.B property  dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B grow(dim=0, ext=1)
grow the field
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdim\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBdim\fP \-\- size of the grow
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if group is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read the field value
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B property  shape
field shape
.INDENT 7.0
.TP
.B Returns
field shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  size
field size
.INDENT 7.0
.TP
.B Returns
field size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write the field value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYFile(h5object, filename)
Bases: \fI\%FTFile\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close file
.UNINDENT
.INDENT 7.0
.TP
.B flush()
flash the data
.UNINDENT
.INDENT 7.0
.TP
.B hasswmr()
if has swmr_mode
.INDENT 7.0
.TP
.B Returns
has swmr_mode
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if group is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B property  readonly
check if file is readonly
.INDENT 7.0
.TP
.B Returns
readonly flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen(readonly=False, swmr=False, libver=None)
reopen file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBswmr\fP (\fI\%bool\fP) \-\- swmr flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version, default: \(aqlatest\(aq
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root()
root object
.INDENT 7.0
.TP
.B Returns
parent object
.TP
.B Return type
\fI\%H5PYGroup\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYGroup(h5object, tparent=None)
Bases: \fI\%FTGroup\fP
.sp
file tree group
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class  H5PYGroupIter(group)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBgroup\fP \-\- group object
.UNINDENT
.INDENT 7.0
.TP
.B next()
the next attribute
.INDENT 7.0
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5PYAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B create_field(name, type_code, shape=None, chunk=None, dfilter=None)
creates a field tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBtype_code\fP (\fI\%str\fP) \-\- nexus field type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBchunk\fP (\fI\%list\fP < \fI\%int\fP >) \-\- chunk
.IP \(bu 2
\fBdfilter\fP (\fI\%H5PYDataFilter\fP) \-\- filter deflater
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%H5PYField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_group(n, nxclass=\(aq\(aq)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- group type
.UNINDENT
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%H5PYGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_virtual_field(name, layout, fillvalue=None)
creates a virtual filed tres element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBlayout\fP (\fBH5PYFieldLayout\fP) \-\- virual field layout
.IP \(bu 2
\fBfillvalue\fP (\fI\%int\fP) \-\- fill value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B exists(name)
if child exists
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- child name
.TP
.B Returns
existing flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if group is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B names()
read the child names
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%list\fP <\fIstr\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open(name)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open_link(name)
open a file tree element as link
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen file
.UNINDENT
.INDENT 7.0
.TP
.B property  size
group size
.INDENT 7.0
.TP
.B Returns
group size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYLink(h5object, tparent=None)
Bases: \fI\%FTLink\fP
.sp
file tree link
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  getfilename(obj)
provides a filename from h5 node
.INDENT 7.0
.TP
.B Parameters
\fBobj\fP (\fBFTObject\fP) \-\- h5 node
.TP
.B Returns
file name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read object value
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B setname(name)
.UNINDENT
.INDENT 7.0
.TP
.B property  target_path
target path
.INDENT 7.0
.TP
.B Returns
target path
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYTargetFieldView(h5object, shape)
Bases: \fI\%FTTargetFieldView\fP
.sp
target field view for VDS
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5pywriter.H5PYVirtualFieldLayout(h5object, shape)
Bases: \fI\%FTVirtualFieldLayout\fP
.sp
virtual field layout
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add(key, source, sourcekey=None, shape=None)
add target field to layout
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkey\fP (\fI\%tuple\fP) \-\- slide
.IP \(bu 2
\fBsource\fP (\fI\%H5PYTargetFieldView\fP) \-\- target field view
.IP \(bu 2
\fBsourcekey\fP (\fI\%tuple\fP) \-\- slide or selection
.IP \(bu 2
\fBshape\fP (\fI\%tuple\fP) \-\- target shape in the layout
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.create_file(filename, overwrite=False, **pars)
create a new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.data_filter(filterid=None, name=None, options=None, availability=None, shuffle=None, rate=None)
create data filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilterid\fP (\fI\%int\fP) \-\- hdf5 filter id
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- filter name
.IP \(bu 2
\fBoptions\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- filter cd values
.IP \(bu 2
\fBavailability\fP (\fI\%str\fP) \-\- filter availability i.e. \(aqoptional\(aq or \(aqmandatory\(aq
.IP \(bu 2
\fBshuffle\fP (\fI\%bool\fP) \-\- filter shuffle
.IP \(bu 2
\fBrate\fP (\fI\%bool\fP) \-\- filter shuffle
.UNINDENT
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%H5PYDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.deflate_filter(rate=None, shuffle=None, availability=None)
create data filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrate\fP (\fI\%bool\fP) \-\- filter shuffle
.IP \(bu 2
\fBshuffle\fP (\fI\%bool\fP) \-\- filter shuffle
.UNINDENT
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fBH5CppDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.get_links(parent)
get links
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
list of link objects
.TP
.B Returns
link object
.TP
.B Return type
.INDENT 7.0
.TP
.B obj
\fIlist\fP <\fI\%H5PYLink\fP>
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.is_image_file_supported()
provides if loading of image files are supported
.INDENT 7.0
.TP
.B Retruns
if loading of image files are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.is_mbs_supported()
provides if MultiBlockSlice are supported
.INDENT 7.0
.TP
.B Retruns
if MultiBlockSlice are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.is_strings_as_bytes()
provides if string read to bytes
.INDENT 7.0
.TP
.B Retruns
if string read to bytes
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.is_unlimited_vds_supported()
provides if unlimited vds are supported
.INDENT 7.0
.TP
.B Retruns
if unlimited vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.is_vds_supported()
provides if VDS are supported
.INDENT 7.0
.TP
.B Retruns
if VDS are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.link(target, parent, name)
create link
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- link name
.UNINDENT
.TP
.B Returns
link object
.TP
.B Return type
\fI\%H5PYLink\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.load_file(membuffer, filename=None, readonly=False, **pars)
load a file from memory byte buffer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.nptype(dtype)
converts to numpy types
.INDENT 7.0
.TP
.B Parameters
\fBdtype\fP (\fI\%str\fP) \-\- h5 writer type type
.TP
.B Returns
nupy type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.open_file(filename, readonly=False, **pars)
open the new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.target_field_view(filename, fieldpath, shape, dtype=None, maxshape=None)
create target field view for VDS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
target field view object
.TP
.B Return type
\fBFTTargetFieldView\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.unlimited(parent=None)
return dataspace UNLIMITED variable for the current writer module
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
dataspace UNLIMITED variable
.TP
.B Return type
\fBh5py.h5s.UNLIMITED\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.unlimited_selection(sel, shape)
checks if hyperslab is unlimited
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsel\fP (\fBfilewriter.FTHyperslab\fP) \-\- hyperslab selection
.IP \(bu 2
\fBshape\fP (\fI\%list\fP) \-\- give shape
.UNINDENT
.TP
.B Returns
if hyperslab is unlimited list
.TP
.B Return type
\fI\%list\fP <\fI\%bool\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5pywriter.virtual_field_layout(shape, dtype, maxshape=None)
creates a virtual field layout for a VDS file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
virtual layout
.TP
.B Return type
\fBFTVirtualFieldLayout\fP
.UNINDENT
.UNINDENT
.SS nxstools.h5rediswriter module
.sp
Provides redis h5cpp file writer
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisAttribute(h5object=None, tparent=None, h5imp=None)
Bases: \fI\%H5CppAttribute\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTAttribute\fP) \-\- h5 implementation attribute
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisAttributeManager(h5object=None, tparent=None, h5imp=None)
Bases: \fI\%H5CppAttributeManager\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTAttributeManager\fP) \-\- h5 implementation attributemanager
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create(name, dtype, shape=None, overwrite=False)
create a new attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- attribute shape
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.UNINDENT
.TP
.B Returns
attribute object
.TP
.B Return type
\fI\%H5RedisAttribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisDataFilter(h5object=None, tparent=None, h5imp=None)
Bases: \fI\%H5CppDataFilter\fP
.sp
file tree deflate
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTDataFilter\fP) \-\- h5 implementation data filter
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisDeflate(h5object=None, tparent=None, h5imp=None)
Bases: \fI\%H5RedisDataFilter\fP
.sp
deflate filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTDataFilter\fP) \-\- h5 implementation data filter
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisField(h5object=None, tparent=None, h5imp=None)
Bases: \fI\%H5CppField\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTField\fP) \-\- h5 implementation field
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_devices(value, keys=None)
append device parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device value
.IP \(bu 2
\fBkeys\fP \-\- device parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_scaninfo(value, keys=None, direct=False)
append scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan parameter value
.IP \(bu 2
\fBkeys\fP \-\- scan parameter value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_stream(name, stream)
scan object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- stream name
.IP \(bu 2
\fBscan\fP (\fBStream\fP) \-\- stream object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fBH5CppAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_channels(value, keys=None)
get scan info parameters
.INDENT 7.0
.TP
.B Parameters
\fBkeys\fP \-\- device parameter keys
.TP
.B Returns value
device parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_devices(value, keys=None)
get scan info parameters
.INDENT 7.0
.TP
.B Parameters
\fBkeys\fP \-\- device parameter keys
.TP
.B Returns value
device parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_scaninfo(keys=None, direct=False)
get scan info parameters
.INDENT 7.0
.TP
.B Parameters
\fBkeys\fP \-\- scan parameter value
.TP
.B Returns value
scan parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_command(command, *args, **kwargs)
set scan attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcommand\fP (\fI\%str\fP) \-\- scan command
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fIany\fP>) \-\- function list arguments
.IP \(bu 2
\fBkwargs\fP (\fI\%dict\fP <\fI\%str\fP , \fIany\fP>) \-\- function dict arguments
.UNINDENT
.TP
.B Returns
scan command value
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_getattr(attr)
get scan attribute
.INDENT 7.0
.TP
.B Parameters
\fBattr\fP (\fI\%str\fP) \-\- scan attr
.TP
.B Returns
scan attr value
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_setattr(attr, value)
set attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBattr\fP (\fI\%str\fP) \-\- scan attr
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan attr value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_channels(value, keys=None)
set device parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device parameter value
.IP \(bu 2
\fBkeys\fP \-\- device parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_devices(value, keys=None)
set device parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device parameter value
.IP \(bu 2
\fBkeys\fP \-\- device parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_scan(scan)
scan object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBscan\fP \-\- scan object
.IP \(bu 2
\fBtype\fP \-\- \fBScan\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_scaninfo(value, keys=None, direct=False)
set scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan parameter value
.IP \(bu 2
\fBkeys\fP \-\- scan parameter value
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisFile(h5object=None, filename=None, h5imp=None, redisurl=None)
Bases: \fI\%H5CppFile\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTFile\fP) \-\- h5 implementation file
.IP \(bu 2
\fBredisurl\fP (\fI\%str\fP) \-\- redis url string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_devices(value, keys=None)
append device info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device parameter value
.IP \(bu 2
\fBkeys\fP \-\- device parameter value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_scaninfo(value, keys=None, direct=False)
append scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan parameter value
.IP \(bu 2
\fBkeys\fP \-\- scan parameter value
.IP \(bu 2
\fBdirect\fP (\fI\%any\fP) \-\- scan info direct flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_stream(name, stream)
scan object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- stream name
.IP \(bu 2
\fBscan\fP (\fBStream\fP) \-\- stream object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B finish()
start scan
.UNINDENT
.INDENT 7.0
.TP
.B get_channels(keys=None)
get channel info parameters
.INDENT 7.0
.TP
.B Parameters
\fBkeys\fP \-\- channel parameter keys
.TP
.B Returns value
channel parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_devices(keys=None)
get devices info parameters
.INDENT 7.0
.TP
.B Parameters
\fBkeys\fP \-\- device parameter keys
.TP
.B Returns value
device parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_scaninfo(keys=None, direct=False)
get scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkeys\fP \-\- scan parameter value
.IP \(bu 2
\fBdirect\fP (\fI\%any\fP) \-\- scan info direct flag
.UNINDENT
.TP
.B Returns value
scan parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B prepare()
start scan
.UNINDENT
.INDENT 7.0
.TP
.B reset_scaninfo(entryname)
reset scan info
.INDENT 7.0
.TP
.B Parameters
\fBentryname\fP (\fI\%str\fP) \-\- NXentry group name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root()
root object
.INDENT 7.0
.TP
.B Returns
parent object
.TP
.B Return type
\fI\%H5RedisGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_command(command, *args, **kwargs)
set scan attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcommand\fP (\fI\%str\fP) \-\- scan command
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fIany\fP>) \-\- function list arguments
.IP \(bu 2
\fBkwargs\fP (\fI\%dict\fP <\fI\%str\fP , \fIany\fP>) \-\- function dict arguments
.UNINDENT
.TP
.B Returns
scan command value
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_getattr(attr)
get scan attribute
.INDENT 7.0
.TP
.B Parameters
\fBattr\fP (\fI\%str\fP) \-\- scan attr
.TP
.B Returns
scan attr value
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_setattr(attr, value)
set attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBattr\fP (\fI\%str\fP) \-\- scan attr
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan attr value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_channels(value, keys=None)
set channel info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- channel parameter value
.IP \(bu 2
\fBkeys\fP \-\- channel parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_devices(value, keys=None)
set device info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device parameter value
.IP \(bu 2
\fBkeys\fP \-\- device parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_entryname(entryname)
set entry name
.INDENT 7.0
.TP
.B Parameters
\fBentryname\fP (\fI\%str\fP) \-\- entry name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_insname(insname)
set instrument name
.INDENT 7.0
.TP
.B Parameters
\fBinsname\fP (\fI\%str\fP) \-\- instrument name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_scan(scan)
scan object
.INDENT 7.0
.TP
.B Parameters
\fBscan\fP (\fBScan\fP) \-\- scan object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_scaninfo(value, keys=None, direct=False)
set scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan parameter value
.IP \(bu 2
\fBkeys\fP \-\- scan parameter value
.IP \(bu 2
\fBdirect\fP (\fI\%any\fP) \-\- scan info direct flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B start()
start scan
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisGroup(h5object=None, tparent=None, h5imp=None, nxclass=None)
Bases: \fI\%H5CppGroup\fP
.sp
file tree group
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- tree parent
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTGroup\fP) \-\- h5 implementation group
.IP \(bu 2
\fBredis\fP (\fI\%any\fP) \-\- redis object
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- nxclass
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class  H5RedisGroupIter(group=None)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBgroup\fP (\fI\%H5RedisGroup\fP) \-\- group object
.UNINDENT
.INDENT 7.0
.TP
.B next()
the next attribute
.INDENT 7.0
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_devices(value, keys=None)
append device parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device value
.IP \(bu 2
\fBkeys\fP \-\- device parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_scaninfo(value, keys=None, direct=False)
append scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan parameter value
.IP \(bu 2
\fBkeys\fP \-\- scan parameter keys
.IP \(bu 2
\fBdirect\fP (\fI\%any\fP) \-\- scan info direct flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append_stream(name, stream)
scan object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- stream name
.IP \(bu 2
\fBscan\fP (\fBStream\fP) \-\- stream object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property  attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fBH5CppAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_field(name, type_code, shape=None, chunk=None, dfilter=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBtype_code\fP (\fI\%str\fP) \-\- nexus field type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBchunk\fP (\fI\%list\fP < \fI\%int\fP >) \-\- chunk
.IP \(bu 2
\fBdfilter\fP (\fBH5CppDataFilter\fP) \-\- filter deflater
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%H5RedisField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_group(n, nxclass=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- group type
.UNINDENT
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%H5RedisGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_virtual_field(name, layout, fillvalue=0)
creates a virtual filed tres element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- field name
.IP \(bu 2
\fBlayout\fP (\fBH5CppFieldLayout\fP) \-\- virual field layout
.IP \(bu 2
\fBfillvalue\fP (\fI\%int\fP or \fBnp.ndarray\fP) \-\- fill value
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%H5RedisField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_channels(value, keys=None)
get scan info parameters
.INDENT 7.0
.TP
.B Parameters
\fBkeys\fP \-\- device parameter keys
.TP
.B Returns value
device parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_devices(value, keys=None)
get scan info parameters
.INDENT 7.0
.TP
.B Parameters
\fBkeys\fP \-\- device parameter keys
.TP
.B Returns value
device parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_scaninfo(keys=None, direct=False)
get scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkeys\fP \-\- scan parameter keys
.IP \(bu 2
\fBdirect\fP (\fI\%any\fP) \-\- scan info direct flag
.UNINDENT
.TP
.B Returns value
scan parameter value
.TP
.B Rtype value
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open(name)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fI\%H5RedisLink\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open_link(name)
open a file tree element as link
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fI\%H5RedisLink\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reset_scaninfo(entryname)
reset scan info
.INDENT 7.0
.TP
.B Parameters
\fBentryname\fP (\fI\%str\fP) \-\- NXentry group name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_command(command, *args, **kwargs)
set scan attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcommand\fP (\fI\%str\fP) \-\- scan command
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fIany\fP>) \-\- function list arguments
.IP \(bu 2
\fBkwargs\fP (\fI\%dict\fP <\fI\%str\fP , \fIany\fP>) \-\- function dict arguments
.UNINDENT
.TP
.B Returns
scan command value
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_getattr(attr)
get scan attribute
.INDENT 7.0
.TP
.B Parameters
\fBattr\fP (\fI\%str\fP) \-\- scan attr
.TP
.B Returns
scan attr value
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scan_setattr(attr, value)
set attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBattr\fP (\fI\%str\fP) \-\- scan attr
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan attr value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_channels(value, keys=None)
set device parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device parameter value
.IP \(bu 2
\fBkeys\fP \-\- device parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_devices(value, keys=None)
set device parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- device parameter value
.IP \(bu 2
\fBkeys\fP \-\- device parameter keys
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_entryname(entryname)
set entry name
.INDENT 7.0
.TP
.B Parameters
\fBentryname\fP (\fI\%str\fP) \-\- entry name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_insname(insname)
set instrument name
.INDENT 7.0
.TP
.B Parameters
\fBinsname\fP (\fI\%str\fP) \-\- instrument name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_scan(scan)
scan object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBscan\fP \-\- scan object
.IP \(bu 2
\fBtype\fP \-\- \fBScan\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B set_scaninfo(value, keys=None, direct=False)
set scan info parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- scan parameter value
.IP \(bu 2
\fBkeys\fP \-\- scan parameter keys
.IP \(bu 2
\fBdirect\fP (\fI\%any\fP) \-\- scan info direct flag
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisLink(h5object=None, tparent=None, h5imp=None)
Bases: \fI\%H5CppLink\fP
.sp
file tree link
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisTargetFieldView(filename=None, fieldpath=None, shape=None, dtype=None, maxshape=None, h5imp=None)
Bases: \fI\%H5CppTargetFieldView\fP
.sp
target field for VDS
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTTargetFieldView\fP) \-\- h5 implementation targetfieldview
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.h5rediswriter.H5RedisVirtualFieldLayout(h5object=None, shape=None, dtype=None, maxshape=None, h5imp=None)
Bases: \fI\%H5CppVirtualFieldLayout\fP
.sp
virtual field layout
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBh5imp\fP (\fBfilewriter.FTVirtualFieldLayout\fP) \-\- h5 implementation  virtual field layout
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.create_file(filename, overwrite=False, redisurl=None, **pars)
create a new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version: \(aqlastest\(aq or \(aqearliest\(aq
.IP \(bu 2
\fBredisurl\fP (\fI\%str\fP) \-\- redis URL
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5RedisFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.data_filter(filterid=None, name=None, options=None, availability=None, shuffle=None, rate=None)
create data filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilterid\fP (\fI\%int\fP) \-\- hdf5 filter id
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- filter name
.IP \(bu 2
\fBoptions\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- filter cd values
.IP \(bu 2
\fBavailability\fP (\fI\%str\fP) \-\- filter availability i.e. \(aqoptional\(aq or \(aqmandatory\(aq
.IP \(bu 2
\fBshuffle\fP (\fI\%bool\fP) \-\- filter shuffle
.IP \(bu 2
\fBrate\fP (\fI\%bool\fP) \-\- filter shuffle
.UNINDENT
.TP
.B Returns
data filter object
.TP
.B Return type
\fI\%H5RedisDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.deflate_filter(rate=None, shuffle=None, availability=None)
create data filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrate\fP (\fI\%bool\fP) \-\- filter shuffle
.IP \(bu 2
\fBshuffle\fP (\fI\%bool\fP) \-\- filter shuffle
.UNINDENT
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%H5RedisDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.get_links(parent)
get links
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
list of link objects
.TP
.B Returns
link object
.TP
.B Return type
.INDENT 7.0
.TP
.B obj
\fIlist\fP <\fI\%H5RedisLink\fP>
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.is_image_file_supported()
provides if loading of image files are supported
.INDENT 7.0
.TP
.B Retruns
if loading of image files are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.is_unlimited_vds_supported()
provides if unlimited vds are supported
.INDENT 7.0
.TP
.B Retruns
if unlimited vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.is_vds_supported()
provides if vds are supported
.INDENT 7.0
.TP
.B Retruns
if vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.link(target, parent, name)
create link
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- nexus path name
.IP \(bu 2
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- link name
.UNINDENT
.TP
.B Returns
link object
.TP
.B Return type
\fI\%H5RedisLink\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.load_file(membuffer, filename=None, readonly=False, **pars)
load a file from memory byte buffer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5RedisFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.nptype(dtype)
converts to numpy types
.INDENT 7.0
.TP
.B Parameters
\fBdtype\fP (\fI\%str\fP) \-\- h5 writer type type
.TP
.B Returns
nupy type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.open_file(filename, readonly=False, redisurl=None, **pars)
open the new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBredisurl\fP (\fI\%str\fP) \-\- redis URL
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version: \(aqlastest\(aq or \(aqearliest\(aq
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5RedisFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.splitstr(text)
split string separated by space
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtext\fP (\fI\%list\fP <\fI\%str\fP>) \-\- text to split
.IP \(bu 2
\fBtext\fP \-\- split text
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.target_field_view(filename, fieldpath, shape, dtype=None, maxshape=None)
create target field view for VDS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
target field view object
.TP
.B Return type
\fI\%H5RedisTargetFieldView\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.unlimited(parent=None)
return dataspace UNLIMITED variable for the current writer module
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
dataspace UNLIMITED variable
.TP
.B Return type
\fBh5cpp.dataspace.UNLIMITED\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.unlimited_selection(sel, shape)
checks if hyperslab is unlimited
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsel\fP (\fBfilewriter.FTHyperslab\fP) \-\- hyperslab selection
.IP \(bu 2
\fBshape\fP (\fI\%list\fP) \-\- give shape
.UNINDENT
.TP
.B Returns
if hyperslab is unlimited list
.TP
.B Return type
\fI\%list\fP <\fI\%bool\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.h5rediswriter.virtual_field_layout(shape, dtype, maxshape=None)
creates a virtual field layout for a VDS file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
virtual layout
.TP
.B Return type
\fI\%H5RedisVirtualFieldLayout\fP
.UNINDENT
.UNINDENT
.SS nxstools.nxsargparser module
.sp
NeXus tool argumen parser
.INDENT 0.0
.TP
.B exception  nxstools.nxsargparser.ErrorException
Bases: \fI\%Exception\fP
.sp
error parser exception
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsargparser.NXSArgParser(**kwargs)
Bases: \fI\%ArgumentParser\fP
.sp
Argument parser with error exception
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBkwargs\fP \-\- \fI\%argparse.ArgumentParser\fP
parameter dictionary
.UNINDENT
.INDENT 7.0
.TP
.B createSubParsers()
creates command\-line parameters parser
.INDENT 7.0
.TP
.B Returns
command runner
.TP
.B Return type
\fI\%Runner\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B error(message)
error handler
.INDENT 7.0
.TP
.B Parameters
\fBmessage\fP (\fI\%str\fP) \-\- error message
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsargparser.Runner(parser)
Bases: \fI\%object\fP
.sp
abstract runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
parser creator
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqabstract runner\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  None
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
run commandthe main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.SS nxstools.nxscollect module
.sp
Command\-line tool to merge images of external file\-formats
into the master NeXus file
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.Collector(nexusfilename, compression=2, skipmissing=False, storeold=False, testmode=False, writer=None)
Bases: \fI\%object\fP
.sp
Collector merge images of external file\-formats
into the master NeXus file
.sp
The constructor creates the collector object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBnexusfilename\fP (\fI\%str\fP) \-\- the nexus file name
.IP \(bu 2
\fBcompression\fP (\fI\%int\fP) \-\- compression rate
.IP \(bu 2
\fBskipmissing\fP (\fI\%bool\fP) \-\- if skip missing images
.IP \(bu 2
\fBstoreold\fP (\fI\%bool\fP) \-\- if backup the input file
.IP \(bu 2
\fBtestmode\fP (\fI\%bool\fP) \-\- if run in a test mode
.IP \(bu 2
\fBwriter\fP (\fI\%str\fP) \-\- the writer module
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B collect(path=None, inputfiles=None, datatype=None, shape=None)
creates a temporary file,
collects the all image files defined by hdf5
postrun fields of NXcollection groups and renames the temporary file
to the origin one if the action was successful
or appends specific data if path and inputfiles are given
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fI\%str\fP) \-\- nexus path of the data field
.IP \(bu 2
\fBinputfiles\fP (\fI\%list\fP <\fI\%str\fP>) \-\- a list of file strings
.IP \(bu 2
\fBdatatype\fP (\fI\%str\fP) \-\- field data type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP <\fI\%int\fP >) \-\- field shape
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.Execute(parser)
Bases: \fI\%Runner\fP
.sp
Execute runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqappend images to the master file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq examples:\en       nxscollect append \-c1 /tmp/gpfs/raw/scan_234.nxs \en\en       nxscollect append \-c32008:0,2 /ramdisk/scan_123.nxs \en\en       nxscollect append \-\-test /tmp/gpfs/raw/scan_234.nxs \en\en       nxscollect append scan_234.nxs \-\-path /scan/instrument/pilatus/data  \-\-input\-files \(aqscan_%05d.tif:0:100\(aq \en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.LayoutField(target, hyperslab=None)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBhyperslab\fP (\fBfilewriter.FTHyperslab\fP) \-\- target field object
.IP \(bu 2
\fBhyperslab\fP \-\- field hyperslab or slices
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B hyperslab
\fBfilewriter.FTHyperslab\fP layout hyperslab or slices
.UNINDENT
.INDENT 7.0
.TP
.B shape
\fI\%tuple\fP vds shape in layout
.UNINDENT
.INDENT 7.0
.TP
.B slices
\fI\%list\fP <\fI\%slice\fP>
.UNINDENT
.INDENT 7.0
.TP
.B target
\fI\%TargetFieldView\fP target field object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.Link(parser)
Bases: \fI\%Runner\fP
.sp
Execute runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate an external or internal link in the master file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxscollect link scan_234.nxs://entry/instrument/lambda \-\-name data \-\-target scan_234/lambda.nxs://entry/data/data \en\enscan_234.nxs://entry/instrument/eiger:NXdetector   \-\-target scan_234/eiger.nxs://entry/data/data \en\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.Linker(nexusfilepath, target, name=None, storeold=False, testmode=False, writer=None)
Bases: \fI\%object\fP
.sp
Create external and internal links of NeXus files
.sp
The constructor creates the collector object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBnexusfilepath\fP (\fI\%str\fP) \-\- the nexus file name and nexus path
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- the nexus file name and nexus path
.IP \(bu 2
\fBstoreold\fP (\fI\%bool\fP) \-\- if backup the input file
.IP \(bu 2
\fBtestmode\fP (\fI\%bool\fP) \-\- if run in a test mode
.IP \(bu 2
\fBwriter\fP (\fI\%str\fP) \-\- the writer module
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B link()
creates NeXus link
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.TargetFieldView(filename, path, shape=None, hyperslab=None, maxshape=None)
Bases: \fI\%object\fP
.sp
target field map
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBpath\fP (\fI\%str\fP) \-\- nexus field path with its name
.IP \(bu 2
\fBshape\fP (\fI\%list\fP <\fI\%int\fP>) \-\- field shape
.IP \(bu 2
\fBhyperslab\fP (\fBfilewriter.FTHyperslab\fP) \-\- field hyperslab or slices
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP <\fI\%int\fP>) \-\- maximal field shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B filename
\fI\%str\fP file name
.UNINDENT
.INDENT 7.0
.TP
.B hyperslab
\fBfilewriter.FTHyperslab\fP field hyperslab or slices
.UNINDENT
.INDENT 7.0
.TP
.B maxshape
\fI\%list\fP <\fI\%int\fP> field maximal shape
.UNINDENT
.INDENT 7.0
.TP
.B path
\fI\%str\fP nexus field path with its name
.UNINDENT
.INDENT 7.0
.TP
.B shape
\fI\%list\fP <\fI\%int\fP> field shape
.UNINDENT
.INDENT 7.0
.TP
.B slices
\fI\%list\fP <\fI\%slice\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.TargetFieldsLayout(exfieldpaths=\(aq\(aq, exfieldshapes=\(aq\(aq, shapes=None, separator=\(aq,\(aq)
Bases: \fI\%list\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBexfieldpaths\fP (\fI\%str\fP) \-\- target field paths
.IP \(bu 2
\fBexfieldshapes\fP (\fI\%str\fP) \-\- target field shapes
.IP \(bu 2
\fBshapes\fP (\fBlist\(ga<:obj:\(gatuple\(ga<:obj:\(gaint\fP> >) \-\- target field shapes
.IP \(bu 2
\fBexfieldpaths\fP \-\- separator of field path strings
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add_layout_hyperslabs(offsets, blocks, counts, strides)
add layout hyperslabs
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoffsets\fP (\fI\%str\fP) \-\- layout offsets
.IP \(bu 2
\fBblocks\fP (\fI\%str\fP) \-\- layout blocks
.IP \(bu 2
\fBcounts\fP (\fI\%str\fP) \-\- layout counts
.IP \(bu 2
\fBstrides\fP (\fI\%str\fP) \-\- layout strides
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add_layout_slices(slices)
add layout slices
.INDENT 7.0
.TP
.B Parameters
\fBslices\fP (\fI\%str\fP) \-\- layout slices
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add_target_hyperslabs(offsets, blocks, counts, strides)
add target hyperslabs
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoffsets\fP (\fI\%str\fP) \-\- target offsets
.IP \(bu 2
\fBblocks\fP (\fI\%str\fP) \-\- target blocks
.IP \(bu 2
\fBcounts\fP (\fI\%str\fP) \-\- target counts
.IP \(bu 2
\fBstrides\fP (\fI\%str\fP) \-\- target strides
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add_target_slices(slices)
add taget slices
.INDENT 7.0
.TP
.B Parameters
\fBslices\fP (\fI\%str\fP) \-\- target slices
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.VDS(parser)
Bases: \fI\%Runner\fP
.sp
Execute runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate a virual dataset in the master file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq examples:\en\en       nxscollect vds scan_234.nxs://entry/instrument/eiger/data  \-\-shape \(aq1000,2048,1024\(aq \-\-dtype uint32  \-\-target\-fields \(aqeiger_%05d.nxs://entry/data/data:1:10\(aq \-\-shapes \(aq100,,:100,,:100,,:100,,:100,,:100,,:100,,:100,,:100,,:100,,\(aq   \-\-offsets \(aq0,,:100,,:200,,:300,,:400,,:500,,:600,,:700,,:800,,:900,,\(aq \en\en\en           \- creates VDS (shape [1000,2048,1024]) of ten nexus files (shape [100,2048,1024]) merged in their first dimension\en\en\en\en       nxscollect vds scan_234.nxs://entry/instrument/lambda/data  \-\-shape \(aq100,300,762\(aq \-\-dtype uint32  \-\-target\-fields \(aqlambda_%05d.nxs://entry/data/data:0:2\(aq \-\-shapes \(aq,,250:,,250:,,250\(aq   \-\-offsets \(aq,,:,,256:,,512\(aq  \-\-counts \(aqU,,:U,,:U,,\(aq \-f 1 \en\en\en           \- creates VDS (shape [100,300,762]) of three nexus files (shape [100,300,250]) merged in their third dimension,\en               separated with a 6 pixel gap of 1 values and unlimited first dimension\en\en\en\en       nxscollect vds scan_234.nxs://entry/instrument/percival/data  \-\-shape \(aq4000,1600,2000\(aq \-\-dtype int16  \-\-target\-fields \(aqpercival_%05d.nxs://entry/data/data:1:4\(aq \-\-shapes \(aq1000,,:1000,,:1000,,:1000,,\(aq   \-\-offsets \(aq0,,:1,,:2,,:3,,\(aq  \-\-counts \(aqU,,:U,,:U,,:U,,\(aq \-\-strides \(aq4,,:4,,:4,,:4,,\(aq \en\en\en           \- creates VDS (shape [1000,1600,2000]) of three nexus files (shape [1000,1600,2000])\en                merged in their the first dimension with interlaying frames\en                and unlimited first dimension\en\en\en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscollect.VirtualDataset(nexusfilepath, options, writer=None)
Bases: \fI\%object\fP
.sp
Create virtual dataset in the master NeXus files
.sp
The constructor creates the collector object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBnexusfilepath\fP (\fI\%str\fP) \-\- the nexus file name and nexus path
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.IP \(bu 2
\fBwriter\fP (\fI\%str\fP) \-\- the writer module
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates VDS
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.crdtoint(crd)
convert coorinate to int or  None or Unlimited
.INDENT 7.0
.TP
.B Parameters
\fBcrd\fP (\fIcordinate as string\fP) \-\- cordinate as string
.TP
.B Returns
converted coordinate
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.filegenerator(filestr, pattern=None)
provides file name generator from file string
.INDENT 7.0
.TP
.B Parameters
\fBfilestr\fP \-\- file string
.TP
.B Type
filestr: \fI\%str\fP
.TP
.B Returns
file name generator or a list of file names
.TP
.B Return type
\fBmethodinstance\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.getcompression(compression)
.INDENT 7.0
.TP
.B converts compression string to a deflate level parameter
or list with [filterid, opt1, opt2, ...]
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
\fBcompression\fP (\fI\%str\fP) \-\- compression string
.TP
.B Returns
deflate level parameter
or list with [filterid, opt1, opt2, ...]
.TP
.B Return type
\fI\%int\fP or \fI\%list\fP < \fI\%int\fP > or \fINone\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.main()
the main program function
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.splitcoords(crdstr)
splits coordinate string
.INDENT 7.0
.TP
.B Parameters
\fBcrdstr\fP (\fIcordinate string\fP) \-\- cordinate string
.TP
.B Returns
a list ofr coordinates in tuples
.TP
.B Return type
\fI\%list\fP <\fI\%tuple\fP < \fI\%int\fP >>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscollect.splitslices(crdstr)
splits coordinate string
.INDENT 7.0
.TP
.B Parameters
\fBcrdstr\fP (\fIcordinate string\fP) \-\- cordinate string
.TP
.B Returns
a list ofr coordinates in tuples
.TP
.B Return type
\fI\%list\fP <\fI\%tuple\fP < \fI\%int\fP >>
.UNINDENT
.UNINDENT
.SS nxstools.nxsconfig module
.sp
Command\-line tool for ascess to the nexdatas configuration server
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Components(parser)
Bases: \fI\%Runner\fP
.sp
Components runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget a list of dependent components\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig components dcm\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.ConfigServer(device, nonewline=False)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- device name of the configuration server
.IP \(bu 2
\fBnonewline\fP (\fI\%bool\fP) \-\- if the output should not be separated
by the new line character
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B char
(\fI\%str\fP) spliting character
.UNINDENT
.INDENT 7.0
.TP
.B componentsCmd(components)
lists components of the components
.INDENT 7.0
.TP
.B Parameters
\fBcomponents\fP (\fI\%list\fP <\fI\%str\fP>) \-\- given components
.TP
.B Returns
list of component names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dataCmd(args)
provides varaible values
.INDENT 7.0
.TP
.B Parameters
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.TP
.B Returns
JSON with variables
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deleteCmd(ds, args, ask=True, profiles=False)
delete the DB items
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBask\fP (\fI\%bool\fP) \-\- ask flag
.IP \(bu 2
\fBprofiles\fP (\fI\%bool\fP) \-\- flag set True for profiles
.UNINDENT
.TP
.B Returns
list of XML items
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B describeCmd(ds, args, md, pr, headers=None, filters=None)
provides description of configuration elements
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmd\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBpr\fP (\fI\%str\fP) \-\- flag set True for private components
.IP \(bu 2
\fBpr\fP \-\- column headers
.IP \(bu 2
\fBfilters\fP (\fI\%str\fP) \-\- filters for first column names separated by comma
.UNINDENT
.TP
.B Returns
list with description
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B geometryCmd(args, md, pr)
provides geometry info for given elements
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmd\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBpr\fP (\fI\%bool\fP) \-\- flag set True for private components
.UNINDENT
.TP
.B Returns
list with description
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getCmd(args)
provides final configuration
.INDENT 7.0
.TP
.B Parameters
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.TP
.B Returns
XML configuration string
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B infoCmd(ds, args, md, pr, profiles)
Provides info for given elements
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmd\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBpr\fP (\fI\%bool\fP) \-\- flag set True for private components
.IP \(bu 2
\fBprofiles\fP (\fI\%bool\fP) \-\- flag set True for profiles
.UNINDENT
.TP
.B Returns
list with description
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B listCmd(ds, mandatory=False, private=False, profiles=False)
lists the DB item names
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBmandatory\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBprivate\fP (\fI\%bool\fP) \-\- flag set True for components starting with \(aq__\(aq
.IP \(bu 2
\fBprofiles\fP (\fI\%bool\fP) \-\- flag set True for profiles
.UNINDENT
.TP
.B Returns
list op item names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mergeCmd(args)
provides merged components
.INDENT 7.0
.TP
.B Parameters
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.TP
.B Returns
XML configuration string with merged components
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B recordCmd(ds, name)
lists datasources of the component
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- given component or datasource
.UNINDENT
.TP
.B Returns
list of record names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showCmd(ds, args, mandatory=False, profiles=False, directory=None)
shows the DB items
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBmandatory\fP (\fI\%bool\fP) \-\- flag set True for mandatory components
.IP \(bu 2
\fBprofiles\fP (\fI\%bool\fP) \-\- flag set True for profiles
.IP \(bu 2
\fBdirectory\fP (\fI\%str\fP) \-\- output file directory
.UNINDENT
.TP
.B Returns
list of XML items
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sourcesCmd(components, mandatory=False)
lists datasources of the components
.INDENT 7.0
.TP
.B Parameters
\fBcomponents\fP (\fI\%list\fP <\fI\%str\fP>) \-\- given components
.TP
.B Returns
list of datasource names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B uploadCmd(ds, args, force=False, profiles=False, directory=\(aq.\(aq, mandatory=False, external=None)
upload the DB items from files
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBds\fP (\fI\%bool\fP) \-\- flag set True for datasources
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of item names
.IP \(bu 2
\fBforce\fP (\fI\%bool\fP) \-\- force flag
.IP \(bu 2
\fBprofiles\fP (\fI\%bool\fP) \-\- flag set True for profiles
.IP \(bu 2
\fBdirectory\fP (\fI\%str\fP) \-\- input file directory
.IP \(bu 2
\fBmandatory\fP (\fI\%bool\fP) \-\- mandatory flag
.IP \(bu 2
\fBexternal\fP (\fI\%str\fP) \-\- external import type
.UNINDENT
.TP
.B Returns
list of XML items
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B variablesCmd(components, mandatory=False)
lists variable of the components
.INDENT 7.0
.TP
.B Parameters
\fBcomponents\fP (\fI\%list\fP <\fI\%str\fP>) \-\- given components
.TP
.B Returns
list of datasource names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Data(parser)
Bases: \fI\%Runner\fP
.sp
Data runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget/set values of component variables\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig data \en       nxsconfig data \e\(aq{\(dqsample_name\(dq:\(dqH2O\(dq}\e\(aq\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Delete(parser)
Bases: \fI\%Runner\fP
.sp
Show runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqdelete components, datasources or profiles with given names from ConfigServer\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig delete pilatus1a\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Describe(parser)
Bases: \fI\%Runner\fP
.sp
Describe runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqshow all parameters of given components or datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig describe pilatus\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Geometry(parser)
Bases: \fI\%Runner\fP
.sp
List runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqshow transformation parameters of given components or datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig geometry dcm\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Get(parser)
Bases: \fI\%Runner\fP
.sp
Get runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget full configuration of components\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig get  dcm source slit1 slit2\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Info(parser)
Bases: \fI\%Runner\fP
.sp
List runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqshow general parameters of given components, datasources or profile\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig info slit1\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.List(parser)
Bases: \fI\%Runner\fP
.sp
List runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqlist names of available components, datasources or profiles\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig list\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Merge(parser)
Bases: \fI\%Runner\fP
.sp
Merge runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget merged configuration of components or datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig merge  slit1 dcm \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Record(parser)
Bases: \fI\%Runner\fP
.sp
Record runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget a list of datasource record names for components or datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig record \-d exp_mot01 \en       nxsconfig record dcm \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Servers(parser)
Bases: \fI\%Runner\fP
.sp
Servers runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget a list of configuration servers from the current tango host\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig servers\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Show(parser)
Bases: \fI\%Runner\fP
.sp
Show runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqshow (or write to files) components, datasources or profiles with given names\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig show dcm\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Sources(parser)
Bases: \fI\%Runner\fP
.sp
Sources runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget a list of component datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig sources slit1\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Upload(parser)
Bases: \fI\%Runner\fP
.sp
Store runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqupload components, datasources or profiles with given names from locale filesystem into ConfigServer\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig upload exp_c01 exp_c02\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsconfig.Variables(parser)
Bases: \fI\%Runner\fP
.sp
Variables runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget a list of component variables\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsconfig variables dcm\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsconfig.main()
the main program function
.UNINDENT
.SS nxstools.nxscreate module
.sp
Command\-line tool for creating NXSConfigServer configuration of Nexus Files
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.ClientDS(parser)
Bases: \fI\%Runner\fP
.sp
clientds runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
parser creator
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate client datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <server> is taken from Tango DB\en\en examples:\en\en       nxscreate clientds starttime \-b  \en\en           \- create the \(aqstarttime\(aq datasource of the \(aqCLIENT\(aq type with the \(aqstarttime\(aq record name\en               and upload them to the NXSConfigServer database \en\en       nxscreate clientds title \-d /home/user/xmldir \en\en           \- create the \(aqtitle\(aq datasource of the \(aqCLIENT\(aq type with the \(aqtitle\(aq record name\en               in the \(aq/home/user/xmldir\(aq directory\en\en       nxscreate clientds \-v exp_c \-f1 \-l4 \-b  \en\en           \- create the \(aqexp_c01\(aq, \(aqexp_c02\(aq, \(aqexp_c03\(aq, \(aqexp_c04\(aq datasources of the \(aqCLIENT\(aq type\en               with the corresponding \(aqexp_c0? record names\en               and upload them to the NXSConfigServer database \en               where \(aq?\(aq is 1, 2, 3, 4 respectively \en\en       nxscreate clientds \-v hasppXX:10000/expchan/vfcadc_exp/ \-f5 \-l8  \-m \-b \-s exp_vfc\en\en           \- create the \(aqexp_vfc05\(aq, \(aqexp_vfc06\(aq, \(aqexp_vfc07\(aq, \(aqexp_vfc08\(aq datasources of the \(aqCLIENT\(aq type\en               with the corresponding \(aqhasppXX:10000/expchan/vfcadc_exp/?\(aq record names\en               and upload them to the NXSConfigServer database \en               where \(aq?\(aq is 5, 6, 7, 8 respectively \en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.Comp(parser)
Bases: \fI\%Runner\fP
.sp
comp runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate simple components\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq * with \-b: components are created (without datasources) in Configuration Server database\en * without \-b: components are created (without datasources) on the local filesystem in \-d <directory> \en * default: <directory> is \e\(aq.\e\(aq \en            <server> is taken from Tango DB\en            <strategy> is step\en            <type> is NX_FLOAT\en            <chunk> is SCALAR\en            <nexuspath> is \(dq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument/collection/\(dq\en\en examples:\en\en       nxscreate comp counter \en\en           \- create the \e\(aqcounter\e\(aq component in the local directory \en               which sets fetching data in the \e\(aqSTEP\e\(aq mode from a \e\(aqcounter\e\(aq datasource to \en               \e\(aq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument:NXinstrument/collection:NXcollection/counter\e\(aq \en\en       nxscreate comp \-f5 \-l7 \-v exp_c \-b \en\en           \- create the \e\(aqexp_c05\e\(aq, \e\(aqexp_c06\e\(aq \e\(aqexp_c07\e\(aq components in the NXSConfigServer database \en               which set fetching data in the \e\(aqSTEP\e\(aq mode from  corresponding \e\(aqexp_c0?\e\(aq datasources to corresponding\en               \e\(aq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument:NXinstrument/collection:NXcollection/exp_c0?\e\(aq\en                where \e\(aq?\e\(aq is 5, 6, 7 respectively \en\en       nxscreate comp lambda \-d /home/user/xmldir/ \en\en           \- create the \e\(aqlambda\e\(aq component in the \e\(aq/home/user/xmldir/\e\(aq directory \en               which sets fetching data in the \e\(aqSTEP\e\(aq mode from a \e\(aqlambda\e\(aq datasource to \en               \e\(aq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument:NXinstrument/collection:NXcollection/lambda\e\(aq \en\en       nxscreate comp \-n \(dq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument/sis3302:NXdetector/collection:NXcollection/\(dq \-v sis3302_1_roi \-f1 \-l3  \-g FINAL \-t NX_FLOAT64 \-k \-b \-m \en\en           \- create the \e\(aqsis3302_1_roi1\e\(aq, sis3302_1_roi2\e\(aq, sis3302_1_roi3\e\(aq components in the NXSConfigServer database \en               which set fetching data in the \e\(aqFINAL\e\(aq mode from corresponding \e\(aqsis3302_1_roi?\e\(aq datasources to corresponding\en               \e\(aq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument:NXinstrument/sis3302:NXdetector/collection:NXcollection/sis3302_1_roi?\e\(aq\en               float64 fields and creates corresponding\en               \e\(aq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/data:NXdata/sis3302_1_roi?\e\(aq links\en               where \e\(aq?\e\(aq is 1, 2, 3 respectively \en\en       nxscreate comp \-n \(dq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument/eh1_mca01:NXdetector/data\(dq eh1_mca01 \-g STEP \-t NX_FLOAT64 \-i \-b \-c SPECTRUM\en\en           \- create the \e\(aqeh1_mca01\e\(aq component in the NXSConfigServer database \en               which set fetching STECTRUM data in the \e\(aqSTEP\e\(aq mode from a \e\(aqeh1_mca01\e\(aq datasource to \en               \e\(aq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/instrument:NXinstrument/eh1_mca01:NXdetector/data\en               float64 fields and creates \en               \e\(aq/\e\e$var.entryname#\e\(aqscan\e\(aq\e\e$var.serialno:NXentry/data:NXdata/eh1_mca01\e\(aq links\en\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.Compare(parser)
Bases: \fI\%Runner\fP
.sp
compare runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcompare two online.xml files\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * default: second file <online_file> is \(aq/online_dir/online.xml\(aq \en            if only file is given\en\en examples:\en\en       nxscreate compare online.xml \en\en           \- compare \(aqonline.xml\(aq to \(aq/online_dir/online.xml\en\(aq \en       nxscreate compare /online_dir/online_040.xml online.xml \en\en           \- compare \(aq/online_dir/online_040.xml\(aq to \(aqonline.xml\(aq\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.DeviceDS(parser)
Bases: \fI\%Runner\fP
.sp
deviceds runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate datasources for all device attributes\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * without <dv_attr1>: datasources for all attributes are created\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <server> is taken from Tango DB\en            <datasource> is \(aqexp_mot\(aq \en            <host>, <port> are taken from <server>\en\en examples:\en\en       nxscreate deviceds  \-v p09/pilatus/haso228k \en\en           \- create datasources of the \(aqTANGO\(aq type\en               for all attribute of \(aqp09/pilatus/haso228k\(aq tango device\en               in the local file directory database \en\en       nxscreate deviceds  \-v p09/lambda2m/haso228k \-uhaslambda \-b \en\en           \- create datasources of the \(aqTANGO\(aq type\en               for all attribute of \(aqp09/lambda2m/haso228k\(aq tango device\en               with their hostname \(aqhaslambda\(aq \en               and upload them to the NXSConfigServer database \en\en       nxscreate deviceds  \-v p09/pilatus300k/haso228k \-b \-s pilatus300k_ RoI Energy ExposureTime\en\en           \- create datasources of the \(aqTANGO\(aq type\en               for RoI Energy ExposureTime attribute of \(aqp09/lambda2m/haso228k\(aq tango device\en               with the \(aqpilatus300k_\(aq datasource prefix \en               and upload them to the NXSConfigServer database \en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.OnlineCP(parser)
Bases: \fI\%Runner\fP
.sp
onlinecp runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate component from online.xml file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * without \(aq\-c <component>\(aq: show a list of possible components\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en * default: <inputFile> is \(aq/online_dir/online.xml\(aq \en            <server> is taken from Tango DB\en\en examples:\en\en       nxscreate onlinecp  \en\en           \- list possible components which can be created from online.xml \en\en       nxscreate onlinecp \-c pilatus \-b \en\en           \- create the \(aqpilatus\(aq component and its datasources\en               in the NXSConfigServer database\en\en       nxscreate onlinecp \-c lambda \-d /home/user/xmldir/ \en\en           \- create the \(aqlambda\(aq component and its datasources\en               in the \(aq/home/user/xmldir/\(aq directory\en\en       nxscreate onlinecp \-c lmbd \-t lambda \-b \en\en           \- create the \(aqlmbd\(aq component of \(aqlambda\(aq type and its datasources\en               in the NXSConfigServer database\en\en\en       nxscreate onlinecp \-c lmbd \-t lambda  \-v p00/lmbd/1 \-u haso000 \-w 10000 \-b \en\en           \- create the \(aqlmbd\(aq component of \(aqlambda\(aq type and its datasources without online.xml\en               in the NXSConfigServer database\en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.OnlineDS(parser)
Bases: \fI\%Runner\fP
.sp
onlineds runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate datasources from online.xml file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * with \-b: datasources are created in Configuration Server database\en * with \-d <directory>: datasources are created on the local filesystem\en * without \-b or \-d <directory>: run in the test mode\en * default: <inputFile> is \(aq/online_dir/online.xml\(aq \en            <server> is taken from Tango DB\en\en \(gaonlineds\(ga overwrites existing datasources\en\en examples:\en\en       nxscreate onlineds \-b  \en\en           \- create datasources from online.xml file \en               and upload them to the NXSConfigServer database \en\en       nxscreate onlineds \-b \-t \en\en           \- like above but set motor tango datasources to \en               be no __CLIENT__ like\en\en       nxscreate onlineds \-d /home/user/xmldir \en\en           \- create datasources from online.xml file \en               and save them in the \(aq/home/user/xmldir\(aq directory \en\en       nxscreate onlineds \en\en           \- run the command in test mode without creating datasources \en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscreate.PYTANGO  =  True
(\fI\%bool\fP) True if PyTango available
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.PoolDS(parser)
Bases: \fI\%Runner\fP
.sp
poolds runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate datasources from sardana pool device\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * with \-b: datasources are created in Configuration Server database\en * with \-d <directory>: datasources are created on the local filesystem\en * without \-b or \-d <directory>: run in the test mode\en * default: <channel> is \(aqALL\(aq \en            <server> is taken from Tango DB\en\en            <pool> is taken from Tango DB\en\en \(gapoolds\(ga overwrites existing datasources\en\en examples:\en\en       nxscreate poolds \-b  \en\en           \- create all datasources defined in the local Pool \en               and upload them to the NXSConfigServer database \en\en       nxscreate poolds \-b \-t \en\en           \- like above but set motor tango datasources to \en               be no __CLIENT__ like\en\en       nxscreate poolds \-d . \-p p09/pool/haso228 \en\en           \- create all datasources defined in the \(aqp09/pool/haso228\(aq Pool \en               and save them in the local directory \en\en       nxscreate poolds \-b Motor CTExpChannel \en\en           \- create datasources of \(aqMotor\(aq and CTExpChannel classes \en               defined in the local Pool \en               and upload them to the NXSConfigServer database \en\en       nxscreate poolds \-b mot01 mot03 \en\en           \- create \(aqmot01\(aq and \(aqmot03\(aq datasources\en               defined in the local Pool \en               and upload them to the NXSConfigServer database \en\en       nxscreate poolds \en\en           \- run the command in test mode without creating datasources \en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.SECoPCP(parser)
Bases: \fI\%Runner\fP
.sp
secop component runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate secop components\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * with \-b: components are created (without datasources) in Configuration Server database\en * without \-b: components are created (without datasources) on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <port> is 5001\en\en examples:\en\en       nxscreate secopcp \en       nxscreate secopcp \-l \en\en           \- list all modules of the given node \en\en       nxscreate secopcp \-c temp_node \-d . \-j secopn_node.json \en\en           \- create the all secop components in the local directory for the node configured with the json file \en\en       nxscreate secopcp T \-t 5001 \-b \en\en           \- create the component for the T secop module  in the NXSConfigServer database for the node on the port 5000 \en\en       nxscreate secopcp \-d /home/user/xmldir/ \en\en           \- create the all secop components in the given directory\en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.StdComp(parser)
Bases: \fI\%Runner\fP
.sp
stdcomp runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate component from the standard templates\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * without \(aq\-t <type>\(aq: show a list of possible component types\en * with \(aq\-t <type>  and without \-c <component>: show a list of component variables for the given component type\en * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en * [name1 value1 [name2 value2] ...] sequence  defines component variable values \en\en examples:\en\en       nxscreate stdcomp  \en\en           \- list possible component types\en               from the \(aqnxstools.xmltemplates\(aq package\en\en       nxscreate stdcomp  \-p nxsextrasp00  \en\en           \- list possible component types from the \(aqnxsextrasp00\(aq package\en\en       nxscreate stdcomp  \-t source \en\en           \- list a description of \(aqsource\(aq component variables\en\en       nxscreate stdcomp  \-t default  \-c default  \-m  \-b\en\en           \- create \(aqdefault\(aq component  of the \(aqdefault\(aq type\en               in the NXSConfigServer database and set it as mandatory\en\en       nxscreate stdcomp  \-t slit  \-c front_slit1   xgap slt1x  ygap slt1y\en\en           \- create \(aqfront_slit1\(aq component  of the \(aqslit\(aq type\en               where variables xgap=\(aqslt1x\(aq and ygap=\(aqslt1and\(aq in the local directory \en\en       nxscreate stdcomp  \-p nxsextrasp08  \-t analyzer  \-c analyzer1  v anav  roll anaroll  \-b\en\en           \- create \(aqanalyzer1\(aq component of the \(aqanalyzer type\(aq\en               where variables v=\(aqanav\(aq and roll=\(aqamaroll\(aq in the NXSConfigServer database\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreate.TangoDS(parser)
Bases: \fI\%Runner\fP
.sp
tangods runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate tango datasources\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq * with \-b: datasources are created in Configuration Server database\en * without \-b: datasources are created on the local filesystem in \-d <directory> \en * default: <directory> is \(aq.\(aq \en            <server> is taken from Tango DB\en            <datasource> is \(aqexp_mot\(aq \en            <host>, <port> are taken from <server>\en\en examples:\en\en       nxscreate tangods \-f1 \-l2 \-v p09/motor/exp. \-s exp_mot \en\en           \- create the \(aqexp_mot01\(aq and \(aqexp_mot02\(aq datasources of the \(aqTANGO\(aq type\en               with the corresponding \(aqp09/motor/exp.0?\(aq device names\en               and \(aqPosition\(aq tango attribute names in the local directory\en               where \(aq?\(aq is 1, 2 respectively \en\en       nxscreate tangods \-f1 \-l32 \-v p02/motor/eh1a. \-s exp_mot \-b \en\en           \- create the \(aqexp_mot01\(aq, ... ,\(aqexp_mot32\(aq datasources of the \(aqTANGO\(aq type\en               with the corresponding \(aqp09/motor/eh1a.??\(aq device names\en               while their attribute name is \(aqPosition\(aq  and upload them to the NXSConfigServer database\en               where \(aq??\(aq is 01, 02, ... ,32 respectively \en\en       nxscreate tangods \-v petra/globals/keyword \-s source_current \-u haso228 \-t 10000 \e\e \en                         \-a BeamCurrent \-b \-r p09/nxsconfigserver/haso228 \-o \-g __CLIENT__\en\en           \- create the a \(aqsource_current\(aq datasource of the \(aqTANGO\(aq type belonging to the \(aq__CLIENT__\(aq group \en               with the \(aqpetra/globals/keyword\(aq device name\en               while their attribute name is \(aqBeamCurrent\(aq, \en               their hostname is \(aqhaso228\(aq, their tango port is \(aq10000\(aq\en               and upload them to the NXSConfigServer \(aqp09/nxsconfigserver/haso228\(aq database\en\en       nxscreate tangods \-f1 \-l8  \-v pXX/slt/exp. \-s slt_exp_ \-u hasppXX.desy.de \-b \en\en           \- create the \(aqslt_exp_01\(aq, ... ,\(aqslt_exp_08\(aq datasources of the \(aqTANGO\(aq type\en               with the corresponding \(aqpXX/slt/exp.0?\(aq device names\en               while their attribute name is \(aqPosition\(aq, \en               their hostname is \(aqhasppXX.desy.de\(aq  and upload them to the NXSConfigServer database\en               where \(aq??\(aq is 1, 2, ... ,8 respectively \en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscreate.main()
the main program function
.UNINDENT
.SS nxstools.nxscreator module
.sp
Command\-line tool for creating to the nexdatas configuration server
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.CPCreator(options, args, printouts=True)
Bases: \fI\%Creator\fP
.sp
component creator of all online.xml complex devices
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B components
(\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP >) component xml dictionary
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates components of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates component xmls of all online.xml complex devices
abstract method
.UNINDENT
.INDENT 7.0
.TP
.B datasources
(\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP >) datasource xml dictionary
.UNINDENT
.INDENT 7.0
.TP
.B xmlpackage
(\fI\%str\fP) xml template component package
.UNINDENT
.INDENT 7.0
.TP
.B xmltemplatepath
(\fI\%str\fP) xml template component package path
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception  nxstools.nxscreator.CPExistsException
Bases: \fI\%Exception\fP
.sp
Component already exists exception
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.ClientDSCreator(options, args, printouts=True)
Bases: \fI\%Creator\fP
.sp
client datasource creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a client datasource xml and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.CompareOnlineDS(options, args, printouts=True)
Bases: \fI\%object\fP
.sp
comparing tool for online.xml files
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B args
(\fI\%list\fP < \fI\%str\fP >) creator arguments
.UNINDENT
.INDENT 7.0
.TP
.B compare()
.UNINDENT
.INDENT 7.0
.TP
.B options
(\fBoptparse.Values\fP) creator options
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.ComponentCreator(options, args, printouts=True)
Bases: \fI\%Creator\fP
.sp
component creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a component xml and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.Creator(options, args, printouts=True)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B args
(\fI\%list\fP < \fI\%str\fP >) creator arguments
.UNINDENT
.INDENT 7.0
.TP
.B options
(\fBoptparse.Values\fP) creator options
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception  nxstools.nxscreator.DSExistsException
Bases: \fI\%Exception\fP
.sp
DataSource already exists exception
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.Device
Bases: \fI\%object\fP
.sp
device from online.xml
.INDENT 7.0
.TP
.B attribute
(\fI\%str\fP) attribute name
.UNINDENT
.INDENT 7.0
.TP
.B compare(dv)
.UNINDENT
.INDENT 7.0
.TP
.B dtype
(\fI\%str\fP) device type
.UNINDENT
.INDENT 7.0
.TP
.B findAttribute(tangohost, clientlike=False)
sets attribute and datasource group of online.xml device
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtangohost\fP (\fI\%str\fP) \-\- tango host
.IP \(bu 2
\fBclientlike\fP (\fI\%bool\fP) \-\- tango motors to be client like
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B findDevice(tangohost)
sets sardana device name and sardana host/port of online.xml device
.INDENT 7.0
.TP
.B Parameters
\fBtangohost\fP (\fI\%str\fP) \-\- tango host
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B group
(\fI\%str\fP) datasource tango group
.UNINDENT
.INDENT 7.0
.TP
.B host
(\fI\%str\fP) host without port
.UNINDENT
.INDENT 7.0
.TP
.B hostname
(\fI\%str\fP) host name with port
.UNINDENT
.INDENT 7.0
.TP
.B module
(\fI\%str\fP) device module
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) device name
.UNINDENT
.INDENT 7.0
.TP
.B port
(\fI\%str\fP) port
.UNINDENT
.INDENT 7.0
.TP
.B sardanahostname
(\fI\%str\fP) sardana host name
.UNINDENT
.INDENT 7.0
.TP
.B sardananame
(\fI\%str\fP) sardana name with port
.UNINDENT
.INDENT 7.0
.TP
.B sdevice
(\fI\%str\fP) sardana device name
.UNINDENT
.INDENT 7.0
.TP
.B setSardanaName(tolower)
sets sardana name
.INDENT 7.0
.TP
.B Parameters
\fBtolower\fP (\fI\%bool\fP) \-\- If True name in lowercase
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B shost
(\fI\%str\fP) sardana host without port
.UNINDENT
.INDENT 7.0
.TP
.B splitHostPort()
spilts host name from port
.UNINDENT
.INDENT 7.0
.TP
.B sport
(\fI\%str\fP) sardana tango port
.UNINDENT
.INDENT 7.0
.TP
.B tdevice
(\fI\%str\fP) tango device name
.UNINDENT
.INDENT 7.0
.TP
.B thost
(\fI\%str\fP) tango host without port
.UNINDENT
.INDENT 7.0
.TP
.B tolower()
converts \fIname\fP, \fImodule\fP, \fItdevice\fP, \fIhostname\fP into lower case
.UNINDENT
.INDENT 7.0
.TP
.B tport
(\fI\%str\fP) tango port
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.DeviceDSCreator(options, args, printouts=True)
Bases: \fI\%Creator\fP
.sp
device datasource creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a tango datasources xml of given device
and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.OnlineCPCreator(options, args, printouts=True)
Bases: \fI\%CPCreator\fP
.sp
component creator of online components
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates component xmls of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B listcomponents()
provides a list of components with xml templates
.INDENT 7.0
.TP
.B Returns
list of components with xml templates
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B listcomponenttypes()
provides a list of standard component types
.INDENT 7.0
.TP
.B Returns
list of standard component types
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.OnlineDSCreator(options, args, printouts=True)
Bases: \fI\%Creator\fP
.sp
datasource creator of all online.xml simple devices
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates datasources of all online.xml simple devices
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates datasource xmls of all online.xml simple devices
.UNINDENT
.INDENT 7.0
.TP
.B datasources
(\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP >) datasource xml dictionary
.UNINDENT
.INDENT 7.0
.TP
.B xmlpackage
(\fI\%str\fP) xml template component package
.UNINDENT
.INDENT 7.0
.TP
.B xmltemplatepath
(\fI\%str\fP) xml template component package path
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxscreator.PYTANGO  =  True
(\fI\%bool\fP) True if PyTango available
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.PoolDSCreator(options, args, printouts=True)
Bases: \fI\%Creator\fP
.sp
datasource creator of all sardana pool acquisition channels
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP <\fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates datasources of all online.xml simple devices
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates datasource xmls of all online.xml simple devices
.UNINDENT
.INDENT 7.0
.TP
.B datasources
(\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP >) datasource xml dictionary
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.SECoPCPCreator(options, args, printouts=True)
Bases: \fI\%CPCreator\fP
.sp
component creator of secop components
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates components of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B createSECoPDS(dsname, message, group=None, access=None, host=None, port=None, timeout=None)
create SECoP datasource
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdsname\fP (\fI\%str\fP) \-\- datasource name
.IP \(bu 2
\fBmessage\fP (\fI\%str\fP) \-\- secop command
.IP \(bu 2
\fBgroup\fP (\fI\%str\fP) \-\- secop group name
.IP \(bu 2
\fBaccess\fP (\fI\%str\fP) \-\- secop attribute access list
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- secop host name
.IP \(bu 2
\fBport\fP (\fI\%str\fP or \fI\%float\fP) \-\- secop port name
.IP \(bu 2
\fBport\fP \-\- minimum timeout
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createSECoPLinkDS(entryname, samplename, sampleenvname, meanings, environments)
create SECoP datasource
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBentryname\fP (\fI\%str\fP) \-\- secop entry name
.IP \(bu 2
\fBsamplename\fP (\fI\%str\fP) \-\- secop sample name
.IP \(bu 2
\fBsampleenvname\fP (\fI\%str\fP) \-\- secop sample name
.IP \(bu 2
\fBmeanings\fP (\fI\%str\fP) \-\- secop meanings list
.IP \(bu 2
\fBenvironments\fP (\fI\%str\fP) \-\- secop environments list
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates component xmls of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B listmodules()
provides a list of modules for the secop node
.INDENT 7.0
.TP
.B Returns
list of modules for the secop node
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP >
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.StandardCPCreator(options, args, printouts=True)
Bases: \fI\%CPCreator\fP
.sp
component creator of standard templates
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createXMLs()
creates component xmls of all online.xml complex devices
.UNINDENT
.INDENT 7.0
.TP
.B listcomponenttypes()
provides a list of standard component types
.INDENT 7.0
.TP
.B Returns
list of standard component types
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B listcomponentvariables()
provides a list of standard component types
.INDENT 7.0
.TP
.B Returns
list of standard component types
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxscreator.TangoDSCreator(options, args, printouts=True)
Bases: \fI\%Creator\fP
.sp
tango datasource creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fBoptparse.Values\fP) \-\- command options
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%str\fP >) \-\- command arguments
.IP \(bu 2
\fBprintouts\fP (\fI\%bool\fP) \-\- if printout is enable
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates a tango datasource xml and stores it in DB or filesytem
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception  nxstools.nxscreator.WrongParameterError
Bases: \fI\%Exception\fP
.sp
wrong parameter exception
.UNINDENT
.SS nxstools.nxsdata module
.sp
Command\-line tool to ascess to Tango Data Server
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.CloseEntry(parser)
Bases: \fI\%Runner\fP
.sp
CloseEntry runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqclose the current entry\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsdata closeentry \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.CloseFile(parser)
Bases: \fI\%Runner\fP
.sp
CloseFile runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqclose the current file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsdata closefile \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.NexusServer(device)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBdevice\fP (\fI\%str\fP) \-\- device name of configuration server
.UNINDENT
.INDENT 7.0
.TP
.B closeEntry()
closes the entry
.UNINDENT
.INDENT 7.0
.TP
.B closeFile()
closes the file
.UNINDENT
.INDENT 7.0
.TP
.B openEntry(xmlconfig)
opens an entry
.INDENT 7.0
.TP
.B Parameters
\fBxmlconfig\fP (\fI\%str\fP) \-\- xml configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B openFile(filename)
opens the h5 file
.INDENT 7.0
.TP
.B Parameters
\fBfilename\fP (\fI\%str\fP) \-\- h5 file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B record(jsondata)
records one step
.INDENT 7.0
.TP
.B Parameters
\fBjsondata\fP (\fI\%str\fP) \-\- step JSON data
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setData(jsondata)
sets the global JSON data
.INDENT 7.0
.TP
.B Parameters
\fBjsondata\fP (\fI\%str\fP) \-\- global JSON data
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B tdwServer
(\fBPyTango.DeviceProxy\fP) NeXus writer device proxy
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.OpenEntry(parser)
Bases: \fI\%Runner\fP
.sp
OpenEntry runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqcreate new entry\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsdata openentry ... \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.OpenFile(parser)
Bases: \fI\%Runner\fP
.sp
OpenFile runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqopen a new H5 file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsdata openfile /tmp/watertest.nxs \en       nxsdata openfile \-s p02/tangodataserver/exp.01  /user/data/myfile.h5\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.Record(parser)
Bases: \fI\%Runner\fP
.sp
Record runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqrecord one step with step JSON data\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsdata record ... \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.Servers(parser)
Bases: \fI\%Runner\fP
.sp
Servers runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqget lists of tango data servers from the current tango host\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsdata servers \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdata.SetData(parser)
Bases: \fI\%Runner\fP
.sp
SetData runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqassign global JSON data\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsdata setdata ... \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdata.main()
the main program function
.UNINDENT
.SS nxstools.nxsdevicetools module
.sp
NDTS TANGO device tools
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.PYTANGO  =  True
(\fI\%bool\fP) True if tango available
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsdevicetools.PackageHandler(packagename=\(aqnxstools.xmltemplates\(aq)
Bases: \fI\%object\fP
.sp
xml templates package loader
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBpackagename\fP (\fI\%str\fP) \-\- full package name
.UNINDENT
.INDENT 7.0
.TP
.B loadXMLTemplates(packagename)
load xml template module variables
.INDENT 7.0
.TP
.B Parameters
\fBpackagename\fP (\fI\%str\fP) \-\- full package name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.checkServer(name=\(aqNXSConfigServer\(aq)
provides server device name if only one or error in the other case
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- server name
.TP
.B Returns
server device name or empty string if error appears
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.ctModules  =  [\(aqmca8715roi\(aq, \(aqonedroi\(aq, \(aqsis3820\(aq, \(aqsis3302roi\(aq, \(aqxmcd\(aq, \(aqvfcadc\(aq, \(aqmythenroi\(aq, \(aqmhzdaqp01\(aq, \(aqdgg2\(aq, \(aqtangoattributectctrl\(aq]
(\fI\%list\fP <\fI\%str\fP>) counter/timer modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.findClassName(server, name)
finds class name
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- device name
.TP
.B Returns
class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.generateDeviceNames(prefix, first, last, minimal=False)
generates device names
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBprefix\fP (\fI\%str\fP) \-\- device name prefix
.IP \(bu 2
\fBfirst\fP (\fI\%int\fP) \-\- first device index
.IP \(bu 2
\fBlast\fP (\fI\%int\fP) \-\- last device index
.UNINDENT
.TP
.B Returns
device names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getAttributes(device, host=None, port=10000)
provides a list of device attributes
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- tango device name
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- device host
.IP \(bu 2
\fBport\fP (\fI\%int\fP) \-\- device port
.UNINDENT
.TP
.B Returns
list of device attributes
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getClassName(devicename)
provides device class name
.INDENT 7.0
.TP
.B Parameters
\fBdevicename\fP (\fI\%str\fP) \-\- device name
.TP
.B Returns
class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getDataSourceComponents(server, verbose=False)
gets datasource components
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- configuration server
.IP \(bu 2
\fBverbose\fP (\fI\%bool\fP) \-\- additional printouts
.UNINDENT
.TP
.B Returns
dictionary with datasource components
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fI\%list\fP <\fI\%str\fP>>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getServerTangoHost(server)
fetches the server tango_host:tango_port
.INDENT 7.0
.TP
.B Parameters
\fBserver\fP (\fI\%str\fP) \-\- tango server
.TP
.B Returns
tango host
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.getServers(name=\(aqNXSConfigServer\(aq)
provides server device names
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- server instance name
.TP
.B Returns
list of the server device names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.ioRegModules  =  [\(aqsis3610\(aq]
(\fI\%list\fP <\fI\%str\fP>) IO register modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.listServers(server, name=\(aqNXSConfigServer\(aq)
finds server names
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- server instance name
.TP
.B Returns
server list
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.moduleMultiAttributes  =  {\(aqcobold\(aq: [\(aqBinSize\(aq, \(aqExposureTime\(aq], \(aqdalsa\(aq: [\(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileSaving\(aq, \(aqFileStartNum\(aq, \(aqTriggerMode\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqExtendedExposure\(aq, \(aqBinComment\(aq, \(aqFramesProcessed\(aq, \(aqImage16\(aq, \(aqImage8\(aq, \(aqImageRaw\(aq, \(aqFramesReceived\(aq, \(aqFrameRate\(aq, \(aqFramesPerNXFile\(aq, \(aqNXFileCompression\(aq, \(aqTurboMode\(aq, \(aqImageEnc\(aq, \(aqViewingMode\(aq, \(aqThrashedBuffers\(aq, \(aqFramesToAcquire\(aq, \(aqAcquisitionFrameCount\(aq, \(aqAcquisitionMode\(aq, \(aqAcquisitionFrameMode\(aq, \(aqLinearityEqualizer\(aq, \(aqNrExposedFrames\(aq, \(aqNrOffsetFrames\(aq, \(aqOffset\(aq, \(aqPixelFormat\(aq, \(aqReadOutMode\(aq, \(aqStandby\(aq, \(aqSumScheme\(aq], \(aqdalsavds\(aq: [\(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileSaving\(aq, \(aqFileStartNum\(aq, \(aqTriggerMode\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqExtendedExposure\(aq, \(aqBinComment\(aq, \(aqFramesProcessed\(aq, \(aqImage16\(aq, \(aqImage8\(aq, \(aqImageRaw\(aq, \(aqFramesReceived\(aq, \(aqFrameRate\(aq, \(aqFramesPerNXFile\(aq, \(aqNXFileCompression\(aq, \(aqTurboMode\(aq, \(aqImageEnc\(aq, \(aqViewingMode\(aq, \(aqThrashedBuffers\(aq, \(aqFramesToAcquire\(aq, \(aqAcquisitionFrameCount\(aq, \(aqAcquisitionMode\(aq, \(aqAcquisitionFrameMode\(aq, \(aqLinearityEqualizer\(aq, \(aqNrExposedFrames\(aq, \(aqNrOffsetFrames\(aq, \(aqOffset\(aq, \(aqPixelFormat\(aq, \(aqReadOutMode\(aq, \(aqStandby\(aq, \(aqSumScheme\(aq], \(aqeiger1m16vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger1m32vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger4m16vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger4m32vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger9m16vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger9m32vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeigerdectris\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeigerdectrismesh\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqlambda\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqFramesPerFile\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlambda2m\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlambdavds\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqFramesPerFile\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlambdavdsnm\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqFramesPerFile\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlimaccd\(aq: [\(aqcamera_type\(aq, \(aqcamera_pixelsize\(aq, \(aqcamera_model\(aq, \(aqacq_mode\(aq, \(aqacq_nb_frames\(aq, \(aqacq_trigger_mode\(aq, \(aqlast_image_saved\(aq, \(aqlatency_time\(aq, \(aqacc_max_expo_time\(aq, \(aqacc_expo_time\(aq, \(aqacc_time_mode\(aq, \(aqacc_dead_time\(aq, \(aqacc_live_time\(aq, \(aqsaving_mode\(aq, \(aqsaving_directory\(aq, \(aqsaving_prefix\(aq, \(aqsaving_suffix\(aq, \(aqsaving_next_number\(aq, \(aqsaving_format\(aq, \(aqsaving_frame_per_file\(aq, \(aqimage_type\(aq, \(aqimage_width\(aq, \(aqimage_height\(aq, \(aqimage_sizes\(aq, \(aqimage_roi\(aq, \(aqimage_bin\(aq, \(aqimage_flip\(aq, \(aqimage_rotation\(aq, \(aqshutter_mode\(aq, \(aqshutter_open_time\(aq], \(aqlimaccds\(aq: [\(aqcamera_type\(aq, \(aqcamera_pixelsize\(aq, \(aqcamera_model\(aq, \(aqacq_mode\(aq, \(aqacq_nb_frames\(aq, \(aqacq_trigger_mode\(aq, \(aqlast_image_saved\(aq, \(aqlatency_time\(aq, \(aqacc_max_expo_time\(aq, \(aqacc_expo_time\(aq, \(aqacc_time_mode\(aq, \(aqacc_dead_time\(aq, \(aqacc_live_time\(aq, \(aqsaving_mode\(aq, \(aqsaving_directory\(aq, \(aqsaving_prefix\(aq, \(aqsaving_suffix\(aq, \(aqsaving_next_number\(aq, \(aqsaving_format\(aq, \(aqsaving_frame_per_file\(aq, \(aqimage_type\(aq, \(aqimage_width\(aq, \(aqimage_height\(aq, \(aqimage_sizes\(aq, \(aqimage_roi\(aq, \(aqimage_bin\(aq, \(aqimage_flip\(aq, \(aqimage_rotation\(aq, \(aqshutter_mode\(aq, \(aqshutter_open_time\(aq], \(aqmaiadimension\(aq: [\(aqName\(aq, \(aqPositionSource\(aq, \(aqPixelPitch\(aq, \(aqPixelOrigin\(aq, \(aqPixelHysteresis\(aq, \(aqPositionUnit\(aq, \(aqPixelCoordExtent\(aq], \(aqmaiaflux\(aq: [\(aqFluxCoeff\(aq, \(aqFluxName\(aq, \(aqFluxUnit\(aq, \(aqFluxSource\(aq], \(aqmaiainterlock\(aq: [\(aqBiasPeltierInterlock\(aq, \(aqBiasPeltierInterlockUptime\(aq, \(aqPressure\(aq], \(aqmaialogger\(aq: [\(aqRunNumber\(aq], \(aqmaiaprocessing\(aq: [\(aqGaintrimEnable\(aq, \(aqLineariseEnable\(aq, \(aqPhotonEnable\(aq, \(aqPileupRejectEnable\(aq, \(aqPixelEnable\(aq, \(aqThrottleEnable\(aq], \(aqmaiasensor\(aq: [\(aqBiasVoltage\(aq, \(aqLeakageCurrent\(aq, \(aqPeltierCurrent\(aq, \(aqWaterTemperature\(aq, \(aqDetectorTemperature\(aq, \(aqMosfetTemperature\(aq, \(aqIdentity\(aq], \(aqmarccd\(aq: [\(aqFrameShift\(aq, \(aqSavingDirectory\(aq, \(aqSavingPostfix\(aq, \(aqSavingPrefix\(aq], \(aqmca_xia\(aq: [\(aqICR\(aq, \(aqOCR\(aq], \(aqmca_xia@pool\(aq: [\(aqCountsRoI\(aq, \(aqRoIEnd\(aq, \(aqRoIStart\(aq], \(aqmythen\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqRoI1\(aq, \(aqRoI2\(aq], \(aqmythen2\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqEnergy\(aq, \(aqNbFrames\(aq, \(aqRoI1End\(aq, \(aqRoI2End\(aq, \(aqRoI1Start\(aq, \(aqRoI2Start\(aq, \(aqThreshold\(aq], \(aqpco\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpco4000\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpcoedge\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpedetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqperkinelmer\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqperkinelmerdetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqpilatus\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus100k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus1m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus2m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus300k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus6m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqtangovimba\(aq: [\(aqWidth\(aq, \(aqWidthMax\(aq, \(aqTriggerSource\(aq, \(aqPixelFormat\(aq, \(aqOffsetY\(aq, \(aqOffsetX\(aq, \(aqHeightMax\(aq, \(aqHeight\(aq, \(aqGainRaw\(aq, \(aqExposureTimeAbs\(aq, \(aqAcquisitionFrameRateAbs\(aq, \(aqAcquisitionFrameRateLimit\(aq, \(aqStreamBytesPerSecond\(aq, \(aqBinComment\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileSaving\(aq, \(aqFileStartNum\(aq, \(aqFramesProcessed\(aq, \(aqImage16\(aq, \(aqImage8\(aq, \(aqImageRaw\(aq, \(aqMaxLoad\(aq, \(aqReadMode\(aq, \(aqTuneMode\(aq, \(aqViewingMode\(aq]}
(\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
important attributes of modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.moduleTemplateFiles  =  {\(aqcobold\(aq: [\(aqcobold.xml\(aq], \(aqdalsa\(aq: [\(aqdalsa.xml\(aq, \(aqdalsa_nxdata.ds.xml\(aq, \(aqdalsa_external_data.ds.xml\(aq], \(aqdalsavds\(aq: [\(aqdalsavds.xml\(aq, \(aqdalsavds_nxdata.ds.xml\(aq, \(aqdalsavds_triggermode_cb.ds.xml\(aq, \(aqdalsavds_filestartnum_cb.ds.xml\(aq, \(aqdalsavds_nrexposedframes_cb.ds.xml\(aq], \(aqeiger1m16vds\(aq: [\(aqeiger1m16vds.xml\(aq, \(aqeiger1m16vds_stepindex.ds.xml\(aq, \(aqeiger1m16vds_description_cb.ds.xml\(aq, \(aqeiger1m16vds_triggermode_cb.ds.xml\(aq], \(aqeiger1m32vds\(aq: [\(aqeiger1m32vds.xml\(aq, \(aqeiger1m32vds_stepindex.ds.xml\(aq, \(aqeiger1m32vds_description_cb.ds.xml\(aq, \(aqeiger1m32vds_triggermode_cb.ds.xml\(aq], \(aqeiger4m16vds\(aq: [\(aqeiger4m16vds.xml\(aq, \(aqeiger4m16vds_stepindex.ds.xml\(aq, \(aqeiger4m16vds_description_cb.ds.xml\(aq, \(aqeiger4m16vds_triggermode_cb.ds.xml\(aq], \(aqeiger4m32vds\(aq: [\(aqeiger4m32vds.xml\(aq, \(aqeiger4m32vds_stepindex.ds.xml\(aq, \(aqeiger4m32vds_description_cb.ds.xml\(aq, \(aqeiger4m32vds_triggermode_cb.ds.xml\(aq], \(aqeiger9m16vds\(aq: [\(aqeiger9m16vds.xml\(aq, \(aqeiger9m16vds_stepindex.ds.xml\(aq, \(aqeiger9m16vds_description_cb.ds.xml\(aq, \(aqeiger9m16vds_triggermode_cb.ds.xml\(aq], \(aqeiger9m32vds\(aq: [\(aqeiger9m32vds.xml\(aq, \(aqeiger9m32vds_stepindex.ds.xml\(aq, \(aqeiger9m32vds_description_cb.ds.xml\(aq, \(aqeiger9m32vds_triggermode_cb.ds.xml\(aq], \(aqeigerdectris\(aq: [\(aqeigerdectris.xml\(aq, \(aqeigerdectris_stepindex.ds.xml\(aq, \(aqeigerdectris_description_cb.ds.xml\(aq, \(aqeigerdectris_triggermode_cb.ds.xml\(aq], \(aqeigerdectrismesh\(aq: [\(aqeigerdectrismesh.xml\(aq, \(aqeigerdectrismesh_stepindex.ds.xml\(aq, \(aqeigerdectrismesh_description_cb.ds.xml\(aq, \(aqeigerdectrismesh_triggermode_cb.ds.xml\(aq], \(aqlambda\(aq: [\(aqlambda.xml\(aq, \(aqlambda_nxdata.ds.xml\(aq, \(aqlambda_external_data.ds.xml\(aq], \(aqlambda2m\(aq: [\(aqlambda2m.xml\(aq, \(aqlambda2m_m1_nxdata.ds.xml\(aq, \(aqlambda2m_m2_nxdata.ds.xml\(aq, \(aqlambda2m_m3_nxdata.ds.xml\(aq, \(aqlambda2m_m1_external_data.ds.xml\(aq, \(aqlambda2m_m2_external_data.ds.xml\(aq, \(aqlambda2m_m3_external_data.ds.xml\(aq], \(aqlambdavds\(aq: [\(aqlambdavds.xml\(aq, \(aqlambdavds_nxdata.ds.xml\(aq, \(aqlambdavds_description.ds.xml\(aq, \(aqlambdavds_triggermode_cb.ds.xml\(aq, \(aqlambdavds_framenumbers_cb.ds.xml\(aq, \(aqlambdavds_savefilename_cb.ds.xml\(aq], \(aqlambdavdsnm\(aq: [\(aqlambdavdsnm.xml\(aq, \(aqlambdavdsnm_triggermode_cb.ds.xml\(aq, \(aqlambdavdsnm_nxdata.ds.xml\(aq], \(aqlimaccd\(aq: [\(aqlimaccd.xml\(aq, \(aqlimaccd_postrun.ds.xml\(aq, \(aqlimaccd_xpixelsize.ds.xml\(aq, \(aqlimaccd_ypixelsize.ds.xml\(aq, \(aqlimaccd_description.ds.xml\(aq, \(aqlimaccd_filestartnum_cb.ds.xml\(aq], \(aqlimaccds\(aq: [\(aqlimaccd.xml\(aq, \(aqlimaccd_postrun.ds.xml\(aq, \(aqlimaccd_xpixelsize.ds.xml\(aq, \(aqlimaccd_ypixelsize.ds.xml\(aq, \(aqlimaccd_description.ds.xml\(aq, \(aqlimaccd_filestartnum_cb.ds.xml\(aq], \(aqmarccd\(aq: [\(aqmarccd.xml\(aq, \(aqmarccd_postrun.ds.xml\(aq], \(aqmca_xia\(aq: [\(aqmcaxia.xml\(aq], \(aqmythen\(aq: [\(aqmythen.xml\(aq, \(aqmythen_postrun.ds.xml\(aq, \(aqmythen_filestartnumber.ds.xml\(aq], \(aqmythen2\(aq: [\(aqmythen2.xml\(aq], \(aqpco\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpco4000\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpcoedge\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpedetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqperkinelmer\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqperkinelmerdetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqpilatus\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus100k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus100k_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus1m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus1m_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus2m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus6m_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus300k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus300k_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus6m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus6m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqtangovimba\(aq: [\(aqtangovimba.xml\(aq, \(aqtangovimba_nxdata.ds.xml\(aq, \(aqtangovimba_external_data.ds.xml\(aq]}
(\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.motorModules  =  [\(aqabsbox\(aq, \(aqmotor_tango\(aq, \(aqkohzu\(aq, \(aqsmchydra\(aq, \(aqlom\(aq, \(aqoms58\(aq, \(aqe6c\(aq, \(aqomsmaxv\(aq, \(aqspk\(aq, \(aqpie710\(aq, \(aqpie712\(aq, \(aqe6c_p09_eh2\(aq, \(aqsmaract\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of motors
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.oneDModules  =  [\(aqmca_xia\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of 1D detectors
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.openServer(device)
opens connection to the configuration server
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- server device name
.TP
.B Returns
configuration server proxy
.TP
.B Return type
\fI\%tango.DeviceProxy\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.standardComponentTemplateFiles  =  {\(aqabsorber\(aq: [\(aqabsorber_foil.ds.xml\(aq, \(aqabsorber_thickness.ds.xml\(aq, \(aqabsorber.xml\(aq], \(aqbeamstop\(aq: [\(aqbeamstop.xml\(aq], \(aqbeamtimefname\(aq: [\(aqbeamtimefname.xml\(aq, \(aqbeamtimefname.ds.xml\(aq, \(aqstart_time.ds.xml\(aq], \(aqbeamtimeid\(aq: [\(aqbeamtimeid.xml\(aq, \(aqbeamtimeid.ds.xml\(aq, \(aqstart_time.ds.xml\(aq], \(aqchcut\(aq: [\(aqchcut.xml\(aq, \(aqchcut_unitcalibration.ds.xml\(aq, \(aqchcut_crystal.ds.xml\(aq], \(aqcoboldhisto\(aq: [\(aqcoboldhisto.xml\(aq, \(aqcoboldhisto_timeofflight.ds.xml\(aq], \(aqcollect2\(aq: [\(aqcollect2.xml\(aq], \(aqcollect3\(aq: [\(aqcollect3.xml\(aq], \(aqcollect4\(aq: [\(aqcollect4.xml\(aq], \(aqcollect5\(aq: [\(aqcollect5.xml\(aq], \(aqcollect6\(aq: [\(aqcollect6.xml\(aq], \(aqcommon2\(aq: [\(aqcommon2_common.ds.xml\(aq], \(aqcommon3\(aq: [\(aqcommon3_common.ds.xml\(aq], \(aqdataaxessignal\(aq: [\(aqdataaxessignal.xml\(aq, \(aqdefaultsignal.ds.xml\(aq, \(aqdefaultaxes.ds.xml\(aq, \(aqsignal_name.ds.xml\(aq, \(aqsignalname.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqdatasignal\(aq: [\(aqdatasignal.xml\(aq, \(aqdefaultsignal.ds.xml\(aq, \(aqsignal_name.ds.xml\(aq, \(aqsignalname.ds.xml\(aq, \(aqsignal_axes.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqdcm\(aq: [\(aqdcm.xml\(aq, \(aqdcm_reflection.ds.xml\(aq, \(aqdcm_unitcalibration.ds.xml\(aq, \(aqdcm_crystal.ds.xml\(aq], \(aqdefault\(aq: [\(aqdefault.xml\(aq, \(aqdefaultsample.xml\(aq, \(aqdefaultinstrument.xml\(aq, \(aqsample_name.ds.xml\(aq, \(aqchemical_formula.ds.xml\(aq, \(aqbeamtime_id.ds.xml\(aq, \(aqbeamtime_filename.ds.xml\(aq, \(aqstart_time.ds.xml\(aq, \(aqend_time.ds.xml\(aq, \(aqnexdatas_version.ds.xml\(aq, \(aqnexdatas_configuration.ds.xml\(aq, \(aqtitle.ds.xml\(aq], \(aqdefaultinstrument\(aq: [\(aqdefaultinstrument.xml\(aq, \(aqbeamtime_id.ds.xml\(aq, \(aqbeamtime_filename.ds.xml\(aq, \(aqstart_time.ds.xml\(aq, \(aqend_time.ds.xml\(aq, \(aqnexdatas_version.ds.xml\(aq, \(aqnexdatas_configuration.ds.xml\(aq, \(aqtitle.ds.xml\(aq], \(aqdefaultsample\(aq: [\(aqdefaultsample.xml\(aq, \(aqsample_name.ds.xml\(aq, \(aqchemical_formula.ds.xml\(aq], \(aqdescription\(aq: [\(aqdescription.xml\(aq, \(aqexperiment_description.ds.xml\(aq], \(aqdescriptiontext\(aq: [\(aqdescriptiontext.xml\(aq], \(aqdetectorlive\(aq: [\(aqdetectorlive.xml\(aq], \(aqempty\(aq: [\(aqempty.xml\(aq], \(aqgroupsecop\(aq: [\(aqgroupsecop.ds.xml\(aq, \(aqgroupsecop_time.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq, \(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq], \(aqkeithley\(aq: [\(aqkeithley.xml\(aq], \(aqmaia\(aq: [\(aqmaia.xml\(aq, \(aqempty.xml\(aq], \(aqmaiadimension\(aq: [\(aqmaiadimension.xml\(aq], \(aqmaiaflux\(aq: [\(aqmaiaflux.xml\(aq], \(aqmsnsar\(aq: [\(aqmsnsar_env.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqmssar\(aq: [\(aqmssar_env.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqparametercopymap\(aq: [\(aqparametercopymap.xml\(aq], \(aqpinhole\(aq: [\(aqpinhole.xml\(aq], \(aqpointdet\(aq: [\(aqpointdet.xml\(aq], \(aqqbpm\(aq: [\(aqqbpm_foil.ds.xml\(aq, \(aqqbpm.xml\(aq], \(aqsampledescription\(aq: [\(aqsampledescription.xml\(aq, \(aqsample_description.ds.xml\(aq], \(aqsampledescriptiontext\(aq: [\(aqsampledescriptiontext.xml\(aq], \(aqsamplehkl\(aq: [\(aqsamplehkl.xml\(aq], \(aqsecop\(aq: [\(aqsecop.ds.xml\(aq, \(aqsecop_time.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq, \(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq], \(aqsecoplinks\(aq: [\(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq, \(aqsample_nxdata.ds.xml\(aq, \(aqsampleenv_nxdata.ds.xml\(aq], \(aqsinglesecop\(aq: [\(aqsinglesecop.ds.xml\(aq, \(aqsinglesecop_time.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq, \(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq], \(aqslit\(aq: [\(aqslit.xml\(aq], \(aqsource\(aq: [\(aqsource.xml\(aq], \(aqstarttime\(aq: [\(aqstarttime.xml\(aq, \(aqstarttime.ds.xml\(aq, \(aqstart_timestamp.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq], \(aqtango\(aq: [\(aqtango.ds.xml\(aq], \(aqundulator\(aq: [\(aqundulator.xml\(aq]}
(\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.standardComponentVariables  =  {\(aqabsorber\(aq: {\(aqattenfactor\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqattenuation factor (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name for the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqfoillist\(aq: {\(aqdefault\(aq: \(aq[\(dqAg\(dq, \(dqAg\(dq, \(dqAg\(dq, \(dqAg\(dq, \(dq\(dq, \(dqAl\(dq, \(dqAl\(dq, \(dqAl\(dq, \(dqAl\(dq]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqposition\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqwhich sliders are in [bitarray] MANDATORY (datasource)\(aq}, \(aqthickness\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil thickness, i.e. standard <cpname>_thickness (datasource)\(aq}, \(aqthicknesslist\(aq: {\(aqdefault\(aq: \(aq[0.5, 0.05, 0.025, 0.0125, 0, 0.1, 0.3, 0.5, 1.0]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(dqtransformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)\(dq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}}, \(aqbeamstop\(aq: {\(aqdescription\(aq: {\(aqdefault\(aq: \(aqcircular\(aq, \(aqdoc\(aq: \(aq circular or  rectangular (string)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqxname\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqhorizontal position name (string)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(dqhorizontal position sign, e.g. \(aq\-\(aq (string)\(dq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqzname\(aq: {\(aqdefault\(aq: \(aqz\(aq, \(aqdoc\(aq: \(aqalong the beam position name (string)\(aq}}, \(aqbeamtimefname\(aq: {\(aqcommissiondir\(aq: {\(aqdefault\(aq: \(aq/gpfs/commissioning\(aq, \(aqdoc\(aq: \(aqcommission file directory (string)\(aq}, \(aqcommissionpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqcommission file postfix (string)\(aq}, \(aqcommissionprefix\(aq: {\(aqdefault\(aq: \(aqcommissioning\-metadata\-\(aq, \(aqdoc\(aq: \(aqcommission file prefix (string)\(aq}, \(aqcurrentdir\(aq: {\(aqdefault\(aq: \(aq/gpfs/current\(aq, \(aqdoc\(aq: \(aqbeamtime file directory (string)\(aq}, \(aqcurrentpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqbeamtime file postfix (string)\(aq}, \(aqcurrentprefix\(aq: {\(aqdefault\(aq: \(aqbeamtime\-metadata\-\(aq, \(aqdoc\(aq: \(aqbeamtime file prefix (string)\(aq}, \(aqlocaldir\(aq: {\(aqdefault\(aq: \(aq/gpfs/local\(aq, \(aqdoc\(aq: \(aqlocal file directory (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}}, \(aqbeamtimeid\(aq: {\(aqcommissiondir\(aq: {\(aqdefault\(aq: \(aq/gpfs/commissioning\(aq, \(aqdoc\(aq: \(aqcommission file directory (string)\(aq}, \(aqcommissionpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqcommission file postfix (string)\(aq}, \(aqcommissionprefix\(aq: {\(aqdefault\(aq: \(aqcommissioning\-metadata\-\(aq, \(aqdoc\(aq: \(aqcommission file prefix (string)\(aq}, \(aqcurrentdir\(aq: {\(aqdefault\(aq: \(aq/gpfs/current\(aq, \(aqdoc\(aq: \(aqbeamtime file directory (string)\(aq}, \(aqcurrentpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqbeamtime file postfix (string)\(aq}, \(aqcurrentprefix\(aq: {\(aqdefault\(aq: \(aqbeamtime\-metadata\-\(aq, \(aqdoc\(aq: \(aqbeamtime file prefix (string)\(aq}, \(aqlocaldir\(aq: {\(aqdefault\(aq: \(aq/gpfs/local\(aq, \(aqdoc\(aq: \(aqlocal file directory (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}}, \(aqchcut\(aq: {\(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqbragganglename\(aq: {\(aqdefault\(aq: \(aqbragg\(aq, \(aqdoc\(aq: \(aqbragg angle name  (string)\(aq}, \(aqchcutdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device name (string)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq type of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut  (datasource)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqjack1name\(aq: {\(aqdefault\(aq: \(aqjack1\(aq, \(aqdoc\(aq: \(aqfirst vertical jack name of table (string)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqjack2name\(aq: {\(aqdefault\(aq: \(aqjack2\(aq, \(aqdoc\(aq: \(aqsecond vertical jack name of table (string)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqjack3name\(aq: {\(aqdefault\(aq: \(aqjack3\(aq, \(aqdoc\(aq: \(aqthird vertical jack name of table (string)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqlatname\(aq: {\(aqdefault\(aq: \(aqlat\(aq, \(aqdoc\(aq: \(aqhorizontal lattice translation name of the first cristal (string)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqpara\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance between the crystals (string)\(aq}, \(aqparaname\(aq: {\(aqdefault\(aq: \(aqpara\(aq, \(aqdoc\(aq: \(aqbeam parallel translation name of the second cristal (string)\(aq}, \(aqreflection\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqreflection from string (datasource)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqtablename\(aq: {\(aqdefault\(aq: \(aqtable\(aq, \(aqdoc\(aq: \(aqvertical position name of table (string)\(aq}, \(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqthetaname\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta angle name (string)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq unit calibration from dcmmotor (datasource)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqyawname\(aq: {\(aqdefault\(aq: \(aqphi\(aq, \(aqdoc\(aq: \(aqphi rotation name of the first cristal (string)\(aq}}, \(aqcoboldhisto\(aq: {\(aqbinsize\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbin size of histogram data (datasource)\(aq}, \(aqexposuretime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqexposure time for histogram data (datasource)\(aq}, \(aqhistogram\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhistogram data (datasource)\(aq}}, \(aqcollect2\(aq: {\(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}}, \(aqcollect3\(aq: {\(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcollect4\(aq: {\(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqfourth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fourth component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcollect5\(aq: {\(aqfifth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fifth component to collect MANDATORY (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqfourth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fourth component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcollect6\(aq: {\(aqfifth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fifth component to collect MANDATORY (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqfourth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fourth component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqsixth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the sixth component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcommon2\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name MANDATORY (datasource)\(aq}, \(aqods\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqoptional detasource name MANDATORY (datasource)\(aq}}, \(aqcommon3\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name MANDATORY (datasource)\(aq}, \(aqods1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfist optional detasource name MANDATORY (datasource)\(aq}, \(aqods2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond optional detasource name MANDATORY (datasource)\(aq}}, \(aqdataaxessignal\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqaxes\(aq: {\(aqdefault\(aq: \(aqdefaultaxes\(aq, \(aqdoc\(aq: \(aqlist of data axes field names (datasource)\(aq}, \(aqdefaultattrs\(aq: {\(aqdefault\(aq: \(aqFalse\(aq, \(aqdoc\(aq: \(aqadd default attributes (string)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmacroserver sardana device name MANDATORY (string)\(aq}, \(aqnchannelstoskip\(aq: {\(aqdefault\(aq: \(aq0\(aq, \(aqdoc\(aq: \(aqnumber of mg channels to skip (string)\(aq}, \(aqsardanasignal\(aq: {\(aqdefault\(aq: \(aqSignalCounter\(aq, \(aqdoc\(aq: \(aqsignal sardana variable name (string)\(aq}, \(aqsignal\(aq: {\(aqdefault\(aq: \(aqdefaultsignal\(aq, \(aqdoc\(aq: \(aqdata signal field name (datasource)\(aq}}, \(aqdatasignal\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqaxes\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdata axes field name(s) (datasource)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmacroserver sardana device name MANDATORY (string)\(aq}, \(aqnchannelstoskip\(aq: {\(aqdefault\(aq: \(aq0\(aq, \(aqdoc\(aq: \(aqnumber of mg channels to skip (string)\(aq}, \(aqsardanasignal\(aq: {\(aqdefault\(aq: \(aqSignalCounter\(aq, \(aqdoc\(aq: \(aqsignal sardana variable name (string)\(aq}, \(aqsignal\(aq: {\(aqdefault\(aq: \(aqdefaultsignal\(aq, \(aqdoc\(aq: \(aqdata signal field name (datasource)\(aq}}, \(aqdcm\(aq: {\(aqbend1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the first cristal (datasource)\(aq}, \(aqbend2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the second cristal (datasource)\(aq}, \(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqbragganglename\(aq: {\(aqdefault\(aq: \(aqbragg\(aq, \(aqdoc\(aq: \(aqbragg angle name  (string)\(aq}, \(aqchi2dependson\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the second cristal chi, e.g. phi (string)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtype of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut (datasource)\(aq}, \(aqdcmdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device (string)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}, \(aqexitoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq exit offset (datasource)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqjack1name\(aq: {\(aqdefault\(aq: \(aqjack1\(aq, \(aqdoc\(aq: \(aqfirst vertical jack name of table (string)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqjack2name\(aq: {\(aqdefault\(aq: \(aqjack2\(aq, \(aqdoc\(aq: \(aqsecond vertical jack name of table (string)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqjack3name\(aq: {\(aqdefault\(aq: \(aqjack3\(aq, \(aqdoc\(aq: \(aqthird vertical jack name of table (string)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqlat2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the second cristal (datasource)\(aq}, \(aqlat2name\(aq: {\(aqdefault\(aq: \(aqlat\(aq, \(aqdoc\(aq: \(aqhorizontal lattice translation name of the second cristal (string)\(aq}, \(aqlatname\(aq: {\(aqdefault\(aq: \(aqlat\(aq, \(aqdoc\(aq: \(aqhorizontal lattice translation name of the first cristal (string)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqpar2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbeam parallel translation of the second cristal (datasource)\(aq}, \(aqpar2name\(aq: {\(aqdefault\(aq: \(aqpara\(aq, \(aqdoc\(aq: \(aqbeam parallel translation name of the second cristal (string)\(aq}, \(aqperp2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical translation of the second cristal (datasource)\(aq}, \(aqperp2name\(aq: {\(aqdefault\(aq: \(aqperp\(aq, \(aqdoc\(aq: \(aqvertical translation name of the second cristal (string)\(aq}, \(aqphi1dependson\(aq: {\(aqdefault\(aq: \(aq../../transformations/bragg\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the first cristal phi, e.g. theta (string)\(aq}, \(aqpitch1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the first cristal (datasource)\(aq}, \(aqpitch1name\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta rotation name of the first cristal (string)\(aq}, \(aqpitch2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the second cristal (datasource)\(aq}, \(aqpitch2name\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta rotation name of the second cristal (string)\(aq}, \(aqroll1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the first cristal (datasource)\(aq}, \(aqroll1name\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqchi rotation name of the first cristal (string)\(aq}, \(aqroll2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the second cristal (datasource)\(aq}, \(aqroll2name\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqchi rotation name of the second cristal (string)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqtablename\(aq: {\(aqdefault\(aq: \(aqtable\(aq, \(aqdoc\(aq: \(aqvertical position name of table (string)\(aq}, \(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqthetaname\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta angle name (string)\(aq}, \(aqtopdependson2\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqthe first transformation of the second crystal, e.g. lat (string)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqunit calibration from dcmmotor (datasource)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqyaw2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the second cristal (datasource)\(aq}, \(aqyaw2name\(aq: {\(aqdefault\(aq: \(aqphi\(aq, \(aqdoc\(aq: \(aqphi rotation name of the second cristal (string)\(aq}, \(aqyawname\(aq: {\(aqdefault\(aq: \(aqphi\(aq, \(aqdoc\(aq: \(aqphi rotation name of the first cristal (string)\(aq}}, \(aqdefault\(aq: {\(aq__configdevice__\(aq: {\(aqdefault\(aq: \(aqnxs/configserver/localhost\(aq, \(aqdoc\(aq: \(aqconfiguration server device name (string)\(aq}, \(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqcontrol\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgroup name of the monitor (string)\(aq}, \(aqlongname\(aq: {\(aqdefault\(aq: \(aqP09 Resonant Scattering and Diffraction beamline\(aq, \(aqdoc\(aq: \(aqbeamline long name (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}, \(aqsourcename\(aq: {\(aqdefault\(aq: \(aqPETRA III\(aq, \(aqdoc\(aq: \(aqsource name (string)\(aq}, \(aqsrcname\(aq: {\(aqdefault\(aq: \(aqsource\(aq, \(aqdoc\(aq: \(aqsource group name (string)\(aq}}, \(aqdefaultinstrument\(aq: {\(aq__configdevice__\(aq: {\(aqdefault\(aq: \(aqnxs/configserver/localhost\(aq, \(aqdoc\(aq: \(aqconfiguration server device name (string)\(aq}, \(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqcontrol\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgroup name of the monitor (string)\(aq}, \(aqlongname\(aq: {\(aqdefault\(aq: \(aqP09 Resonant Scattering and Diffraction beamline\(aq, \(aqdoc\(aq: \(aqbeamline long name (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}, \(aqsourcename\(aq: {\(aqdefault\(aq: \(aqPETRA III\(aq, \(aqdoc\(aq: \(aqsource name (string)\(aq}, \(aqsrcname\(aq: {\(aqdefault\(aq: \(aqsource\(aq, \(aqdoc\(aq: \(aqsource group name (string)\(aq}}, \(aqdefaultsample\(aq: {}, \(aqdescription\(aq: {}, \(aqdescriptiontext\(aq: {\(aqdescription\(aq: {\(aqdefault\(aq: \(aqscan\(aq, \(aqdoc\(aq: \(aqscan technique (string)\(aq}}, \(aqdetectorlive\(aq: {\(aqdatatype\(aq: {\(aqdefault\(aq: \(aqNX_UINT32\(aq, \(aqdoc\(aq: \(aqlist of devices (string)\(aq}, \(aqdetectordata\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdetector live data (datasource)\(aq}, \(aqdetname\(aq: {\(aqdefault\(aq: \(aqdetector\(aq, \(aqdoc\(aq: \(aqlist of devices (string)\(aq}}, \(aqempty\(aq: {}, \(aqgroupsecop\(aq: {\(aqaccess\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop access list (string)\(aq}, \(aqgroup\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop group name (string)\(aq}, \(aqhost\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop host name (string)\(aq}, \(aqmessage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop command MANDATORY (string)\(aq}, \(aqport\(aq: {\(aqdefault\(aq: \(aq5000\(aq, \(aqdoc\(aq: \(aqsecop port name (string)\(aq}, \(aqtimeout\(aq: {\(aqdefault\(aq: \(aq0.0001\(aq, \(aqdoc\(aq: \(aqsecop timeout (string)\(aq}}, \(aqkeithley\(aq: {\(aqcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqcurrent in A (datasource)\(aq}, \(aqgain\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgain in V/A (datasource)\(aq}, \(aqrisetime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqrise time (datasource)\(aq}, \(aqsourvoltlevel\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsource voltage level in V (datasource)\(aq}, \(aqvoltage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvoltage in V (datasource)\(aq}}, \(aqmaia\(aq: {\(aqchillersetpoint\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchiller set point temperature in Celsus (datasource)\(aq}, \(aqchiptemperature\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdetector chip temperature sensor for maia in Celsus (datasource)\(aq}, \(aqgaintrimenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgaintrim enable status for maia (datasource)\(aq}, \(aqidentity\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsensor identity for maia (datasource)\(aq}, \(aqinterlockpressure\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqinterlock pressure for maia in mbar (datasource)\(aq}, \(aqleakagecurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleakage current sensor for maia in A (datasource)\(aq}, \(aqlineariseenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqlinearise enable status for maia (datasource)\(aq}, \(aqmaiadimensions\(aq: {\(aqdefault\(aq: \(aqempty\(aq, \(aqdoc\(aq: \(aqmaia dimensions component name (component)\(aq}, \(aqmaiafluxes\(aq: {\(aqdefault\(aq: \(aqempty\(aq, \(aqdoc\(aq: \(aqmaia fluxes component name (component)\(aq}, \(aqmaiastage\(aq: {\(aqdefault\(aq: \(aqempty\(aq, \(aqdoc\(aq: \(aqmaia stage component name (component)\(aq}, \(aqmosfettemperature\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmosfet temperature sensor for maia in Celsus (datasource)\(aq}, \(aqpeltiercurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpeltier current sensor for maia in A (datasource)\(aq}, \(aqphotonenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphoton enable status for maia (datasource)\(aq}, \(aqpileuprejectionenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpileup rejection enable status for maia (datasource)\(aq}, \(aqpixelenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel enable status for maia (datasource)\(aq}, \(aqpressure\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgas pressure in mbar (datasource)\(aq}, \(aqrunnumber\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqrun number of maia (datasource)\(aq}, \(aqstatus\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqinterlock status for maia (datasource)\(aq}, \(aqthrottleenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthrottle enable status for maia (datasource)\(aq}, \(aquptime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqinterlock uptime for maia (datasource)\(aq}, \(aqvoltagesetpoint\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvoltage set point temperature in Celsus (datasource)\(aq}, \(aqwatertemperature\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqwater temperature sensor for maia in Celsus (datasource)\(aq}}, \(aqmaiadimension\(aq: {\(aqdetname\(aq: {\(aqdefault\(aq: \(aqmaia\(aq, \(aqdoc\(aq: \(aqdetector (alias) name (string)\(aq}, \(aqdimname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdimension name for maia (datasource)\(aq}, \(aqdname\(aq: {\(aqdefault\(aq: \(aqdimension\(aq, \(aqdoc\(aq: \(aqdimension name group (string)\(aq}, \(aqhysteresis\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel hysteresis of dimension for maia (datasource)\(aq}, \(aqnumberofpixels\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnumber of pixels of dimension for maia (datasource)\(aq}, \(aqorigin\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel origin of dimension for maia (datasource)\(aq}, \(aqpixelpitch\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel pitch of dimension for maia (datasource)\(aq}, \(aqpositionsource\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqposition source of dimension for maia (datasource)\(aq}, \(aqunit\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqposition units of dimension for maia (datasource)\(aq}}, \(aqmaiaflux\(aq: {\(aqcoefficient\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux coefficient  for maia (datasource)\(aq}, \(aqdetname\(aq: {\(aqdefault\(aq: \(aqmaia\(aq, \(aqdoc\(aq: \(aqdetector (alias) name (string)\(aq}, \(aqfluxname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux name for maia (datasource)\(aq}, \(aqfname\(aq: {\(aqdefault\(aq: \(aqfluxdevice\(aq, \(aqdoc\(aq: \(aqflux name group (string)\(aq}, \(aqkeithleydevice\(aq: {\(aqdefault\(aq: \(aqkeithley\(aq, \(aqdoc\(aq: \(aqkeithley device name (string)\(aq}, \(aqsource\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux source for maia (datasource)\(aq}, \(aqunit\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux unit for maia (datasource)\(aq}, \(aqvfcfactor\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvfc conversion factor (datasource)\(aq}}, \(aqmsnsar\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana device name MANDATORY (string)\(aq}, \(aqvarname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnested sardana environment variable name  MANDATORY (string)\(aq}}, \(aqmssar\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmacroserver sardana device name MANDATORY (string)\(aq}, \(aqvarname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment variable name MANDATORY (string)\(aq}}, \(aqparametercopymap\(aq: {\(aqcopymap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqyaml dictionary with {output: input} copy map (string)\(aq}, \(aqparameter\(aq: {\(aqdefault\(aq: \(aqcopymap\(aq, \(aqdoc\(aq: \(aqparameter name of copymap (string)\(aq}, \(aqprogram\(aq: {\(aqdefault\(aq: \(aqnxsfileinfo_parameters\(aq, \(aqdoc\(aq: \(aqgroup name of NXparameters (string)\(aq}}, \(aqpinhole\(aq: {\(aqdiameter\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpinhole diameter (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqxname\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqhorizontal position name (string)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(dqhorizontal position sign, e.g. \(aq\-\(aq (string)\(dq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqalong the beam position (datasource)\(aq}, \(aqzname\(aq: {\(aqdefault\(aq: \(aqz\(aq, \(aqdoc\(aq: \(aqalong the beam position name (string)\(aq}}, \(aqpointdet\(aq: {\(aqdata\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdiode data (datasource)\(aq}, \(aqdetname\(aq: {\(aqdefault\(aq: \(aqdetector\(aq, \(aqdoc\(aq: \(aqdetector group name (string)\(aq}}, \(aqqbpm\(aq: {\(aqdependsony\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqthe  depends_on y field value,  e.g. distance (string)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name for the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqfoilpos\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil position MANDATORY (datasource)\(aq}, \(aqfoilposdict\(aq: {\(aqdefault\(aq: \(aq{\(dqTi\(dq: 43, \(dqNi\(dq: 23, \(dqOut\(dq: 3}\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqxname\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqhorizontal position name (string)\(aq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}}, \(aqsampledescription\(aq: {\(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsampledescriptiontext\(aq: {\(aqdescription\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqsample description or sampleId (string)\(aq}, \(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsamplehkl\(aq: {\(aqh\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqh position in hkl space (datasource)\(aq}, \(aqk\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqk position in hkl space (datasource)\(aq}, \(aql\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aql position in hkl space (datasource)\(aq}, \(aqpsi\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpsi angle position of analyzer (datasource)\(aq}, \(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsecop\(aq: {\(aqhost\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop host name (string)\(aq}, \(aqmessage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop command MANDATORY (string)\(aq}, \(aqport\(aq: {\(aqdefault\(aq: \(aq5000\(aq, \(aqdoc\(aq: \(aqsecop port name (string)\(aq}, \(aqtimeout\(aq: {\(aqdefault\(aq: \(aq0.0001\(aq, \(aqdoc\(aq: \(aqsecop timeout (string)\(aq}}, \(aqsecoplinks\(aq: {\(aqenvironments\(aq: {\(aqdefault\(aq: \(aqtemperature,magnetic_field\(aq, \(aqdoc\(aq: \(aqsecop environment link lists MANDATORY (string)\(aq}, \(aqmeanings\(aq: {\(aqdefault\(aq: \(aqtemperature,magnetic_field,electric_field,stress_field,pressure\(aq, \(aqdoc\(aq: \(aqsecop meanings link lists MANDATORY (string)\(aq}, \(aqsampleenvname\(aq: {\(aqdefault\(aq: \(aqsample_environment\(aq, \(aqdoc\(aq: \(aqsample environment group name (string)\(aq}, \(aqsamplename\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsinglesecop\(aq: {\(aqhost\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop host name (string)\(aq}, \(aqmessage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop command MANDATORY (string)\(aq}, \(aqport\(aq: {\(aqdefault\(aq: \(aq5000\(aq, \(aqdoc\(aq: \(aqsecop port name (string)\(aq}, \(aqtimeout\(aq: {\(aqdefault\(aq: \(aq0.0001\(aq, \(aqdoc\(aq: \(aqsecop timeout (string)\(aq}}, \(aqslit\(aq: {\(aqbottom\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbottom blade position (datasource)\(aq}, \(aqbottomclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbottom blade closed position (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name for the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqleft\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleft blade position (datasource)\(aq}, \(aqleftclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleft blade closed position (datasource)\(aq}, \(aqright\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqright blade position (datasource)\(aq}, \(aqrightclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqright blade closed position (datasource)\(aq}, \(aqtop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtop blade position (datasource)\(aq}, \(aqtopclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtop blade closed position (datasource)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(dqtransformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)\(dq}, \(aqxgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal gap (datasource)\(aq}, \(aqxoffdependson\(aq: {\(aqdefault\(aq: \(aqy_offset\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqxoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal offset (datasource)\(aq}, \(aqxoffsetcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal offset calibration (datasource)\(aq}, \(aqxoffsetcalibrationname\(aq: {\(aqdefault\(aq: \(aqx_offset_calibration\(aq, \(aqdoc\(aq: \(aqhorizontal offset calibration name (string)\(aq}, \(aqxoffsetname\(aq: {\(aqdefault\(aq: \(aqx_offset\(aq, \(aqdoc\(aq: \(aqhorizontal offset name (string)\(aq}, \(aqygap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical gap (datasource)\(aq}, \(aqyoffdependson\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqyoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertiacal offset (datasource)\(aq}, \(aqyoffsetcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertiacal offset calibration (datasource)\(aq}, \(aqyoffsetcalibrationname\(aq: {\(aqdefault\(aq: \(aqy_offset_calibration\(aq, \(aqdoc\(aq: \(aqvertiacal offset calibration name (string)\(aq}, \(aqyoffsetname\(aq: {\(aqdefault\(aq: \(aqy_offset\(aq, \(aqdoc\(aq: \(aqvertiacal offset name (string)\(aq}}, \(aqsource\(aq: {\(aqbeamcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam current (datasource)\(aq}, \(aqbunchmode\(aq: {\(aqdefault\(aq: \(aqMulti Bunch\(aq, \(aqdoc\(aq: \(aqbunch mode (string)\(aq}, \(aqnumberofbunches\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnumber of source bunches (datasource)\(aq}, \(aqsourceenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam energy (datasource)\(aq}, \(aqsrcname\(aq: {\(aqdefault\(aq: \(aqsource\(aq, \(aqdoc\(aq: \(aqsource group name (string)\(aq}}, \(aqstarttime\(aq: {}, \(aqtango\(aq: {\(aqattribute\(aq: {\(aqdefault\(aq: \(aqPosition\(aq, \(aqdoc\(aq: \(aqtango device attribute (string)\(aq}, \(aqdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtango device MANDATORY (string)\(aq}}, \(aqundulator\(aq: {\(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance from the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name from the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator energy (datasource)\(aq}, \(aqgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqseparation between opposing pairs of magnetic pole (datasource)\(aq}, \(aqgapunits\(aq: {\(aqdefault\(aq: \(aqmm\(aq, \(aqdoc\(aq: \(aqgap units (string)\(aq}, \(aqharmonic\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator harmonic (datasource)\(aq}, \(aqlength\(aq: {\(aqdefault\(aq: \(aq2\(aq, \(aqdoc\(aq: \(aqlength of insertion device in meters (string)\(aq}, \(aqshift\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator shift (datasource)\(aq}, \(aqshiftunits\(aq: {\(aqdefault\(aq: \(aqmm\(aq, \(aqdoc\(aq: \(aqshift units (string)\(aq}, \(aqspeed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator speed (datasource)\(aq}, \(aqspeedunits\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqspeed units (string)\(aq}, \(aqtaper\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgap difference between upstream and downstream ends of the insertion device (datasource)\(aq}, \(aqtaperunits\(aq: {\(aqdefault\(aq: \(aqmm\(aq, \(aqdoc\(aq: \(aqgap units (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(dqtransformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)\(dq}, \(aqtype\(aq: {\(aqdefault\(aq: \(aqundulator\(aq, \(aqdoc\(aq: \(aqundulator or wiggler (string)\(aq}, \(aquname\(aq: {\(aqdefault\(aq: \(aqinsertion_device\(aq, \(aqdoc\(aq: \(aqinsertion_device group name (string)\(aq}}}
(\fI\%dict\fP <\fI\%str\fP , \fI\%dict\fP <\fI\%str\fP , \fI\%str\fP > >)
standard component template variables
and its [default value, doc string]
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.storeComponent(name, xml, server, mandatory=False)
stores components in Configuration Server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- component name
.IP \(bu 2
\fBxml\fP (\fI\%str\fP) \-\- component xml string
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- configuration server
.IP \(bu 2
\fBmandatory\fP (\fI\%bool\fP) \-\- set component as mandatory
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.storeDataSource(name, xml, server)
stores datasources in Configuration Server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- datasource name
.IP \(bu 2
\fBxml\fP (\fI\%str\fP) \-\- datasource xml string
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- configuration server
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.twoDModules  =  [\(aqpilatus100k\(aq, \(aqpilatus300k\(aq, \(aqpilatus1m\(aq, \(aqpilatus2m\(aq, \(aqpilatus6m\(aq, \(aqpco4000\(aq, \(aqperkinelmerdetector\(aq, \(aqlambda\(aq, \(aqpedetector\(aq, \(aqperkinelmer\(aq, \(aqpco\(aq, \(aqpcoedge\(aq, \(aqmarccd\(aq, \(aqperkinelmer\(aq, \(aqlcxcamera\(aq, \(aqlimaccd\(aq, \(aqeigerpsi\(aq, \(aqeigerdectris\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of 2d detectors
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.xmlPackageHandler  =  <nxstools.nxsdevicetools.PackageHandler object>
(\fI\%PackageHandler\fP) xml template package handler
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsdevicetools.zeroDModules  =  [\(aqtip830\(aq]
(\fI\%list\fP <\fI\%str\fP>) modules of 0D detectors
.UNINDENT
.SS nxstools.nxsetup module
.sp
Set Up NeXus Tango Servers
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.AddRecorderPath(parser)
Bases: \fI\%Runner\fP
.sp
add\-recorder\-path runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqadd\-recorder\-path into MacroServer(s) property\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup add\-recorder\-path /usr/share/pyshared/sardananxsrecorder\en       nxsetup add\-recorder\-path \-t /usr/share/pyshared/sardananxsrecorder\en       nxsetup add\-recorder\-path /usr/share/pyshared/sardananxsrecorder \-i haso\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.ChangeProp(parser)
Bases: \fI\%Runner\fP
.sp
change\-prop runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqchange property value\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup change\-prop \-n ClientRecordKeys \-t \-w \(dq[\e\e\(dqphoibos_scan_command\e\e\(dq,\e\e\(dqphoibos_scan_comment\e\e\(dq]\(dq NXSRecSelector/r228\en       nxsetup change\-prop \-n DefaultPreselectedComponents \-w \(dq[\e\e\(dqpinhole1\e\e\(dq,\e\e\(dqslit2\e\e\(dq]\(dq NXSRecSelector/r228\en       nxsetup change\-prop \-n StartDsPath \-w \(dq[\e\e\(dq/usr/bin\e\e\(dq,\e\e\(dq/usr/lib/tango\e\e\(dq]\(dq Starter\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.MoveProp(parser)
Bases: \fI\%Runner\fP
.sp
move\-prop runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqchange property name\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup move\-prop \-n DefaultPreselectedComponents \-o DefaultAutomaticComponents NXSRecSelector\en       nxsetup move\-prop \-t \-n DefaultPreselectedComponents  \-o DefaultAutomaticComponents NXSRecSelector\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.Restart(parser)
Bases: \fI\%Runner\fP
.sp
restart runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqrestart tango server\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup restart Pool/haso228 \-l 2\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.Set(parser)
Bases: \fI\%Runner\fP
.sp
set runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqset up NXSConfigServer NXSDataWriter and NXSRecSelector servers\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup set\en       nxsetup set \-b p09 \-m haso228 \-u p09user \-d nxsconfig NXSConfigServer\en       nxsetup set NexusWriter/haso228  \-k NexusWriter  \-y \e\(aq{\(dqp00/bliss_nexuswriter/test_session\(dq:{\(dqsession\(dq:\(dqtest_session\(dq,\(dqbeacon_host\(dq:\(dqhaso228:25000\(dq}}\e\(aq  \-t\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.SetUp
Bases: \fI\%object\fP
.sp
setup NXSDataWriter, NXSConfigServer and NXSRecSelector Tango servers
.sp
constructor
.INDENT 7.0
.TP
.B changePropertyName(server, oldname, newname, sclass=None)
changes property name
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBoldname\fP (\fI\%str\fP) \-\- old property name
.IP \(bu 2
\fBnewname\fP (\fI\%str\fP) \-\- new property name
.IP \(bu 2
\fBsclass\fP (\fI\%str\fP) \-\- server class name
.UNINDENT
.TP
.B Returns
True if property name was changed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changePropertyValue(server, newname, newvalue, sclass=None)
changes/sets property value
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBnewvalue\fP (\fI\%str\fP) \-\- new property value
.IP \(bu 2
\fBnewname\fP (\fI\%str\fP) \-\- new property name
.IP \(bu 2
\fBsclass\fP (\fI\%str\fP) \-\- server class name
.UNINDENT
.TP
.B Returns
True if property name was changed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changeRecorderPath(path, instance=None)
adds a new recorder path
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpath\fP (\fI\%str\fP) \-\- new recorder path
.IP \(bu 2
\fBinstance\fP (\fI\%str\fP) \-\- MacroServer instance name
.UNINDENT
.TP
.B Returns
True if record path was added
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createConfigServer(beamline, masterhost, jsonsettings=None, hostname=None, postpone=False)
creates configuration server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBbeamline\fP (\fI\%str\fP) \-\- beamline name
.IP \(bu 2
\fBmasterhost\fP (\fI\%str\fP) \-\- master host of data writer
.IP \(bu 2
\fBjsonsettings\fP (\fI\%str\fP) \-\- connection settings to DB in json
.IP \(bu 2
\fBhostname\fP (\fI\%str\fP) \-\- host to run the config server
.IP \(bu 2
\fBpostpone\fP (\fI\%bool\fP) \-\- postpone starting flag
.UNINDENT
.TP
.B Returns
True if server was created
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createDataWriter(beamline, masterhost, postpone=False)
creates data writer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBbeamline\fP (\fI\%str\fP) \-\- beamline name
.IP \(bu 2
\fBmasterhost\fP (\fI\%str\fP) \-\- master host of data writer
.IP \(bu 2
\fBpostpone\fP (\fI\%bool\fP) \-\- postpone starting flag
.UNINDENT
.TP
.B Returns
True if server was created
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createSelector(beamline, masterhost, writer=None, cserver=None, postpone=False)
creates selector server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBbeamline\fP (\fI\%str\fP) \-\- beamline name
.IP \(bu 2
\fBmasterhost\fP (\fI\%str\fP) \-\- master host of data writer
.IP \(bu 2
\fBwriter\fP (\fI\%str\fP) \-\- writer device name
.IP \(bu 2
\fBcserver\fP (\fI\%str\fP) \-\- configuration server device name
.IP \(bu 2
\fBpostpone\fP (\fI\%bool\fP) \-\- postpone starting flag
.UNINDENT
.TP
.B Returns
True if server was created
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createServer(server_name, beamline, masterhost, hostname=None, class_name=None, jsondeviceproperties=None, postpone=False)
creates tango server in DB
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver_name\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBbeamline\fP (\fI\%str\fP) \-\- beamline name
.IP \(bu 2
\fBmasterhost\fP (\fI\%str\fP) \-\- master host of data writer
.IP \(bu 2
\fBhostname\fP (\fI\%str\fP) \-\- host to run the config server
.IP \(bu 2
\fBclass_name\fP \-\- class name
.IP \(bu 2
\fBjsondeviceproperties\fP (\fI\%str\fP) \-\- json device properties
.IP \(bu 2
\fBpostpone\fP (\fI\%bool\fP) \-\- postpone starting flag
.UNINDENT
.TP
.B Returns
True if server was created
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B cserver_name
(\fI\%str\fP) NeXus config server device name
.UNINDENT
.INDENT 7.0
.TP
.B db
(\fI\%tango.Database\fP) tango database server
.UNINDENT
.INDENT 7.0
.TP
.B getStarterName(host)
restarts server
.INDENT 7.0
.TP
.B Parameters
\fBhost\fP (\fI\%str\fP) \-\- server host name
.TP
.B Returns
starter device name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B killServer(server)
.UNINDENT
.INDENT 7.0
.TP
.B restartServer(name, host=None, level=None, restart=True, stopstart=True, wait=True, timeout=None)
restarts server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- server host name
.IP \(bu 2
\fBlevel\fP (\fI\%int\fP) \-\- start up level
.IP \(bu 2
\fBrestart\fP (\fI\%bool\fP) \-\- if server should be restarted
.IP \(bu 2
\fBstopstart\fP (\fI\%bool\fP) \-\- if server should be stopped and started
.IP \(bu 2
\fBwait\fP (\fI\%bool\fP) \-\- script should wait for the server
.IP \(bu 2
\fBtimeout\fP (\fI\%float\fP) \-\- timeout for  start
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B stopServer(name, host=None)
restarts server
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- server name
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- server host name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B waitServerNotRunning(server=None, device=None, adminproxy=None, maxcnt=1000, verbose=True, waitforproc=True)
wait until device is exported and server is running
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- server name, check if running when not None
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- device name, check if exported when not None
.IP \(bu 2
\fBadminproxy\fP (\fI\%tango.DeviceProxy\fP) \-\- Starter device proxy
.IP \(bu 2
\fBmaxcnt\fP (\fI\%int\fP) \-\- maximal waiting time in 10ms
.IP \(bu 2
\fBverbose\fP (\fI\%bool\fP) \-\- verbose mode
.IP \(bu 2
\fBwaitforproc\fP \-\- wait for process list update
.UNINDENT
.TP
.B Returns
True if server is running
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B waitServerRunning(server=None, device=None, adminproxy=None, maxcnt=1000, verbose=True, waitforproc=True)
wait until device is exported and server is running
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserver\fP (\fI\%str\fP) \-\- server name, check if running when not None
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- device name, check if exported when not None
.IP \(bu 2
\fBadminproxy\fP (\fI\%tango.DeviceProxy\fP) \-\- Starter device proxy
.IP \(bu 2
\fBmaxcnt\fP (\fI\%int\fP) \-\- maximal waiting time in 10ms
.IP \(bu 2
\fBverbose\fP (\fI\%bool\fP) \-\- verbose mode
.IP \(bu 2
\fBwaitforproc\fP \-\- wait for process list update
.UNINDENT
.TP
.B Returns
True if server is running
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B writer_name
(\fI\%str\fP) NeXus writer device name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.Start(parser)
Bases: \fI\%Runner\fP
.sp
start runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqstart tango server\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup start Pool/haso228 \-l 2\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.Stop(parser)
Bases: \fI\%Runner\fP
.sp
Stop runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqstop tango server\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup stop Pool/haso228 \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsetup.Wait(parser)
Bases: \fI\%Runner\fP
.sp
start runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqwait for tango server\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsetup wait Pool/haso228 \-z 30\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsetup.knownHosts  =  {\(aqcfeld\-pcx27083\(aq: {\(aqbeamline\(aq: \(aqcfeld\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqcfeld\-pcx27083\(aq, \(aquser\(aq: \(aqritzkowf\(aq}, \(aqhas6117b\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhas6117b\(aq, \(aquser\(aq: \(aqp02user\(aq}, \(aqhascmexp\(aq: {\(aqbeamline\(aq: \(aqcmexp\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhascmexp\(aq, \(aquser\(aq: \(aqcmexp\(aq}, \(aqhasdelay\(aq: {\(aqbeamline\(aq: \(aqdelay\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasdelay\(aq, \(aquser\(aq: \(aqdelayusr\(aq}, \(aqhasdelay2\(aq: {\(aqbeamline\(aq: \(aqdelsauto\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasdelay2\(aq, \(aquser\(aq: \(aqdelayusr\(aq}, \(aqhasep211eh\(aq: {\(aqbeamline\(aq: \(aqp211\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep211eh\(aq, \(aquser\(aq: \(aqp211user\(aq}, \(aqhasep212lab\(aq: {\(aqbeamline\(aq: \(aqp21\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep212lab\(aq, \(aquser\(aq: \(aqp212user\(aq}, \(aqhasep212oh\(aq: {\(aqbeamline\(aq: \(aqp21\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep212oh\(aq, \(aquser\(aq: \(aqp212user\(aq}, \(aqhasep22ch1\(aq: {\(aqbeamline\(aq: \(aqp22\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep22ch1\(aq, \(aquser\(aq: \(aqp22user\(aq}, \(aqhasep22ch2\(aq: {\(aqbeamline\(aq: \(aqp22\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep22ch2\(aq, \(aquser\(aq: \(aqp22user\(aq}, \(aqhasep22oh\(aq: {\(aqbeamline\(aq: \(aqp22\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep22oh\(aq, \(aquser\(aq: \(aqp22user\(aq}, \(aqhasep23ch\(aq: {\(aqbeamline\(aq: \(aqp23\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep23ch\(aq, \(aquser\(aq: \(aqp23user\(aq}, \(aqhasep23dev\(aq: {\(aqbeamline\(aq: \(aqp23\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep23dev\(aq, \(aquser\(aq: \(aqp23user\(aq}, \(aqhasep23eh\(aq: {\(aqbeamline\(aq: \(aqp23\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep23eh\(aq, \(aquser\(aq: \(aqp23user\(aq}, \(aqhasep24\(aq: {\(aqbeamline\(aq: \(aqp24\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep24\(aq, \(aquser\(aq: \(aqp24user\(aq}, \(aqhasep24eh1\(aq: {\(aqbeamline\(aq: \(aqp24\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep24eh1\(aq, \(aquser\(aq: \(aqp24user\(aq}, \(aqhasfmirr\(aq: {\(aqbeamline\(aq: \(aqflash\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasfmirr\(aq, \(aquser\(aq: \(aqmusixusr\(aq}, \(aqhasfpgm1\(aq: {\(aqbeamline\(aq: \(aqflash\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasfpgm1\(aq, \(aquser\(aq: \(aqvuvfuser\(aq}, \(aqhasfvls\(aq: {\(aqbeamline\(aq: \(aqflash\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasfvls\(aq, \(aquser\(aq: \(aqvuvfuser\(aq}, \(aqhaskmusixtng\(aq: {\(aqbeamline\(aq: \(aqflash\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaskmusixtng\(aq, \(aquser\(aq: \(aqvuvfuser\(aq}, \(aqhasmfmc\(aq: {\(aqbeamline\(aq: \(aqfmc\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasmfmc\(aq, \(aquser\(aq: \(aqdelayusr\(aq}, \(aqhasmlqj\(aq: {\(aqbeamline\(aq: \(aqlqj\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasmlqj\(aq, \(aquser\(aq: \(aqlqjuser\(aq}, \(aqhasmrixs\(aq: {\(aqbeamline\(aq: \(aqrix\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasmrixs\(aq, \(aquser\(aq: \(aqrixuser\(aq}, \(aqhasnp61ch1\(aq: {\(aqbeamline\(aq: \(aqp61\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasnp61ch1\(aq, \(aquser\(aq: \(aqp61user\(aq}, \(aqhasnp64\(aq: {\(aqbeamline\(aq: \(aqp64\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasnp64\(aq, \(aquser\(aq: \(aqp64user\(aq}, \(aqhasnp64oh\(aq: {\(aqbeamline\(aq: \(aqp64\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasnp64oh\(aq, \(aquser\(aq: \(aqp64user\(aq}, \(aqhasnp65\(aq: {\(aqbeamline\(aq: \(aqp65\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasnp65\(aq, \(aquser\(aq: \(aqp65user\(aq}, \(aqhasnp66\(aq: {\(aqbeamline\(aq: \(aqp66\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasnp66\(aq, \(aquser\(aq: \(aqp66user\(aq}, \(aqhaso107d1\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso107d1\(aq, \(aquser\(aq: \(aqkracht\(aq}, \(aqhaso107klx\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso107klx\(aq, \(aquser\(aq: \(aqkracht\(aq}, \(aqhaso107tk\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso107tk\(aq, \(aquser\(aq: \(aqkracht\(aq}, \(aqhaso111n\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso111n\(aq, \(aquser\(aq: \(aqtnunez\(aq}, \(aqhaso111o\(aq: {\(aqbeamline\(aq: \(aqp09\(aq}, \(aqhaso111tb\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso111tb\(aq, \(aquser\(aq: \(aqtnunez\(aq}, \(aqhaso113b\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso113b\(aq, \(aquser\(aq: \(aqblume\(aq}, \(aqhaso113u\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso113u\(aq, \(aquser\(aq: \(aqkracht\(aq}, \(aqhaso204n\(aq: {\(aqbeamline\(aq: \(aqp23\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso204n\(aq, \(aquser\(aq: \(aqp23user\(aq}, \(aqhaso213p\(aq: {\(aqbeamline\(aq: \(aqp22\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso213p\(aq, \(aquser\(aq: \(aqspiec\(aq}, \(aqhaso224w\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso224w\(aq, \(aquser\(aq: \(aqp021user\(aq}, \(aqhaso228jk\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaso228jk\(aq, \(aquser\(aq: \(aqjkotan\(aq}, \(aqhaso232s\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp232s\(aq, \(aquser\(aq: \(aqp02user\(aq}, \(aqhasodlsauto\(aq: {\(aqbeamline\(aq: \(aqdlsauto\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasodlsauto\(aq, \(aquser\(aq: \(aqdlsuser\(aq}, \(aqhasp029rack\(aq: {\(aqbeamline\(aq: \(aqp06\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasp029rack\(aq, \(aquser\(aq: \(aqp06user\(aq}, \(aqhasp068xlab\(aq: {\(aqbeamline\(aq: \(aqp06\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasp068xlab\(aq, \(aquser\(aq: \(aqp06user\(aq}, \(aqhaspecsicl4\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspecsicl4\(aq, \(aquser\(aq: \(aqlacluser\(aq}, \(aqhaspllabcl1\(aq: {\(aqbeamline\(aq: \(aqllab\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspllabcl1\(aq, \(aquser\(aq: \(aqlacluser\(aq}, \(aqhaspp01eh1\(aq: {\(aqbeamline\(aq: \(aqp01\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp01eh1\(aq, \(aquser\(aq: \(aqp01user\(aq}, \(aqhaspp01eh2\(aq: {\(aqbeamline\(aq: \(aqp01\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp01eh2\(aq, \(aquser\(aq: \(aqp01user\(aq}, \(aqhaspp01eh3\(aq: {\(aqbeamline\(aq: \(aqp01\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp01eh3\(aq, \(aquser\(aq: \(aqp01user\(aq}, \(aqhaspp021ch1\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp021ch1\(aq, \(aquser\(aq: \(aqp021user\(aq}, \(aqhaspp021ch1a\(aq: {\(aqbeamline\(aq: \(aqp021\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp021ch1a\(aq, \(aquser\(aq: \(aqp021user\(aq}, \(aqhaspp021jenkins\(aq: {\(aqbeamline\(aq: \(aqp021\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp021jenkins\(aq, \(aquser\(aq: \(aqp021user\(aq}, \(aqhaspp022ch\(aq: {\(aqbeamline\(aq: \(aqp022\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp022ch\(aq, \(aquser\(aq: \(aqp022user\(aq}, \(aqhaspp022chms\(aq: {\(aqbeamline\(aq: \(aqp022\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp022chms\(aq, \(aquser\(aq: \(aqp022user\(aq}, \(aqhaspp02ch1\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp02ch1\(aq, \(aquser\(aq: \(aqp02user\(aq}, \(aqhaspp02ch1a\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp02ch1a\(aq, \(aquser\(aq: \(aqp02user\(aq}, \(aqhaspp02ch2\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp02ch2\(aq, \(aquser\(aq: \(aqp02user\(aq}, \(aqhaspp02lakl\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp02lakl\(aq, \(aquser\(aq: \(aqp02user\(aq}, \(aqhaspp02oh1\(aq: {\(aqbeamline\(aq: \(aqp02\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp02oh1\(aq, \(aquser\(aq: \(aqp02user\(aq}, \(aqhaspp03\(aq: {\(aqbeamline\(aq: \(aqp03\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp03\(aq, \(aquser\(aq: \(aqp03user\(aq}, \(aqhaspp03nano\(aq: {\(aqbeamline\(aq: \(aqp03nano\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp03nano\(aq, \(aquser\(aq: \(aqp03nano\(aq}, \(aqhaspp04exp1\(aq: {\(aqbeamline\(aq: \(aqp04\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp04exp1\(aq, \(aquser\(aq: \(aqp04user\(aq}, \(aqhaspp04exp2\(aq: {\(aqbeamline\(aq: \(aqp04\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp04exp2\(aq, \(aquser\(aq: \(aqp04user\(aq}, \(aqhaspp06ctrl\(aq: {\(aqbeamline\(aq: \(aqp06\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp06ctrl\(aq, \(aquser\(aq: \(aqp06user\(aq}, \(aqhaspp06mc01\(aq: {\(aqbeamline\(aq: \(aqp06\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp06mc01\(aq, \(aquser\(aq: \(aqp06user\(aq}, \(aqhaspp06nc1\(aq: {\(aqbeamline\(aq: \(aqp06\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp06nc1\(aq, \(aquser\(aq: \(aqp06user\(aq}, \(aqhaspp07eh2\(aq: {\(aqbeamline\(aq: \(aqp07\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp07eh2\(aq, \(aquser\(aq: \(aqp07user\(aq}, \(aqhaspp08\(aq: {\(aqbeamline\(aq: \(aqp08\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp08\(aq, \(aquser\(aq: \(aqp08user\(aq}, \(aqhaspp08lisa2\(aq: {\(aqbeamline\(aq: \(aqp08\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp08lisa2\(aq, \(aquser\(aq: \(aqp08user\(aq}, \(aqhaspp09\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp09\(aq, \(aquser\(aq: \(aqp09user\(aq}, \(aqhaspp09dif\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp09dif\(aq, \(aquser\(aq: \(aqp09user\(aq}, \(aqhaspp09haxps\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp09maxps\(aq, \(aquser\(aq: \(aqp09haxps\(aq}, \(aqhaspp09mag\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp09mag\(aq, \(aquser\(aq: \(aqp09user\(aq}, \(aqhaspp10e1\(aq: {\(aqbeamline\(aq: \(aqp10\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp10e1\(aq, \(aquser\(aq: \(aqp10user\(aq}, \(aqhaspp10e2\(aq: {\(aqbeamline\(aq: \(aqp10\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp10e2\(aq, \(aquser\(aq: \(aqp10user\(aq}, \(aqhaspp10lab\(aq: {\(aqbeamline\(aq: \(aqp10\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp10lab\(aq, \(aquser\(aq: \(aqp10user\(aq}, \(aqhaspp10lcx\(aq: {\(aqbeamline\(aq: \(aqp10\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp10lcx\(aq, \(aquser\(aq: \(aqp10user\(aq}, \(aqhaspp11oh\(aq: {\(aqbeamline\(aq: \(aqp11\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp11oh\(aq, \(aquser\(aq: \(aqp11user\(aq}, \(aqhaspp11sardana\(aq: {\(aqbeamline\(aq: \(aqp11\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp11sardana\(aq, \(aquser\(aq: \(aqp11user\(aq}, \(aqhaspp11user02\(aq: {\(aqbeamline\(aq: \(aqp11\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp11user02\(aq, \(aquser\(aq: \(aqp11user\(aq}, \(aqhaspp212oh\(aq: {\(aqbeamline\(aq: \(aqp21\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep212oh\(aq, \(aquser\(aq: \(aqp21user\(aq}, \(aqhaspp21eh2\(aq: {\(aqbeamline\(aq: \(aqp21\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep21eh2\(aq, \(aquser\(aq: \(aqp21user\(aq}, \(aqhaspp21eh3\(aq: {\(aqbeamline\(aq: \(aqp21\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhasep21eh3\(aq, \(aquser\(aq: \(aqp21user\(aq}, \(aqhaspp21lab\(aq: {\(aqbeamline\(aq: \(aqp21\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhaspp21lab\(aq, \(aquser\(aq: \(aqp21user\(aq}, \(aqhastodt\(aq: {\(aqbeamline\(aq: \(aqp09\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhastodt\(aq, \(aquser\(aq: \(aqkracht\(aq}, \(aqhzgpp07eh1\(aq: {\(aqbeamline\(aq: \(aqp07\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhzgpp07eh1\(aq, \(aquser\(aq: \(aqp07user\(aq}, \(aqhzgpp07eh3\(aq: {\(aqbeamline\(aq: \(aqp07\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhzgpp07eh3\(aq, \(aquser\(aq: \(aqp07user\(aq}, \(aqhzgpp07eh4\(aq: {\(aqbeamline\(aq: \(aqp07\(aq, \(aqdbname\(aq: \(aqnxsconfig\(aq, \(aqmasterhost\(aq: \(aqhzgpp07eh4\(aq, \(aquser\(aq: \(aqp07user\(aq}}
(\fI\%dict\fP <\fI\%dict\fP <\fI\%str\fP , \fI\%str\fP > > )
all SardanaHosts and DataBaseHosts should be known
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsetup.main()
the main program function
.UNINDENT
.SS nxstools.nxsfileinfo module
.sp
Command\-line tool for showing meta data from Nexus Files
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.Attachment(parser)
Bases: \fI\%Runner\fP
.sp
Attachment runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B attachment(root, options)
get metadata from nexus and beamtime file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBroot\fP (\fBfilewriter.FTGroup\fP) \-\- nexus file root
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.TP
.B Returns
atttachment metadata
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqgenerate description of attachment\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq examples:\en       nxsfileinfo attachment \-b p00 \-i 2342342 \-t \(aqHH water\(aq \-o ~/at1.json thumbnail.png \en       nxsfileinfo attachment \-b p00 \-i 2342342 \-t \(aqHH water\(aq \-o ~/at2.json \-s pilatus myscan_00123.nxs \en       nxsfileinfo attachment \-b p00 \-i 2342342 \-t \(aqHH water\(aq \-o ~/at2.json  myscan_00124.fio \en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(root, options)
the main function
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.IP \(bu 2
\fBroot\fP (\fBfilewriter.FTGroup\fP) \-\- nexus file root
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.BeamtimeLoader(options)
Bases: \fI\%object\fP
.sp
loader constructor
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.INDENT 7.0
.TP
.B append_copymap_field(metadata, cmap, clist, cmapfield=None)
overwrite metadata with dictionary
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.IP \(bu 2
\fBcmap\fP (\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP>) \-\- overwrite dictionary
.IP \(bu 2
\fBclist\fP (\fI\%list\fP < [\fI\%str\fP, \fI\%str\fP] >) \-\- copy list to overwrite metadata
.IP \(bu 2
\fBcmapfield\fP (\fI\%str\fP) \-\- copy map nexus field
.UNINDENT
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B btmdmap  =  {}
.UNINDENT
.INDENT 7.0
.TP
.B copylist  =  [[\(aqcreationTime\(aq, \(aqendTime\(aq]]
.UNINDENT
.INDENT 7.0
.TP
.B copymap  =  {\(aqdescription\(aq: \(aqscientificMetadata.title.value\(aq, \(aqendTime\(aq: \(aqscientificMetadata.end_time.value\(aq, \(aqscientificMetadata.ScanCommand\(aq: \(aqscientificMetadata.program_name.scan_command\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B cre  =  {\(aqaccessGroups\(aq: [], \(aqclassification\(aq: [], \(aqcreatedAt\(aq: [], \(aqcreatedBy\(aq: [], \(aqcreationTime\(aq: [], \(aqdataFormat\(aq: [], \(aqdatasetName\(aq: [], \(aqdatasetlifecycle\(aq: [], \(aqhistory\(aq: [], \(aqinstrumentId\(aq: [], \(aqisPublished\(aq: [\(aqfalse\(aq], \(aqkeywords\(aq: [], \(aqlicense\(aq: [], \(aqnumberOfFiles\(aq: [], \(aqnumberOfFilesArchived\(aq: [], \(aqorcidOfOwner\(aq: \(aqORCID of owner https://orcid.org if available\(aq, \(aqownerGroup\(aq: [], \(aqpackedSize\(aq: [], \(aqpublisheddataId\(aq: [], \(aqsampleId\(aq: [], \(aqscientificMetadata\(aq: {}, \(aqsize\(aq: [], \(aqsourceFolderHost\(aq: [], \(aqtechniques\(aq: [], \(aqupdatedAt\(aq: [], \(aqupdatedBy\(aq: [], \(aqvalidationStatus\(aq: [], \(aqversion\(aq: []}
.UNINDENT
.INDENT 7.0
.TP
.B dr  =  {\(aqapplicant.*\(aq: [], \(aqbeamlineAlias\(aq: [], \(aqeventStart\(aq: [], \(aqleader\(aq: [], \(aqonlineAnalysis\(aq: [], \(aqpi.*\(aq: [], \(aqproposalType\(aq: [], \(aqusers\(aq: []}
.UNINDENT
.INDENT 7.0
.TP
.B facilityalias  =  {\(aqPETRA III\(aq: \(aqpetra3\(aq, \(aqPETRA IV\(aq: \(aqpetra4\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B generate_techniques(techniques, techniques_pids=None)
generate technique dictionary
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtechniques\fP (\fI\%list\fP <\fI\%str\fP>) \-\- a list of techniques splitted by comma
.IP \(bu 2
\fBtechniques_pids\fP (\fI\%list\fP <\fI\%str\fP>) \-\- a list of technique pids splitted by comma
.UNINDENT
.TP
.B Returns
technique dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIobjstr\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B merge(metadata)
update metadata with dictionary
.INDENT 7.0
.TP
.B Parameters
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B merge_copy_lists(clist)
merge copy lists
.INDENT 7.0
.TP
.B Parameters
\fBclist\fP \-\- overwrite copy list
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%list\fP < [\fI\%str\fP, \fI\%str\fP] >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B merge_copy_maps(cmap)
merge copy maps
.INDENT 7.0
.TP
.B Parameters
\fBcmap\fP (\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP>) \-\- overwrite dictionary
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B newbtmdmap  =  {\(aqcontactEmail\(aq: [\(aqpi.email\(aq, \(aqapplicant.email\(aq], \(aqdescription\(aq: [\(aqtitle\(aq], \(aqendTime\(aq: [\(aqeventEnd\(aq], \(aqowner\(aq: [\(aqleader.lastname\(aq, \(aqapplicant.lastname\(aq], \(aqownerEmail\(aq: [\(aqleader.email\(aq, \(aqapplicant.email\(aq], \(aqprincipalInvestigator\(aq: [\(aqapplicant.email\(aq], \(aqproposalId\(aq: [\(aqbeamtimeId\(aq], \(aqsourceFolder\(aq: [\(aqcorePath\(aq]}
.UNINDENT
.INDENT 7.0
.TP
.B oldbtmdmap  =  {\(aqcreatedAt\(aq: [\(aqgenerated\(aq], \(aqupdatedAt\(aq: [\(aqgenerated\(aq]}
.UNINDENT
.INDENT 7.0
.TP
.B overwrite(metadata, cmap=None, clist=None, cmapfield=None)
overwrite metadata with dictionary
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.IP \(bu 2
\fBcmap\fP (\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP>) \-\- copy map to overwrite dictionary
.IP \(bu 2
\fBclist\fP (\fI\%list\fP < [\fI\%str\fP, \fI\%str\fP] >) \-\- copy list to overwrite metadata
.IP \(bu 2
\fBcmapfield\fP (\fI\%str\fP) \-\- copy map nexus field
.UNINDENT
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B remove_metadata(metadata, cmap=None, clist=None, cmapfield=None)
.INDENT 7.0
.TP
.B remove metadata with dictionary with empty input or output
in the copy map
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.IP \(bu 2
\fBcmap\fP (\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP>) \-\- overwrite dictionary
.IP \(bu 2
\fBclist\fP (\fI\%list\fP < [\fI\%str\fP, \fI\%str\fP] >) \-\- copy list to overwrite metadata
.IP \(bu 2
\fBcmapfield\fP (\fI\%str\fP) \-\- copy map nexus field
.UNINDENT
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B run()
runner for DESY beamtime file parser
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B strcre  =  {\(aqaccessGroups\(aq: [\(aq{beamtimeId}\-dmgt\(aq, \(aq{beamtimeId}\-clbt\(aq, \(aq{beamtimeId}\-part\(aq, \(aq{beamline}dmgt\(aq, \(aq{beamline}staff\(aq], \(aqcreationLocation\(aq: \(aq/DESY/{facility}/{beamlineAlias}\(aq, \(aqinstrumentId\(aq: \(aq/{facility}/{beamline}\(aq, \(aqisPublished\(aq: False, \(aqkeywords\(aq: [\(aqscan\(aq], \(aqownerGroup\(aq: \(aq{beamtimeId}\-dmgt\(aq, \(aqtype\(aq: \(aqraw\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B update_instrumentid(metadata)
update instrument id
.INDENT 7.0
.TP
.B Parameters
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_pid(metadata, filename=None, puuid=False, pfname=False, beamtimeid=None)
update pid metadata with dictionary
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- nexus filename
.IP \(bu 2
\fBpuuid\fP (\fI\%bool\fP) \-\- pid with uuid
.IP \(bu 2
\fBpfname\fP (\fI\%bool\fP) \-\- pid with file name
.UNINDENT
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_sampleid(metadata, sampleid=None, sidfromname=False)
update sampleid
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.IP \(bu 2
\fBsampleid\fP (\fI\%str\fP) \-\- sample id
.IP \(bu 2
\fBsidfromname\fP (\fI\%bool\fP) \-\- sample id from its name
.UNINDENT
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_techniques(metadata, techniques=None)
update techniques
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmetadata\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- metadata dictionary to merge in
.IP \(bu 2
\fBtechniques\fP (\fI\%str\fP) \-\- a list of techniques splitted by comma
.UNINDENT
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.Field(parser)
Bases: \fI\%Runner\fP
.sp
Field runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqshow field information for the nexus file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsfileinfo field /user/data/myfile.nxs\en       nxsfileinfo field /user/data/myfile.nxs \-g\en       nxsfileinfo field /user/data/myfile.nxs \-s\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(root, options)
the main function
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.IP \(bu 2
\fBroot\fP (class:\fIfilewriter.FTGroup\fP) \-\- nexus file root
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.General(parser)
Bases: \fI\%Runner\fP
.sp
General runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqshow general information for the nexus file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsfileinfo general /user/data/myfile.nxs\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  parseentry(entry, description)
parse entry of nexus file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBentry\fP (\fBfilewriter.FTGroup\fP) \-\- nexus entry node
.IP \(bu 2
\fBdescription\fP (\fI\%list\fP <\fI\%dict\fP <\fI\%str\fP, \fIany\fP > >) \-\- dict description list
.UNINDENT
.TP
.B Returns
(key, value) name pair of table headers
.TP
.B Return type
[\fI\%str\fP, \fI\%str\fP]
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(root)
show general informations
.INDENT 7.0
.TP
.B Parameters
\fBroot\fP (class:\fIfilewriter.FTGroup\fP) \-\- nexus file root
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.GroupMetadata(parser)
Bases: \fI\%Runner\fP
.sp
Group Metadata runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqgroup scan metadata information\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B dicttype  =  [\(aqDict\(aq, \(aqD\(aq, \(aqd\(aq, \(aqdict\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B endpointstype  =  [\(aqEndpoints\(aq, \(aqendpoints\(aq, \(aqE\(aq, \(aqe\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsfileinfo groupmetadata \-o /user/data/myscan.scan.json  \-t /user/data/myscan.attachment.json  \-l /user/data/myscan.origdatablock.json  \-c /home/user/group_config.txt  \-m /user/data/myscan_00023.scan.json  \-d /user/data/myscan_00023.origdatablock.json  \-a /user/data/myscan_00023.attachment.json \en \en       nxsfileinfo groupmetadata myscan_m001  \-m /user/data/myscan_00021.scan.json\en  \-c /home/user/group_config.txt  \en \en       nxsfileinfo groupmetadata  myscan_m001  \-c /home/user/group_config.txt  \-m /user/data/myscan_00023.scan.json  \-d /user/data/myscan_00023.origdatablock.json  \-a /user/data/myscan_00023.attachment.json  \en \en       nxsfileinfo groupmetadata  \-m /user/data/myscan_00023.scan.json  \-d /user/data/myscan_00023.origdatablock.json  \-c /home/user/group_config.txt  \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B firstlasttype  =  [\(aqFirstLast\(aq, \(aqfirstlast\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B firsttype  =  [\(aqFirst\(aq, \(aqfirst\(aq, \(aqf\(aq, \(aqF\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  groupmetadata(options)
group scan metadata
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
[grouped metadata,
grouped origdatablocks,
grouped attachments]
.TP
.B Return type
[\fI\%str\fP,:obj:\fIstr\fP, \fI\%str\fP]
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B lasttype  =  [\(aqLast\(aq, \(aqlast\(aq, \(aql\(aq, \(aqL\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B listtype  =  [\(aqList\(aq, \(aqL\(aq, \(aql\(aq, \(aqlist\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B maxtype  =  [\(aqMax\(aq, \(aqmax\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B minmaxtype  =  [\(aqMinMax\(aq, \(aqM\(aq, \(aqm\(aq, \(aqminmax\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B mintype  =  [\(aqMin\(aq, \(aqmin\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B rangetype  =  [\(aqRange\(aq, \(aqR\(aq, \(aqr\(aq, \(aqrangle\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(options)
the main function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B uniquelisttype  =  [\(aqUniqueList\(aq, \(aqU\(aq, \(aqu\(aq, \(aquniquelist\(aq]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.Instrument(parser)
Bases: \fI\%Runner\fP
.sp
Instrument runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqgenerate description of instrument\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsfileinfo instrument \-p /petra3/p00 \-n P00 \-m ~/cm.json \en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B instrument(options)
create instrument metadata
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(options)
the main function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.Metadata(parser)
Bases: \fI\%Runner\fP
.sp
Metadata runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqshow metadata information for the nexus file\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq examples:\en       nxsfileinfo metadata /user/data/myfile.nxs\en       nxsfileinfo metadata /user/data/myfile.fio\en       nxsfileinfo metadata /user/data/myfile.nxs \-p \(aqGroup\(aq\en       nxsfileinfo metadata /user/data/myfile.nxs \-s\en       nxsfileinfo metadata /user/data/myfile.nxs \-a units,NX_class\en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  metadata(root, options)
get metadata from nexus and beamtime file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBroot\fP (\fBfilewriter.FTGroup\fP) \-\- nexus file root
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.TP
.B Returns
nexus file root metadata
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(root, options)
the main function
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.IP \(bu 2
\fBroot\fP (\fBfilewriter.FTGroup\fP) \-\- nexus file root
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.OrigDatablock(parser)
Bases: \fI\%Runner\fP
.sp
OrigDatablock runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B datablock(options)
dump scan datablock JSON
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B datafiles(scanpath, scdir, scfiles, relpath, filters=None)
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqgenerate description of all scan files\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(aq examples:\en       nxsfileinfo origdatablock /user/data/scan_12345\en\en\(aq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B filterout(fpath, filters)
.UNINDENT
.INDENT 7.0
.TP
.B isotime(tme)
returns iso time string
.INDENT 7.0
.TP
.B Returns
iso time
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(options)
the main function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileinfo.Sample(parser)
Bases: \fI\%Runner\fP
.sp
Sample runner
.sp
parser creator
.INDENT 7.0
.TP
.B Parameters
\fBparser\fP (\fBNXSFileInfoArgParser\fP) \-\- option parser
.UNINDENT
.INDENT 7.0
.TP
.B create()
creates parser
.UNINDENT
.INDENT 7.0
.TP
.B description  =  \(aqgenerate description of sample\(aq
(\fI\%str\fP) command description
.UNINDENT
.INDENT 7.0
.TP
.B epilog  =  \(dq examples:\en       nxsfileinfo sample \-i petra3/h2o/234234 \-d \(aqHH water\(aq \-s ~/cm.json \en\en\(dq
(\fI\%str\fP) command epilog
.UNINDENT
.INDENT 7.0
.TP
.B postauto()
parser creator after autocomplete run
.UNINDENT
.INDENT 7.0
.TP
.B run(options)
the main program function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sample(options)
create sample metadata
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.TP
.B Returns
output information
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(options)
the main function
.INDENT 7.0
.TP
.B Parameters
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- parser options
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileinfo.getlist(text)
.INDENT 7.0
.TP
.B converts a text string to a list of lists
with respect to newline and space characters
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- parser options
.TP
.B Returns
a list of list
.TP
.B Return type
\fI\%list\fP < \fBlist\(ga<:obj:\(gastr\fP> >
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileinfo.main()
the main program function
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileinfo.splittext(text, lmax=68)
split text to lines
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtext\fP (\fI\%str\fP) \-\- parser options
.IP \(bu 2
\fBlmax\fP (\fI\%int\fP) \-\- maximal line length
.UNINDENT
.TP
.B Returns
split text
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.SS nxstools.nxsfileparser module
.sp
NeXus main metadata viewer
.INDENT 0.0
.TP
.B class  nxstools.nxsfileparser.FIOFileParser(root)
Bases: \fI\%object\fP
.sp
Metadata parser for FIO files
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBroot\fP (\fI\%str\fP) \-\- fio file content
.UNINDENT
.INDENT 7.0
.TP
.B columns
(\fI\%dict\fP <\fI\%str\fP, \fIany\fP>)  columns dictionary
.UNINDENT
.INDENT 7.0
.TP
.B group_postfix
(\fI\%str\fP) group postfix
.UNINDENT
.INDENT 7.0
.TP
.B parseMeta()
parses the file and creates the filtered description list
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileparser.NXSFileParser(root)
Bases: \fI\%object\fP
.sp
Metadata parser for NeXus files
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBroot\fP (\fBfilewriter.FTGroup\fP) \-\- nexus root node
.UNINDENT
.INDENT 7.0
.TP
.B emptyunits
(\fI\%bool\fP) add empty units
.UNINDENT
.INDENT 7.0
.TP
.B filters
(\fBlist\(ga< :obj:\(gastr\fP>)  filters for \fIfull_path\fP names
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  getpath(path)
converts full_path with NX_classes into nexus_path
.INDENT 7.0
.TP
.B Parameters
\fBpath\fP (\fI\%str\fP) \-\- nexus full_path
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B group_postfix
(\fI\%str\fP) group postfix
.UNINDENT
.INDENT 7.0
.TP
.B parse()
parses the file and creates the filtered description list
.UNINDENT
.INDENT 7.0
.TP
.B parseMeta()
parses the file and creates the filtered description list
.UNINDENT
.INDENT 7.0
.TP
.B scientific
(\fI\%bool\fP) store NXentries as scientificMetadata
.UNINDENT
.INDENT 7.0
.TP
.B valuestostore
(\fBlist\(ga< :obj:\(gastr\fP>)  field names which value should be stored
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.getdsname(xmlstring)
provides datasource name from datasource xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlstring\fP (\fI\%str\fP) \-\- datasource xml string
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.getdssource(xmlstring)
provides source from datasource xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlstring\fP (\fI\%str\fP) \-\- datasource xml string
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.getdstype(xmlstring)
provides datasource type from datasource xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlstring\fP (\fI\%str\fP) \-\- datasource xml string
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.infNaN2None(obj)
replace inf and NaN to None
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsfileparser.isoDate(text)
convert date to iso format
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- date text to convert
.TP
.B Returns
date in iso format
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileparser.numpyEncoder(*, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)
Bases: \fBJSONEncoder\fP
.sp
numpy json encoder with list
.sp
Constructor for JSONEncoder, with sensible defaults.
.sp
If skipkeys is false, then it is a TypeError to attempt
encoding of keys that are not str, int, float or None.  If
skipkeys is True, such items are simply skipped.
.sp
If ensure_ascii is true, the output is guaranteed to be str
objects with all incoming non\-ASCII characters escaped.  If
ensure_ascii is false, the output can contain non\-ASCII characters.
.sp
If check_circular is true, then lists, dicts, and custom encoded
objects will be checked for circular references during encoding to
prevent an infinite recursion (which would cause an RecursionError).
Otherwise, no such check takes place.
.sp
If allow_nan is true, then NaN, Infinity, and \-Infinity will be
encoded as such.  This behavior is not JSON specification compliant,
but is consistent with most JavaScript based encoders and decoders.
Otherwise, it will be a ValueError to encode such floats.
.sp
If sort_keys is true, then the output of dictionaries will be
sorted by key; this is useful for regression tests to ensure
that JSON serializations can be compared on a day\-to\-day basis.
.sp
If indent is a non\-negative integer, then JSON array
elements and object members will be pretty\-printed with that
indent level.  An indent level of 0 will only insert newlines.
None is the most compact representation.
.sp
If specified, separators should be an (item_separator, key_separator)
tuple.  The default is (\(aq, \(aq, \(aq: \(aq) if \fIindent\fP is \fBNone\fP and
(\(aq,\(aq, \(aq: \(aq) otherwise.  To get the most compact JSON representation,
you should specify (\(aq,\(aq, \(aq:\(aq) to eliminate whitespace.
.sp
If specified, default is a function that gets called for objects
that can\(aqt otherwise be serialized.  It should return a JSON encodable
version of the object or raise a \fBTypeError\fP\&.
.INDENT 7.0
.TP
.B default(obj)
default encoder
.INDENT 7.0
.TP
.B Parameters
\fBobj\fP (\fI\%object\fP or \fIany\fP) \-\- numpy array object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsfileparser.numpyEncoderNull(*, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)
Bases: \fI\%numpyEncoder\fP
.sp
numpy json encoder with list with nan/inf to null
.sp
Constructor for JSONEncoder, with sensible defaults.
.sp
If skipkeys is false, then it is a TypeError to attempt
encoding of keys that are not str, int, float or None.  If
skipkeys is True, such items are simply skipped.
.sp
If ensure_ascii is true, the output is guaranteed to be str
objects with all incoming non\-ASCII characters escaped.  If
ensure_ascii is false, the output can contain non\-ASCII characters.
.sp
If check_circular is true, then lists, dicts, and custom encoded
objects will be checked for circular references during encoding to
prevent an infinite recursion (which would cause an RecursionError).
Otherwise, no such check takes place.
.sp
If allow_nan is true, then NaN, Infinity, and \-Infinity will be
encoded as such.  This behavior is not JSON specification compliant,
but is consistent with most JavaScript based encoders and decoders.
Otherwise, it will be a ValueError to encode such floats.
.sp
If sort_keys is true, then the output of dictionaries will be
sorted by key; this is useful for regression tests to ensure
that JSON serializations can be compared on a day\-to\-day basis.
.sp
If indent is a non\-negative integer, then JSON array
elements and object members will be pretty\-printed with that
indent level.  An indent level of 0 will only insert newlines.
None is the most compact representation.
.sp
If specified, separators should be an (item_separator, key_separator)
tuple.  The default is (\(aq, \(aq, \(aq: \(aq) if \fIindent\fP is \fBNone\fP and
(\(aq,\(aq, \(aq: \(aq) otherwise.  To get the most compact JSON representation,
you should specify (\(aq,\(aq, \(aq:\(aq) to eliminate whitespace.
.sp
If specified, default is a function that gets called for objects
that can\(aqt otherwise be serialized.  It should return a JSON encodable
version of the object or raise a \fBTypeError\fP\&.
.INDENT 7.0
.TP
.B encode(obj, *args, **kwargs)
Return a JSON string representation of a Python data structure.
.sp
.nf
.ft C
>>> from json.encoder import JSONEncoder
>>> JSONEncoder().encode({\(dqfoo\(dq: [\(dqbar\(dq, \(dqbaz\(dq]})
\(aq{\(dqfoo\(dq: [\(dqbar\(dq, \(dqbaz\(dq]}\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS nxstools.nxsparser module
.sp
Command\-line tool for ascess to the nexdatas configuration server
.INDENT 0.0
.TP
.B class  nxstools.nxsparser.ESRFConverter
Bases: \fI\%object\fP
.sp
ESRF xml configuration converter
.sp
constructor
.INDENT 7.0
.TP
.B convert(text)
converts ESRF xml configuration to nxsdatawriter format
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- input xml string
.TP
.B Returns
output xml string
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsparser.ParserTools
Bases: \fI\%object\fP
.sp
configuration server adapter
.INDENT 7.0
.TP
.B classmethod  getRecord(node)
fetches record name or query from datasource node
.INDENT 7.0
.TP
.B Parameters
\fBnode\fP (\fBlxml.etree.Element\fP) \-\- datasource node
.TP
.B Returns
record name or query
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  mergeDefinitions(xmls)
.INDENT 7.0
.TP
.B merges the xmls list of definitions xml strings
to one output xml string
.UNINDENT
.INDENT 7.0
.TP
.B Parameters
\fBxmls\fP (\fI\%list\fP <\fI\%str\fP>) \-\- a list of xml string with definitions
.TP
.B Returns
one output xml string
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  parseAttributes(xmlc)
provides datasources and its records from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
list of datasource descriptions
.TP
.B Return type
\fI\%list\fP < \fI\%dict\fP <\fI\%str\fP, \fIany\fP> >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  parseDataSources(xmlc)
provides datasources and its records from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
list of datasource descriptions
.TP
.B Return type
\fI\%list\fP <\fI\%dict\fP <\fI\%str\fP, \fI\%str\fP>>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  parseFields(xmlc)
provides datasources and its records from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
list of datasource descriptions
.TP
.B Return type
\fI\%list\fP < \fI\%dict\fP <\fI\%str\fP, \fIany\fP> >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  parseLinks(xmlc)
provides datasources and its records from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
list of datasource descriptions
.TP
.B Return type
\fI\%list\fP < \fI\%dict\fP <\fI\%str\fP, \fIany\fP> >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod  parseRecord(xmlc)
provides source record from xml string
.INDENT 7.0
.TP
.B Parameters
\fBxmlc\fP (\fI\%str\fP) \-\- xml string
.TP
.B Returns
source record
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsparser.TableDictTools(description, nonone=None)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdescription\fP (\fI\%list\fP <\fI\%str\fP>) \-\- description list
.IP \(bu 2
\fBnonone\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of parameters which have to exist to be shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B generateList()
generate row lists of table
.INDENT 7.0
.TP
.B Returns
table rows
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B headers
(\fI\%list\fP <\fI\%str\fP>)
headers
.UNINDENT
.INDENT 7.0
.TP
.B title
(\fI\%str\fP) table title
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsparser.TableTools(description, nonone=None, headers=None, filters=None)
Bases: \fI\%object\fP
.sp
configuration server adapter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdescription\fP (\fI\%list\fP <\fI\%str\fP>) \-\- description list
.IP \(bu 2
\fBnonone\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of parameters which have to exist to be shown
.IP \(bu 2
\fBheaders\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of output parameters
.IP \(bu 2
\fBfilters\fP (\fI\%list\fP <\fI\%str\fP>) \-\- filters for first column names
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B filters
(\fI\%list\fP <\fI\%str\fP>) filter list
.UNINDENT
.INDENT 7.0
.TP
.B generateList()
generate row lists of table
.INDENT 7.0
.TP
.B Returns
table rows
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B headers
(\fI\%list\fP <\fI\%str\fP>) table headers
.UNINDENT
.INDENT 7.0
.TP
.B loadDescription(description)
loads description
.INDENT 7.0
.TP
.B Parameters
\fBdescription\fP (\fI\%list\fP <\fI\%str\fP>) \-\- description list
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B title
(\fI\%str\fP) table title
.UNINDENT
.UNINDENT
.SS nxstools.nxsxml module
.sp
Creator of XML configuration files
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NAttr(parent, nameAttr, typeAttr=\(aq\(aq)
Bases: \fI\%NTag\fP
.sp
Attribute tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setStrategy(mode=\(aqSTEP\(aq, trigger=None, value=None, canfail=None)
sets the attribute strategy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%str\fP) \-\- mode data writing, i.e. INIT, STEP, FINAL, POSTRUN
.IP \(bu 2
\fBtrigger\fP (\fI\%str\fP) \-\- for asynchronous writting,
e.g. with different subentries
.IP \(bu 2
\fBvalue\fP (\fI\%str\fP) \-\- label for postrun mode
.IP \(bu 2
\fBcanfail\fP (\fI\%bool\fP) \-\- can fail strategy flag
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NDSource(parent)
Bases: \fI\%NTag\fP
.sp
Source tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B initClient(name, recordName)
sets paramters for Client data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- name of datasource
.IP \(bu 2
\fBrecordName\fP (\fI\%str\fP) \-\- name of the data object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B initDBase(name, dbtype, query, dbname=None, rank=None, mycnf=None, user=None, passwd=None, dsn=None, mode=None, host=None, port=None)
sets parameters of DataBase
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- name of datasource
.IP \(bu 2
\fBdbname\fP (\fI\%str\fP) \-\- name of used DataBase
.IP \(bu 2
\fBquery\fP (\fI\%str\fP) \-\- database query
.IP \(bu 2
\fBdbtype\fP (\fI\%str\fP) \-\- type of the database, i.e. MYSQL, PGSQL, ORACLE
.IP \(bu 2
\fBrank\fP (\fI\%str\fP) \-\- rank of the query output, i.e. SCALAR, SPECTRUM, IMAGE
.IP \(bu 2
\fBmycnf\fP (\fI\%str\fP) \-\- MYSQL config file
.IP \(bu 2
\fBuser\fP (\fI\%str\fP) \-\- database user name
.IP \(bu 2
\fBpasswd\fP (\fI\%str\fP) \-\- database user password
.IP \(bu 2
\fBdsn\fP (\fI\%str\fP) \-\- DSN string to initialize ORACLE and PGSQL databases
.IP \(bu 2
\fBmode\fP (\fI\%str\fP) \-\- mode for ORACLE databases, i.e. SYSDBA or SYSOPER
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- name of the host
.IP \(bu 2
\fBport\fP (\fI\%str\fP) \-\- port number
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B initTango(name, device, memberType, recordName, host=None, port=None, encoding=None, group=None)
sets paramters for Tango device
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- name of datasource
.IP \(bu 2
\fBdevice\fP (\fI\%str\fP) \-\- device name
.IP \(bu 2
\fBmemberType\fP (\fI\%str\fP) \-\- type of the data object, i.e. attribute,
property, command
.IP \(bu 2
\fBrecordName\fP (\fI\%str\fP) \-\- name of the data object
.IP \(bu 2
\fBhost\fP (\fI\%str\fP) \-\- host name
.IP \(bu 2
\fBport\fP (\fI\%str\fP) \-\- port
.IP \(bu 2
\fBencoding\fP (\fI\%str\fP) \-\- encoding of DevEncoded data
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NDeviceGroup(parent, deviceName, nameAttr, typeAttr=\(aq\(aq, commands=True, blackAttrs=None)
Bases: \fI\%NGroup\fP
.sp
Tango device tag creator
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBdeviceName\fP (\fI\%str\fP) \-\- tango device name
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.IP \(bu 2
\fBcommands\fP (\fI\%bool\fP) \-\- if we call the commands
.IP \(bu 2
\fBblackAttrs\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of excluded attributes
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B nTypes  =  [\(aqNX_CHAR\(aq, \(aqNX_BOOLEAN\(aq, \(aqNX_INT32\(aq, \(aqNX_INT32\(aq, \(aqNX_FLOAT32\(aq, \(aqNX_FLOAT64\(aq, \(aqNX_UINT32\(aq, \(aqNX_UINT32\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_INT32\(aq, \(aqNX_INT32\(aq, \(aqNX_FLOAT32\(aq, \(aqNX_FLOAT64\(aq, \(aqNX_UINT32\(aq, \(aqNX_UINT32\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_CHAR\(aq, \(aqNX_BOOLEAN\(aq, \(aqNX_CHAR\(aq, \(aqNX_INT64\(aq, \(aqNX_UINT64\(aq, \(aqNX_INT64\(aq, \(aqNX_UINT64\(aq, \(aqNX_INT32\(aq, \(aqNX_CHAR\(aq]
(\fI\%list\fP <\fI\%str\fP>) NeXuS types corresponding to the Tango types
.UNINDENT
.INDENT 7.0
.TP
.B tTypes  =  [\(aqDevVoid\(aq, \(aqDevBoolean\(aq, \(aqDevShort\(aq, \(aqDevLong\(aq, \(aqDevFloat\(aq, \(aqDevDouble\(aq, \(aqDevUShort\(aq, \(aqDevULong\(aq, \(aqDevString\(aq, \(aqDevVarCharArray\(aq, \(aqDevVarShortArray\(aq, \(aqDevVarLongArray\(aq, \(aqDevVarFloatArray\(aq, \(aqDevVarDoubleArray\(aq, \(aqDevVarUShortArray\(aq, \(aqDevVarULongArray\(aq, \(aqDevVarStringArray\(aq, \(aqDevVarLongStringArray\(aq, \(aqDevVarDoubleStringArray\(aq, \(aqDevState\(aq, \(aqConstDevString\(aq, \(aqDevVarBooleanArray\(aq, \(aqDevUChar\(aq, \(aqDevLong64\(aq, \(aqDevULong64\(aq, \(aqDevVarLong64Array\(aq, \(aqDevVarULong64Array\(aq, \(aqDevInt\(aq, \(aqDevEncoded\(aq]
(\fI\%list\fP < \fI\%str\fP>) Tango types
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NDim(parent, indexAttr, valueAttr)
Bases: \fI\%NTag\fP
.sp
Dim tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBindexAttr\fP (\fI\%str\fP) \-\- index attribute
.IP \(bu 2
\fBvalueAttr\fP (\fI\%str\fP) \-\- value attribute
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NDimensions(parent, rankAttr)
Bases: \fI\%NTag\fP
.sp
Dimensions tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBrankAttr\fP (\fI\%str\fP) \-\- rank attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dim(indexAttr, valueAttr)
adds dim tag
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBindexAttr\fP (\fI\%str\fP) \-\- index attribute
.IP \(bu 2
\fBvalueAttr\fP (\fI\%str\fP) \-\- value attribute
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dims
(\fI\%dict\fP <\fI\%str\fP, \fI\%NDim\fP>)
container with dim tag wrapper
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NField(parent, nameAttr, typeAttr=\(aq\(aq)
Bases: \fI\%NTag\fP
.sp
Field tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addAttr(attrName, attrType, attrValue=\(aq\(aq)
adds attribute tag
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBattrName\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBattrType\fP (\fI\%str\fP) \-\- type attribute
.IP \(bu 2
\fBattrValue\fP (\fI\%str\fP) \-\- content of the attribute tag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setStrategy(mode=\(aqSTEP\(aq, trigger=None, value=None, grows=None, compression=False, rate=None, shuffle=None, canfail=None, compression_opts=None)
sets the field strategy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmode\fP (\fI\%str\fP) \-\- mode data writing, i.e. INIT, STEP, FINAL, POSTRUN
.IP \(bu 2
\fBtrigger\fP (\fI\%str\fP) \-\- for asynchronous writting,
e.g. with different subentries
.IP \(bu 2
\fBvalue\fP (\fI\%str\fP) \-\- label for postrun mode
.IP \(bu 2
\fBgrows\fP (\fI\%str\fP) \-\- growing dimension
.IP \(bu 2
\fBcompression\fP (\fI\%str\fP) \-\- flag if compression shuold be applied
.IP \(bu 2
\fBrate\fP (\fI\%str\fP) \-\- compression rate
.IP \(bu 2
\fBshuffle\fP (\fI\%str\fP) \-\- flag if compression shuffle
.IP \(bu 2
\fBcanfail\fP (\fI\%bool\fP) \-\- can fail strategy flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setUnits(unitsAttr)
sets the field unit
.INDENT 7.0
.TP
.B Parameters
\fBunitsAttr\fP (\fI\%str\fP) \-\- the field unit
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NGroup(parent, nameAttr, typeAttr=\(aq\(aq)
Bases: \fI\%NTag\fP
.sp
Group tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addAttr(attrName, attrType, attrValue=\(aq\(aq)
adds attribute: tag
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBattrName\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBattrType\fP (\fI\%str\fP) \-\- type attribute
.IP \(bu 2
\fBattrValue\fP (\fI\%str\fP) \-\- content of the attribute tag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NLink(parent, nameAttr, gTarget)
Bases: \fI\%NTag\fP
.sp
Link tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- name attribute
.IP \(bu 2
\fBgTarget\fP (\fI\%str\fP) \-\- target attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addDoc(doc)
adds doc tag content
.INDENT 7.0
.TP
.B Parameters
\fBdoc\fP (\fI\%str\fP) \-\- doc tag content
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.NTag(parent, tagName, nameAttr=\(aq\(aq, typeAttr=\(aq\(aq)
Bases: \fI\%object\fP
.sp
tag wrapper
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fI\%NTag\fP) \-\- parent tag element
.IP \(bu 2
\fBtagName\fP (\fI\%str\fP) \-\- tag name
.IP \(bu 2
\fBnameAttr\fP (\fI\%str\fP) \-\- value of name attribute
.IP \(bu 2
\fBtypeAttr\fP (\fI\%str\fP) \-\- value of type attribute
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addTagAttr(name, value)
adds tag attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBvalue\fP (\fI\%str\fP) \-\- attribute value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addText(text)
adds tag content
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- tag content
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B elem
(\fBlxml.etree.Element\fP) tag element from etree
.UNINDENT
.INDENT 7.0
.TP
.B setText(text)
sets tag content
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- tag content
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class  nxstools.nxsxml.XMLFile(fname)
Bases: \fI\%object\fP
.sp
XML file object
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBfname\fP (\fI\%str\fP) \-\- XML file name
.UNINDENT
.INDENT 7.0
.TP
.B dump()
dumps XML structure into the XML file
.INDENT 7.0
.TP
.B Brief
It opens XML file, calls prettyPrint and closes the XML file
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B elem
(\fBlxml.etree.Element\fP) XML root instance
.UNINDENT
.INDENT 7.0
.TP
.B fname
(\fI\%str\fP) XML file name
.UNINDENT
.INDENT 7.0
.TP
.B prettyPrint(etNode=None)
prints pretty XML making use of etree
.INDENT 7.0
.TP
.B Parameters
\fBetNode\fP (\fBlxml.etree.Element\fP) \-\- node
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDependencies(components, entry=None)
sets tag content
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcomponents\fP (\fI\%list\fP <\fI\%str\fP>) \-\- component dependencies
.IP \(bu 2
\fBentry\fP (\fBlxml.etree.Element\fP) \-\- entry node
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.nxsxml.main()
the main function
.UNINDENT
.SS nxstools.release module
.sp
NXS tools release version
.SS nxstools.redisutils module
.sp
Provides redis utils
.INDENT 0.0
.TP
.B class  nxstools.redisutils.DESYIdentityModel(*, pk:  \fI\%Optional\fP[\fI\%str\fP]  =  None, name:  \fI\%str\fP, number:  \fI\%int\fP, data_policy:  \fI\%str\fP, beamline:  \fI\%Optional\fP[\fI\%str\fP]  =  None, session:  \fI\%Optional\fP[\fI\%str\fP]  =  None, proposal:  \fI\%Optional\fP[\fI\%str\fP]  =  None, collection:  \fI\%Optional\fP[\fI\%str\fP]  =  None, dataset:  \fI\%Optional\fP[\fI\%str\fP]  =  None, path:  \fI\%Optional\fP[\fI\%str\fP]  =  None, **extra_data:  \fI\%Any\fP)
Bases: \fBHashModel\fP
.sp
Institute specific information used to link scans
in Redis to external services.
.sp
Create a new model by parsing and validating input data from keyword arguments.
.sp
Raises ValidationError if the input data cannot be parsed to form a valid model.
.INDENT 7.0
.TP
.B class  Meta
Bases: \fI\%object\fP
.INDENT 7.0
.TP
.B database  =  <blissdata.redis_engine.identities._UninitializedRedis object>
.UNINDENT
.INDENT 7.0
.TP
.B encoding  =  \(aqutf\-8\(aq
.UNINDENT
.INDENT 7.0
.TP
.B global_key_prefix  =  \(aqesrf\(aq
.UNINDENT
.INDENT 7.0
.TP
.B index_name  =  \(aqesrf:id:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B model_key_prefix  =  \(aqid\(aq
.UNINDENT
.INDENT 7.0
.TP
.B primary_key  =  PrimaryKey(name=\(aqpk\(aq, field=ModelField(name=\(aqpk\(aq, type=Optional[str], required=False, default=None))
.UNINDENT
.INDENT 7.0
.TP
.B primary_key_creator_cls
alias of \fBUlidPrimaryKey\fP
.UNINDENT
.INDENT 7.0
.TP
.B primary_key_pattern  =  \(aq{pk}\(aq
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B beamline:  \fI\%Union\fP[\fI\%str\fP,  \fI\%None\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B collection:  \fI\%Union\fP[\fI\%str\fP,  \fI\%None\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B data_policy:  \fI\%Union\fP[\fI\%str\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B dataset:  \fI\%Union\fP[\fI\%str\fP,  \fI\%None\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B name:  \fI\%Union\fP[\fI\%str\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B number:  \fI\%Union\fP[\fI\%int\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B path:  \fI\%Union\fP[\fI\%str\fP,  \fI\%None\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B pk:  \fI\%Union\fP[\fI\%str\fP,  \fI\%None\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B proposal:  \fI\%Union\fP[\fI\%str\fP,  \fI\%None\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.INDENT 7.0
.TP
.B session:  \fI\%Union\fP[\fI\%str\fP,  \fI\%None\fP,  ExpressionProxy]  =  <redis_om.model.model.ExpressionProxy object>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.redisutils.getDataStore(redisURL)
.UNINDENT
.SS Module contents
.sp
NXS tools
.sp
xml templates
.INDENT 0.0
.TP
.B nxstools.xmltemplates.moduleMultiAttributes  =  {\(aqcobold\(aq: [\(aqBinSize\(aq, \(aqExposureTime\(aq], \(aqdalsa\(aq: [\(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileSaving\(aq, \(aqFileStartNum\(aq, \(aqTriggerMode\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqExtendedExposure\(aq, \(aqBinComment\(aq, \(aqFramesProcessed\(aq, \(aqImage16\(aq, \(aqImage8\(aq, \(aqImageRaw\(aq, \(aqFramesReceived\(aq, \(aqFrameRate\(aq, \(aqFramesPerNXFile\(aq, \(aqNXFileCompression\(aq, \(aqTurboMode\(aq, \(aqImageEnc\(aq, \(aqViewingMode\(aq, \(aqThrashedBuffers\(aq, \(aqFramesToAcquire\(aq, \(aqAcquisitionFrameCount\(aq, \(aqAcquisitionMode\(aq, \(aqAcquisitionFrameMode\(aq, \(aqLinearityEqualizer\(aq, \(aqNrExposedFrames\(aq, \(aqNrOffsetFrames\(aq, \(aqOffset\(aq, \(aqPixelFormat\(aq, \(aqReadOutMode\(aq, \(aqStandby\(aq, \(aqSumScheme\(aq], \(aqdalsavds\(aq: [\(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileSaving\(aq, \(aqFileStartNum\(aq, \(aqTriggerMode\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqExtendedExposure\(aq, \(aqBinComment\(aq, \(aqFramesProcessed\(aq, \(aqImage16\(aq, \(aqImage8\(aq, \(aqImageRaw\(aq, \(aqFramesReceived\(aq, \(aqFrameRate\(aq, \(aqFramesPerNXFile\(aq, \(aqNXFileCompression\(aq, \(aqTurboMode\(aq, \(aqImageEnc\(aq, \(aqViewingMode\(aq, \(aqThrashedBuffers\(aq, \(aqFramesToAcquire\(aq, \(aqAcquisitionFrameCount\(aq, \(aqAcquisitionMode\(aq, \(aqAcquisitionFrameMode\(aq, \(aqLinearityEqualizer\(aq, \(aqNrExposedFrames\(aq, \(aqNrOffsetFrames\(aq, \(aqOffset\(aq, \(aqPixelFormat\(aq, \(aqReadOutMode\(aq, \(aqStandby\(aq, \(aqSumScheme\(aq], \(aqeiger1m16vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger1m32vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger4m16vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger4m32vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger9m16vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeiger9m32vds\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeigerdectris\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqeigerdectrismesh\(aq: [\(aqTriggerMode\(aq, \(aqNbTriggers\(aq, \(aqDescription\(aq, \(aqNbImages\(aq, \(aqBitDepth\(aq, \(aqReadoutTime\(aq, \(aqCountTime\(aq, \(aqEnergyThreshold\(aq, \(aqFrameTime\(aq, \(aqRateCorrectionEnabled\(aq, \(aqFlatFieldEnabled\(aq, \(aqTemperature\(aq, \(aqAutoSummationEnabled\(aq, \(aqHumidity\(aq, \(aqPhotonEnergy\(aq, \(aqWavelength\(aq], \(aqlambda\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqFramesPerFile\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlambda2m\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlambdavds\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqFramesPerFile\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlambdavdsnm\(aq: [\(aqTriggerMode\(aq, \(aqShutterTime\(aq, \(aqDelayTime\(aq, \(aqFrameNumbers\(aq, \(aqThreadNo\(aq, \(aqEnergyThreshold\(aq, \(aqOperatingMode\(aq, \(aqConfigFilePath\(aq, \(aqSaveAllImages\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqFilePreExt\(aq, \(aqFilePostfix\(aq, \(aqSaveFilePath\(aq, \(aqSaveFileName\(aq, \(aqLatestImageNumber\(aq, \(aqLiveMode\(aq, \(aqTotalLossFrames\(aq, \(aqCompressorShuffle\(aq, \(aqCompressionRate\(aq, \(aqCompressionEnabled\(aq, \(aqLayout\(aq, \(aqShutterTimeMax\(aq, \(aqShutterTimeMin\(aq, \(aqWidth\(aq, \(aqHeight\(aq, \(aqDepth\(aq, \(aqLiveFrameNo\(aq, \(aqDistortionCorrection\(aq, \(aqLiveLastImageData\(aq, \(aqFramesPerFile\(aq, \(aqOpMode\(aq, \(aqTranslations\(aq], \(aqlimaccd\(aq: [\(aqcamera_type\(aq, \(aqcamera_pixelsize\(aq, \(aqcamera_model\(aq, \(aqacq_mode\(aq, \(aqacq_nb_frames\(aq, \(aqacq_trigger_mode\(aq, \(aqlast_image_saved\(aq, \(aqlatency_time\(aq, \(aqacc_max_expo_time\(aq, \(aqacc_expo_time\(aq, \(aqacc_time_mode\(aq, \(aqacc_dead_time\(aq, \(aqacc_live_time\(aq, \(aqsaving_mode\(aq, \(aqsaving_directory\(aq, \(aqsaving_prefix\(aq, \(aqsaving_suffix\(aq, \(aqsaving_next_number\(aq, \(aqsaving_format\(aq, \(aqsaving_frame_per_file\(aq, \(aqimage_type\(aq, \(aqimage_width\(aq, \(aqimage_height\(aq, \(aqimage_sizes\(aq, \(aqimage_roi\(aq, \(aqimage_bin\(aq, \(aqimage_flip\(aq, \(aqimage_rotation\(aq, \(aqshutter_mode\(aq, \(aqshutter_open_time\(aq], \(aqlimaccds\(aq: [\(aqcamera_type\(aq, \(aqcamera_pixelsize\(aq, \(aqcamera_model\(aq, \(aqacq_mode\(aq, \(aqacq_nb_frames\(aq, \(aqacq_trigger_mode\(aq, \(aqlast_image_saved\(aq, \(aqlatency_time\(aq, \(aqacc_max_expo_time\(aq, \(aqacc_expo_time\(aq, \(aqacc_time_mode\(aq, \(aqacc_dead_time\(aq, \(aqacc_live_time\(aq, \(aqsaving_mode\(aq, \(aqsaving_directory\(aq, \(aqsaving_prefix\(aq, \(aqsaving_suffix\(aq, \(aqsaving_next_number\(aq, \(aqsaving_format\(aq, \(aqsaving_frame_per_file\(aq, \(aqimage_type\(aq, \(aqimage_width\(aq, \(aqimage_height\(aq, \(aqimage_sizes\(aq, \(aqimage_roi\(aq, \(aqimage_bin\(aq, \(aqimage_flip\(aq, \(aqimage_rotation\(aq, \(aqshutter_mode\(aq, \(aqshutter_open_time\(aq], \(aqmaiadimension\(aq: [\(aqName\(aq, \(aqPositionSource\(aq, \(aqPixelPitch\(aq, \(aqPixelOrigin\(aq, \(aqPixelHysteresis\(aq, \(aqPositionUnit\(aq, \(aqPixelCoordExtent\(aq], \(aqmaiaflux\(aq: [\(aqFluxCoeff\(aq, \(aqFluxName\(aq, \(aqFluxUnit\(aq, \(aqFluxSource\(aq], \(aqmaiainterlock\(aq: [\(aqBiasPeltierInterlock\(aq, \(aqBiasPeltierInterlockUptime\(aq, \(aqPressure\(aq], \(aqmaialogger\(aq: [\(aqRunNumber\(aq], \(aqmaiaprocessing\(aq: [\(aqGaintrimEnable\(aq, \(aqLineariseEnable\(aq, \(aqPhotonEnable\(aq, \(aqPileupRejectEnable\(aq, \(aqPixelEnable\(aq, \(aqThrottleEnable\(aq], \(aqmaiasensor\(aq: [\(aqBiasVoltage\(aq, \(aqLeakageCurrent\(aq, \(aqPeltierCurrent\(aq, \(aqWaterTemperature\(aq, \(aqDetectorTemperature\(aq, \(aqMosfetTemperature\(aq, \(aqIdentity\(aq], \(aqmarccd\(aq: [\(aqFrameShift\(aq, \(aqSavingDirectory\(aq, \(aqSavingPostfix\(aq, \(aqSavingPrefix\(aq], \(aqmca_xia\(aq: [\(aqICR\(aq, \(aqOCR\(aq], \(aqmca_xia@pool\(aq: [\(aqCountsRoI\(aq, \(aqRoIEnd\(aq, \(aqRoIStart\(aq], \(aqmythen\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqRoI1\(aq, \(aqRoI2\(aq], \(aqmythen2\(aq: [\(aqCounts1\(aq, \(aqCounts2\(aq, \(aqCountsMax\(aq, \(aqCountsTotal\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFileIndex\(aq, \(aqFilePrefix\(aq, \(aqData\(aq, \(aqEnergy\(aq, \(aqNbFrames\(aq, \(aqRoI1End\(aq, \(aqRoI2End\(aq, \(aqRoI1Start\(aq, \(aqRoI2Start\(aq, \(aqThreshold\(aq], \(aqpco\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpco4000\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpcoedge\(aq: [\(aqDelayTime\(aq, \(aqExposureTime\(aq, \(aqNbFrames\(aq, \(aqTriggerMode\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqBinning_x\(aq, \(aqBinning_y\(aq, \(aqROI_x_min\(aq, \(aqROI_x_max\(aq, \(aqROI_y_min\(aq, \(aqROI_y_max\(aq, \(aqPixelrate\(aq, \(aqADCs\(aq, \(aqCoolingTemp\(aq, \(aqCoolingTempSet\(aq, \(aqImageTimeStamp\(aq, \(aqRecorderMode\(aq], \(aqpedetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqperkinelmer\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqperkinelmerdetector\(aq: [\(aqBinningMode\(aq, \(aqFileIndex\(aq, \(aqExposureTime\(aq, \(aqSkippedAtStart\(aq, \(aqSummedSaveImages\(aq, \(aqSkippedBetweenSaved\(aq, \(aqFilesAfterTrigger\(aq, \(aqFilesBeforeTrigger\(aq, \(aqSummedDarkImages\(aq, \(aqOutputDirectory\(aq, \(aqFilePattern\(aq, \(aqFileName\(aq, \(aqLogFile\(aq, \(aqUserComment1\(aq, \(aqCameraGain\(aq, \(aqUserComment2\(aq, \(aqUserComment3\(aq, \(aqUserComment4\(aq, \(aqSaveRawImages\(aq, \(aqSaveDarkImages\(aq, \(aqPerformIntegration\(aq, \(aqSaveIntegratedData\(aq, \(aqSaveSubtracted\(aq, \(aqPerformDarkSubtraction\(aq], \(aqpilatus\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus100k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus1m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus2m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus300k\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqpilatus6m\(aq: [\(aqDelayTime\(aq, \(aqExposurePeriod\(aq, \(aqExposureTime\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileStartNum\(aq, \(aqLastImageTaken\(aq, \(aqNbExposures\(aq, \(aqNbFrames\(aq, \(aqMXparameters\(aq], \(aqtangovimba\(aq: [\(aqWidth\(aq, \(aqWidthMax\(aq, \(aqTriggerSource\(aq, \(aqPixelFormat\(aq, \(aqOffsetY\(aq, \(aqOffsetX\(aq, \(aqHeightMax\(aq, \(aqHeight\(aq, \(aqGainRaw\(aq, \(aqExposureTimeAbs\(aq, \(aqAcquisitionFrameRateAbs\(aq, \(aqAcquisitionFrameRateLimit\(aq, \(aqStreamBytesPerSecond\(aq, \(aqBinComment\(aq, \(aqFileDir\(aq, \(aqFilePostfix\(aq, \(aqFilePrefix\(aq, \(aqFileSaving\(aq, \(aqFileStartNum\(aq, \(aqFramesProcessed\(aq, \(aqImage16\(aq, \(aqImage8\(aq, \(aqImageRaw\(aq, \(aqMaxLoad\(aq, \(aqReadMode\(aq, \(aqTuneMode\(aq, \(aqViewingMode\(aq]}
(\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
important attributes of modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.xmltemplates.moduleTemplateFiles  =  {\(aqcobold\(aq: [\(aqcobold.xml\(aq], \(aqdalsa\(aq: [\(aqdalsa.xml\(aq, \(aqdalsa_nxdata.ds.xml\(aq, \(aqdalsa_external_data.ds.xml\(aq], \(aqdalsavds\(aq: [\(aqdalsavds.xml\(aq, \(aqdalsavds_nxdata.ds.xml\(aq, \(aqdalsavds_triggermode_cb.ds.xml\(aq, \(aqdalsavds_filestartnum_cb.ds.xml\(aq, \(aqdalsavds_nrexposedframes_cb.ds.xml\(aq], \(aqeiger1m16vds\(aq: [\(aqeiger1m16vds.xml\(aq, \(aqeiger1m16vds_stepindex.ds.xml\(aq, \(aqeiger1m16vds_description_cb.ds.xml\(aq, \(aqeiger1m16vds_triggermode_cb.ds.xml\(aq], \(aqeiger1m32vds\(aq: [\(aqeiger1m32vds.xml\(aq, \(aqeiger1m32vds_stepindex.ds.xml\(aq, \(aqeiger1m32vds_description_cb.ds.xml\(aq, \(aqeiger1m32vds_triggermode_cb.ds.xml\(aq], \(aqeiger4m16vds\(aq: [\(aqeiger4m16vds.xml\(aq, \(aqeiger4m16vds_stepindex.ds.xml\(aq, \(aqeiger4m16vds_description_cb.ds.xml\(aq, \(aqeiger4m16vds_triggermode_cb.ds.xml\(aq], \(aqeiger4m32vds\(aq: [\(aqeiger4m32vds.xml\(aq, \(aqeiger4m32vds_stepindex.ds.xml\(aq, \(aqeiger4m32vds_description_cb.ds.xml\(aq, \(aqeiger4m32vds_triggermode_cb.ds.xml\(aq], \(aqeiger9m16vds\(aq: [\(aqeiger9m16vds.xml\(aq, \(aqeiger9m16vds_stepindex.ds.xml\(aq, \(aqeiger9m16vds_description_cb.ds.xml\(aq, \(aqeiger9m16vds_triggermode_cb.ds.xml\(aq], \(aqeiger9m32vds\(aq: [\(aqeiger9m32vds.xml\(aq, \(aqeiger9m32vds_stepindex.ds.xml\(aq, \(aqeiger9m32vds_description_cb.ds.xml\(aq, \(aqeiger9m32vds_triggermode_cb.ds.xml\(aq], \(aqeigerdectris\(aq: [\(aqeigerdectris.xml\(aq, \(aqeigerdectris_stepindex.ds.xml\(aq, \(aqeigerdectris_description_cb.ds.xml\(aq, \(aqeigerdectris_triggermode_cb.ds.xml\(aq], \(aqeigerdectrismesh\(aq: [\(aqeigerdectrismesh.xml\(aq, \(aqeigerdectrismesh_stepindex.ds.xml\(aq, \(aqeigerdectrismesh_description_cb.ds.xml\(aq, \(aqeigerdectrismesh_triggermode_cb.ds.xml\(aq], \(aqlambda\(aq: [\(aqlambda.xml\(aq, \(aqlambda_nxdata.ds.xml\(aq, \(aqlambda_external_data.ds.xml\(aq], \(aqlambda2m\(aq: [\(aqlambda2m.xml\(aq, \(aqlambda2m_m1_nxdata.ds.xml\(aq, \(aqlambda2m_m2_nxdata.ds.xml\(aq, \(aqlambda2m_m3_nxdata.ds.xml\(aq, \(aqlambda2m_m1_external_data.ds.xml\(aq, \(aqlambda2m_m2_external_data.ds.xml\(aq, \(aqlambda2m_m3_external_data.ds.xml\(aq], \(aqlambdavds\(aq: [\(aqlambdavds.xml\(aq, \(aqlambdavds_nxdata.ds.xml\(aq, \(aqlambdavds_description.ds.xml\(aq, \(aqlambdavds_triggermode_cb.ds.xml\(aq, \(aqlambdavds_framenumbers_cb.ds.xml\(aq, \(aqlambdavds_savefilename_cb.ds.xml\(aq], \(aqlambdavdsnm\(aq: [\(aqlambdavdsnm.xml\(aq, \(aqlambdavdsnm_triggermode_cb.ds.xml\(aq, \(aqlambdavdsnm_nxdata.ds.xml\(aq], \(aqlimaccd\(aq: [\(aqlimaccd.xml\(aq, \(aqlimaccd_postrun.ds.xml\(aq, \(aqlimaccd_xpixelsize.ds.xml\(aq, \(aqlimaccd_ypixelsize.ds.xml\(aq, \(aqlimaccd_description.ds.xml\(aq, \(aqlimaccd_filestartnum_cb.ds.xml\(aq], \(aqlimaccds\(aq: [\(aqlimaccd.xml\(aq, \(aqlimaccd_postrun.ds.xml\(aq, \(aqlimaccd_xpixelsize.ds.xml\(aq, \(aqlimaccd_ypixelsize.ds.xml\(aq, \(aqlimaccd_description.ds.xml\(aq, \(aqlimaccd_filestartnum_cb.ds.xml\(aq], \(aqmarccd\(aq: [\(aqmarccd.xml\(aq, \(aqmarccd_postrun.ds.xml\(aq], \(aqmca_xia\(aq: [\(aqmcaxia.xml\(aq], \(aqmythen\(aq: [\(aqmythen.xml\(aq, \(aqmythen_postrun.ds.xml\(aq, \(aqmythen_filestartnumber.ds.xml\(aq], \(aqmythen2\(aq: [\(aqmythen2.xml\(aq], \(aqpco\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpco4000\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpcoedge\(aq: [\(aqpco.xml\(aq, \(aqpco_postrun.ds.xml\(aq, \(aqpco_description.ds.xml\(aq, \(aqpco_filestartnum_cb.ds.xml\(aq], \(aqpedetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqperkinelmer\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqperkinelmerdetector\(aq: [\(aqperkinelmerdetector.xml\(aq, \(aqperkinelmerdetector_postrun.ds.xml\(aq, \(aqperkinelmerdetector_description.ds.xml\(aq, \(aqperkinelmerdetector_fileindex_cb.ds.xml\(aq], \(aqpilatus\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus100k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus100k_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus1m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus1m_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus2m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus6m_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus300k\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus300k_description.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqpilatus6m\(aq: [\(aqpilatus.xml\(aq, \(aqpilatus_postrun.ds.xml\(aq, \(aqpilatus_mxparameters_cb.ds.xml\(aq, \(aqpilatus6m_description.ds.xml\(aq, \(aqpilatus_filestartnum_cb.ds.xml\(aq], \(aqtangovimba\(aq: [\(aqtangovimba.xml\(aq, \(aqtangovimba_nxdata.ds.xml\(aq, \(aqtangovimba_external_data.ds.xml\(aq]}
(\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.xmltemplates.standardComponentTemplateFiles  =  {\(aqabsorber\(aq: [\(aqabsorber_foil.ds.xml\(aq, \(aqabsorber_thickness.ds.xml\(aq, \(aqabsorber.xml\(aq], \(aqbeamstop\(aq: [\(aqbeamstop.xml\(aq], \(aqbeamtimefname\(aq: [\(aqbeamtimefname.xml\(aq, \(aqbeamtimefname.ds.xml\(aq, \(aqstart_time.ds.xml\(aq], \(aqbeamtimeid\(aq: [\(aqbeamtimeid.xml\(aq, \(aqbeamtimeid.ds.xml\(aq, \(aqstart_time.ds.xml\(aq], \(aqchcut\(aq: [\(aqchcut.xml\(aq, \(aqchcut_unitcalibration.ds.xml\(aq, \(aqchcut_crystal.ds.xml\(aq], \(aqcoboldhisto\(aq: [\(aqcoboldhisto.xml\(aq, \(aqcoboldhisto_timeofflight.ds.xml\(aq], \(aqcollect2\(aq: [\(aqcollect2.xml\(aq], \(aqcollect3\(aq: [\(aqcollect3.xml\(aq], \(aqcollect4\(aq: [\(aqcollect4.xml\(aq], \(aqcollect5\(aq: [\(aqcollect5.xml\(aq], \(aqcollect6\(aq: [\(aqcollect6.xml\(aq], \(aqcommon2\(aq: [\(aqcommon2_common.ds.xml\(aq], \(aqcommon3\(aq: [\(aqcommon3_common.ds.xml\(aq], \(aqdataaxessignal\(aq: [\(aqdataaxessignal.xml\(aq, \(aqdefaultsignal.ds.xml\(aq, \(aqdefaultaxes.ds.xml\(aq, \(aqsignal_name.ds.xml\(aq, \(aqsignalname.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqdatasignal\(aq: [\(aqdatasignal.xml\(aq, \(aqdefaultsignal.ds.xml\(aq, \(aqsignal_name.ds.xml\(aq, \(aqsignalname.ds.xml\(aq, \(aqsignal_axes.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqdcm\(aq: [\(aqdcm.xml\(aq, \(aqdcm_reflection.ds.xml\(aq, \(aqdcm_unitcalibration.ds.xml\(aq, \(aqdcm_crystal.ds.xml\(aq], \(aqdefault\(aq: [\(aqdefault.xml\(aq, \(aqdefaultsample.xml\(aq, \(aqdefaultinstrument.xml\(aq, \(aqsample_name.ds.xml\(aq, \(aqchemical_formula.ds.xml\(aq, \(aqbeamtime_id.ds.xml\(aq, \(aqbeamtime_filename.ds.xml\(aq, \(aqstart_time.ds.xml\(aq, \(aqend_time.ds.xml\(aq, \(aqnexdatas_version.ds.xml\(aq, \(aqnexdatas_configuration.ds.xml\(aq, \(aqtitle.ds.xml\(aq], \(aqdefaultinstrument\(aq: [\(aqdefaultinstrument.xml\(aq, \(aqbeamtime_id.ds.xml\(aq, \(aqbeamtime_filename.ds.xml\(aq, \(aqstart_time.ds.xml\(aq, \(aqend_time.ds.xml\(aq, \(aqnexdatas_version.ds.xml\(aq, \(aqnexdatas_configuration.ds.xml\(aq, \(aqtitle.ds.xml\(aq], \(aqdefaultsample\(aq: [\(aqdefaultsample.xml\(aq, \(aqsample_name.ds.xml\(aq, \(aqchemical_formula.ds.xml\(aq], \(aqdescription\(aq: [\(aqdescription.xml\(aq, \(aqexperiment_description.ds.xml\(aq], \(aqdescriptiontext\(aq: [\(aqdescriptiontext.xml\(aq], \(aqdetectorlive\(aq: [\(aqdetectorlive.xml\(aq], \(aqempty\(aq: [\(aqempty.xml\(aq], \(aqgroupsecop\(aq: [\(aqgroupsecop.ds.xml\(aq, \(aqgroupsecop_time.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq, \(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq], \(aqkeithley\(aq: [\(aqkeithley.xml\(aq], \(aqmaia\(aq: [\(aqmaia.xml\(aq, \(aqempty.xml\(aq], \(aqmaiadimension\(aq: [\(aqmaiadimension.xml\(aq], \(aqmaiaflux\(aq: [\(aqmaiaflux.xml\(aq], \(aqmsnsar\(aq: [\(aqmsnsar_env.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqmssar\(aq: [\(aqmssar_env.ds.xml\(aq, \(aqsardanaenvironment.ds.xml\(aq], \(aqparametercopymap\(aq: [\(aqparametercopymap.xml\(aq], \(aqpinhole\(aq: [\(aqpinhole.xml\(aq], \(aqpointdet\(aq: [\(aqpointdet.xml\(aq], \(aqqbpm\(aq: [\(aqqbpm_foil.ds.xml\(aq, \(aqqbpm.xml\(aq], \(aqsampledescription\(aq: [\(aqsampledescription.xml\(aq, \(aqsample_description.ds.xml\(aq], \(aqsampledescriptiontext\(aq: [\(aqsampledescriptiontext.xml\(aq], \(aqsamplehkl\(aq: [\(aqsamplehkl.xml\(aq], \(aqsecop\(aq: [\(aqsecop.ds.xml\(aq, \(aqsecop_time.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq, \(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq], \(aqsecoplinks\(aq: [\(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq, \(aqsample_nxdata.ds.xml\(aq, \(aqsampleenv_nxdata.ds.xml\(aq], \(aqsinglesecop\(aq: [\(aqsinglesecop.ds.xml\(aq, \(aqsinglesecop_time.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq, \(aqsample_env_links.ds.xml\(aq, \(aqsample_log_links.ds.xml\(aq], \(aqslit\(aq: [\(aqslit.xml\(aq], \(aqsource\(aq: [\(aqsource.xml\(aq], \(aqstarttime\(aq: [\(aqstarttime.xml\(aq, \(aqstarttime.ds.xml\(aq, \(aqstart_timestamp.ds.xml\(aq, \(aqclient_start_time.ds.xml\(aq], \(aqtango\(aq: [\(aqtango.ds.xml\(aq], \(aqundulator\(aq: [\(aqundulator.xml\(aq]}
(\fI\%dict\fP <\fI\%str\fP , \fI\%list\fP <\fI\%str\fP> >)
xml template files of modules
.UNINDENT
.INDENT 0.0
.TP
.B nxstools.xmltemplates.standardComponentVariables  =  {\(aqabsorber\(aq: {\(aqattenfactor\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqattenuation factor (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name for the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqfoillist\(aq: {\(aqdefault\(aq: \(aq[\(dqAg\(dq, \(dqAg\(dq, \(dqAg\(dq, \(dqAg\(dq, \(dq\(dq, \(dqAl\(dq, \(dqAl\(dq, \(dqAl\(dq, \(dqAl\(dq]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqposition\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqwhich sliders are in [bitarray] MANDATORY (datasource)\(aq}, \(aqthickness\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil thickness, i.e. standard <cpname>_thickness (datasource)\(aq}, \(aqthicknesslist\(aq: {\(aqdefault\(aq: \(aq[0.5, 0.05, 0.025, 0.0125, 0, 0.1, 0.3, 0.5, 1.0]\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(dqtransformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)\(dq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}}, \(aqbeamstop\(aq: {\(aqdescription\(aq: {\(aqdefault\(aq: \(aqcircular\(aq, \(aqdoc\(aq: \(aq circular or  rectangular (string)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqxname\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqhorizontal position name (string)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(dqhorizontal position sign, e.g. \(aq\-\(aq (string)\(dq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqzname\(aq: {\(aqdefault\(aq: \(aqz\(aq, \(aqdoc\(aq: \(aqalong the beam position name (string)\(aq}}, \(aqbeamtimefname\(aq: {\(aqcommissiondir\(aq: {\(aqdefault\(aq: \(aq/gpfs/commissioning\(aq, \(aqdoc\(aq: \(aqcommission file directory (string)\(aq}, \(aqcommissionpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqcommission file postfix (string)\(aq}, \(aqcommissionprefix\(aq: {\(aqdefault\(aq: \(aqcommissioning\-metadata\-\(aq, \(aqdoc\(aq: \(aqcommission file prefix (string)\(aq}, \(aqcurrentdir\(aq: {\(aqdefault\(aq: \(aq/gpfs/current\(aq, \(aqdoc\(aq: \(aqbeamtime file directory (string)\(aq}, \(aqcurrentpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqbeamtime file postfix (string)\(aq}, \(aqcurrentprefix\(aq: {\(aqdefault\(aq: \(aqbeamtime\-metadata\-\(aq, \(aqdoc\(aq: \(aqbeamtime file prefix (string)\(aq}, \(aqlocaldir\(aq: {\(aqdefault\(aq: \(aq/gpfs/local\(aq, \(aqdoc\(aq: \(aqlocal file directory (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}}, \(aqbeamtimeid\(aq: {\(aqcommissiondir\(aq: {\(aqdefault\(aq: \(aq/gpfs/commissioning\(aq, \(aqdoc\(aq: \(aqcommission file directory (string)\(aq}, \(aqcommissionpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqcommission file postfix (string)\(aq}, \(aqcommissionprefix\(aq: {\(aqdefault\(aq: \(aqcommissioning\-metadata\-\(aq, \(aqdoc\(aq: \(aqcommission file prefix (string)\(aq}, \(aqcurrentdir\(aq: {\(aqdefault\(aq: \(aq/gpfs/current\(aq, \(aqdoc\(aq: \(aqbeamtime file directory (string)\(aq}, \(aqcurrentpostfix\(aq: {\(aqdefault\(aq: \(aq.json\(aq, \(aqdoc\(aq: \(aqbeamtime file postfix (string)\(aq}, \(aqcurrentprefix\(aq: {\(aqdefault\(aq: \(aqbeamtime\-metadata\-\(aq, \(aqdoc\(aq: \(aqbeamtime file prefix (string)\(aq}, \(aqlocaldir\(aq: {\(aqdefault\(aq: \(aq/gpfs/local\(aq, \(aqdoc\(aq: \(aqlocal file directory (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}}, \(aqchcut\(aq: {\(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqbragganglename\(aq: {\(aqdefault\(aq: \(aqbragg\(aq, \(aqdoc\(aq: \(aqbragg angle name  (string)\(aq}, \(aqchcutdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device name (string)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq type of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut  (datasource)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqjack1name\(aq: {\(aqdefault\(aq: \(aqjack1\(aq, \(aqdoc\(aq: \(aqfirst vertical jack name of table (string)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqjack2name\(aq: {\(aqdefault\(aq: \(aqjack2\(aq, \(aqdoc\(aq: \(aqsecond vertical jack name of table (string)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqjack3name\(aq: {\(aqdefault\(aq: \(aqjack3\(aq, \(aqdoc\(aq: \(aqthird vertical jack name of table (string)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqlatname\(aq: {\(aqdefault\(aq: \(aqlat\(aq, \(aqdoc\(aq: \(aqhorizontal lattice translation name of the first cristal (string)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqpara\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance between the crystals (string)\(aq}, \(aqparaname\(aq: {\(aqdefault\(aq: \(aqpara\(aq, \(aqdoc\(aq: \(aqbeam parallel translation name of the second cristal (string)\(aq}, \(aqreflection\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqreflection from string (datasource)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqtablename\(aq: {\(aqdefault\(aq: \(aqtable\(aq, \(aqdoc\(aq: \(aqvertical position name of table (string)\(aq}, \(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqthetaname\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta angle name (string)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq unit calibration from dcmmotor (datasource)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqyawname\(aq: {\(aqdefault\(aq: \(aqphi\(aq, \(aqdoc\(aq: \(aqphi rotation name of the first cristal (string)\(aq}}, \(aqcoboldhisto\(aq: {\(aqbinsize\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbin size of histogram data (datasource)\(aq}, \(aqexposuretime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqexposure time for histogram data (datasource)\(aq}, \(aqhistogram\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhistogram data (datasource)\(aq}}, \(aqcollect2\(aq: {\(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}}, \(aqcollect3\(aq: {\(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcollect4\(aq: {\(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqfourth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fourth component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcollect5\(aq: {\(aqfifth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fifth component to collect MANDATORY (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqfourth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fourth component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcollect6\(aq: {\(aqfifth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fifth component to collect MANDATORY (datasource)\(aq}, \(aqfirst\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the first component to collect MANDATORY (datasource)\(aq}, \(aqfourth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the fourth component to collect MANDATORY (datasource)\(aq}, \(aqsecond\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the second component to collect MANDATORY (datasource)\(aq}, \(aqsixth\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the sixth component to collect MANDATORY (datasource)\(aq}, \(aqthird\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqname of the third component to collect MANDATORY (datasource)\(aq}}, \(aqcommon2\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name MANDATORY (datasource)\(aq}, \(aqods\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqoptional detasource name MANDATORY (datasource)\(aq}}, \(aqcommon3\(aq: {\(aqdds\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdefault read datasource name MANDATORY (datasource)\(aq}, \(aqods1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfist optional detasource name MANDATORY (datasource)\(aq}, \(aqods2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond optional detasource name MANDATORY (datasource)\(aq}}, \(aqdataaxessignal\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqaxes\(aq: {\(aqdefault\(aq: \(aqdefaultaxes\(aq, \(aqdoc\(aq: \(aqlist of data axes field names (datasource)\(aq}, \(aqdefaultattrs\(aq: {\(aqdefault\(aq: \(aqFalse\(aq, \(aqdoc\(aq: \(aqadd default attributes (string)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmacroserver sardana device name MANDATORY (string)\(aq}, \(aqnchannelstoskip\(aq: {\(aqdefault\(aq: \(aq0\(aq, \(aqdoc\(aq: \(aqnumber of mg channels to skip (string)\(aq}, \(aqsardanasignal\(aq: {\(aqdefault\(aq: \(aqSignalCounter\(aq, \(aqdoc\(aq: \(aqsignal sardana variable name (string)\(aq}, \(aqsignal\(aq: {\(aqdefault\(aq: \(aqdefaultsignal\(aq, \(aqdoc\(aq: \(aqdata signal field name (datasource)\(aq}}, \(aqdatasignal\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqaxes\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdata axes field name(s) (datasource)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmacroserver sardana device name MANDATORY (string)\(aq}, \(aqnchannelstoskip\(aq: {\(aqdefault\(aq: \(aq0\(aq, \(aqdoc\(aq: \(aqnumber of mg channels to skip (string)\(aq}, \(aqsardanasignal\(aq: {\(aqdefault\(aq: \(aqSignalCounter\(aq, \(aqdoc\(aq: \(aqsignal sardana variable name (string)\(aq}, \(aqsignal\(aq: {\(aqdefault\(aq: \(aqdefaultsignal\(aq, \(aqdoc\(aq: \(aqdata signal field name (datasource)\(aq}}, \(aqdcm\(aq: {\(aqbend1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the first cristal (datasource)\(aq}, \(aqbend2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbending of the second cristal (datasource)\(aq}, \(aqbraggangle\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbragg angle (datasource)\(aq}, \(aqbragganglename\(aq: {\(aqdefault\(aq: \(aqbragg\(aq, \(aqdoc\(aq: \(aqbragg angle name  (string)\(aq}, \(aqchi2dependson\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the second cristal chi, e.g. phi (string)\(aq}, \(aqcrystal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtype of crystal i.e. 0\->Si111,1\->Si311,2\->Si111 ChannelCut (datasource)\(aq}, \(aqdcmdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqFMBOxfDCMEnergy tango device (string)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsynchronized monochromator energy (datasource)\(aq}, \(aqenergyfmb\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmonochromator energy (datasource)\(aq}, \(aqexitoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq exit offset (datasource)\(aq}, \(aqjack1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfirst vertical jack of table (datasource)\(aq}, \(aqjack1name\(aq: {\(aqdefault\(aq: \(aqjack1\(aq, \(aqdoc\(aq: \(aqfirst vertical jack name of table (string)\(aq}, \(aqjack2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecond vertical jack of table (datasource)\(aq}, \(aqjack2name\(aq: {\(aqdefault\(aq: \(aqjack2\(aq, \(aqdoc\(aq: \(aqsecond vertical jack name of table (string)\(aq}, \(aqjack3\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthird vertical jack of table (datasource)\(aq}, \(aqjack3name\(aq: {\(aqdefault\(aq: \(aqjack3\(aq, \(aqdoc\(aq: \(aqthird vertical jack name of table (string)\(aq}, \(aqlat\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the first cristal (datasource)\(aq}, \(aqlat2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal lattice translation of the second cristal (datasource)\(aq}, \(aqlat2name\(aq: {\(aqdefault\(aq: \(aqlat\(aq, \(aqdoc\(aq: \(aqhorizontal lattice translation name of the second cristal (string)\(aq}, \(aqlatname\(aq: {\(aqdefault\(aq: \(aqlat\(aq, \(aqdoc\(aq: \(aqhorizontal lattice translation name of the first cristal (string)\(aq}, \(aqoxfordhorizontal\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq horizontal translation (datasource)\(aq}, \(aqpar2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbeam parallel translation of the second cristal (datasource)\(aq}, \(aqpar2name\(aq: {\(aqdefault\(aq: \(aqpara\(aq, \(aqdoc\(aq: \(aqbeam parallel translation name of the second cristal (string)\(aq}, \(aqperp2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical translation of the second cristal (datasource)\(aq}, \(aqperp2name\(aq: {\(aqdefault\(aq: \(aqperp\(aq, \(aqdoc\(aq: \(aqvertical translation name of the second cristal (string)\(aq}, \(aqphi1dependson\(aq: {\(aqdefault\(aq: \(aq../../transformations/bragg\(aq, \(aqdoc\(aq: \(aqthe depends_on field of the first cristal phi, e.g. theta (string)\(aq}, \(aqpitch1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the first cristal (datasource)\(aq}, \(aqpitch1name\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta rotation name of the first cristal (string)\(aq}, \(aqpitch2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta rotation of the second cristal (datasource)\(aq}, \(aqpitch2name\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta rotation name of the second cristal (string)\(aq}, \(aqroll1\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the first cristal (datasource)\(aq}, \(aqroll1name\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqchi rotation name of the first cristal (string)\(aq}, \(aqroll2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchi rotation of the second cristal (datasource)\(aq}, \(aqroll2name\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqchi rotation name of the second cristal (string)\(aq}, \(aqtable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position of table (datasource)\(aq}, \(aqtablename\(aq: {\(aqdefault\(aq: \(aqtable\(aq, \(aqdoc\(aq: \(aqvertical position name of table (string)\(aq}, \(aqtheta\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtheta angle (datasource)\(aq}, \(aqthetaname\(aq: {\(aqdefault\(aq: \(aqtheta\(aq, \(aqdoc\(aq: \(aqtheta angle name (string)\(aq}, \(aqtopdependson2\(aq: {\(aqdefault\(aq: \(aqchi\(aq, \(aqdoc\(aq: \(aqthe first transformation of the second crystal, e.g. lat (string)\(aq}, \(aqunitcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqunit calibration from dcmmotor (datasource)\(aq}, \(aqusage\(aq: {\(aqdefault\(aq: \(aqBragg\(aq, \(aqdoc\(aq: \(aqthe crystall usage, e.g. Laue (string)\(aq}, \(aqyaw\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the first cristal (datasource)\(aq}, \(aqyaw2\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphi rotation of the second cristal (datasource)\(aq}, \(aqyaw2name\(aq: {\(aqdefault\(aq: \(aqphi\(aq, \(aqdoc\(aq: \(aqphi rotation name of the second cristal (string)\(aq}, \(aqyawname\(aq: {\(aqdefault\(aq: \(aqphi\(aq, \(aqdoc\(aq: \(aqphi rotation name of the first cristal (string)\(aq}}, \(aqdefault\(aq: {\(aq__configdevice__\(aq: {\(aqdefault\(aq: \(aqnxs/configserver/localhost\(aq, \(aqdoc\(aq: \(aqconfiguration server device name (string)\(aq}, \(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqcontrol\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgroup name of the monitor (string)\(aq}, \(aqlongname\(aq: {\(aqdefault\(aq: \(aqP09 Resonant Scattering and Diffraction beamline\(aq, \(aqdoc\(aq: \(aqbeamline long name (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}, \(aqsourcename\(aq: {\(aqdefault\(aq: \(aqPETRA III\(aq, \(aqdoc\(aq: \(aqsource name (string)\(aq}, \(aqsrcname\(aq: {\(aqdefault\(aq: \(aqsource\(aq, \(aqdoc\(aq: \(aqsource group name (string)\(aq}}, \(aqdefaultinstrument\(aq: {\(aq__configdevice__\(aq: {\(aqdefault\(aq: \(aqnxs/configserver/localhost\(aq, \(aqdoc\(aq: \(aqconfiguration server device name (string)\(aq}, \(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqcontrol\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgroup name of the monitor (string)\(aq}, \(aqlongname\(aq: {\(aqdefault\(aq: \(aqP09 Resonant Scattering and Diffraction beamline\(aq, \(aqdoc\(aq: \(aqbeamline long name (string)\(aq}, \(aqshortname\(aq: {\(aqdefault\(aq: \(aqP09\(aq, \(aqdoc\(aq: \(aqbeamline short name (string)\(aq}, \(aqsourcename\(aq: {\(aqdefault\(aq: \(aqPETRA III\(aq, \(aqdoc\(aq: \(aqsource name (string)\(aq}, \(aqsrcname\(aq: {\(aqdefault\(aq: \(aqsource\(aq, \(aqdoc\(aq: \(aqsource group name (string)\(aq}}, \(aqdefaultsample\(aq: {}, \(aqdescription\(aq: {}, \(aqdescriptiontext\(aq: {\(aqdescription\(aq: {\(aqdefault\(aq: \(aqscan\(aq, \(aqdoc\(aq: \(aqscan technique (string)\(aq}}, \(aqdetectorlive\(aq: {\(aqdatatype\(aq: {\(aqdefault\(aq: \(aqNX_UINT32\(aq, \(aqdoc\(aq: \(aqlist of devices (string)\(aq}, \(aqdetectordata\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdetector live data (datasource)\(aq}, \(aqdetname\(aq: {\(aqdefault\(aq: \(aqdetector\(aq, \(aqdoc\(aq: \(aqlist of devices (string)\(aq}}, \(aqempty\(aq: {}, \(aqgroupsecop\(aq: {\(aqaccess\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop access list (string)\(aq}, \(aqgroup\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop group name (string)\(aq}, \(aqhost\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop host name (string)\(aq}, \(aqmessage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop command MANDATORY (string)\(aq}, \(aqport\(aq: {\(aqdefault\(aq: \(aq5000\(aq, \(aqdoc\(aq: \(aqsecop port name (string)\(aq}, \(aqtimeout\(aq: {\(aqdefault\(aq: \(aq0.0001\(aq, \(aqdoc\(aq: \(aqsecop timeout (string)\(aq}}, \(aqkeithley\(aq: {\(aqcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqcurrent in A (datasource)\(aq}, \(aqgain\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgain in V/A (datasource)\(aq}, \(aqrisetime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqrise time (datasource)\(aq}, \(aqsourvoltlevel\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsource voltage level in V (datasource)\(aq}, \(aqvoltage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvoltage in V (datasource)\(aq}}, \(aqmaia\(aq: {\(aqchillersetpoint\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqchiller set point temperature in Celsus (datasource)\(aq}, \(aqchiptemperature\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdetector chip temperature sensor for maia in Celsus (datasource)\(aq}, \(aqgaintrimenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgaintrim enable status for maia (datasource)\(aq}, \(aqidentity\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsensor identity for maia (datasource)\(aq}, \(aqinterlockpressure\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqinterlock pressure for maia in mbar (datasource)\(aq}, \(aqleakagecurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleakage current sensor for maia in A (datasource)\(aq}, \(aqlineariseenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqlinearise enable status for maia (datasource)\(aq}, \(aqmaiadimensions\(aq: {\(aqdefault\(aq: \(aqempty\(aq, \(aqdoc\(aq: \(aqmaia dimensions component name (component)\(aq}, \(aqmaiafluxes\(aq: {\(aqdefault\(aq: \(aqempty\(aq, \(aqdoc\(aq: \(aqmaia fluxes component name (component)\(aq}, \(aqmaiastage\(aq: {\(aqdefault\(aq: \(aqempty\(aq, \(aqdoc\(aq: \(aqmaia stage component name (component)\(aq}, \(aqmosfettemperature\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmosfet temperature sensor for maia in Celsus (datasource)\(aq}, \(aqpeltiercurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpeltier current sensor for maia in A (datasource)\(aq}, \(aqphotonenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqphoton enable status for maia (datasource)\(aq}, \(aqpileuprejectionenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpileup rejection enable status for maia (datasource)\(aq}, \(aqpixelenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel enable status for maia (datasource)\(aq}, \(aqpressure\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgas pressure in mbar (datasource)\(aq}, \(aqrunnumber\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqrun number of maia (datasource)\(aq}, \(aqstatus\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqinterlock status for maia (datasource)\(aq}, \(aqthrottleenable\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthrottle enable status for maia (datasource)\(aq}, \(aquptime\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqinterlock uptime for maia (datasource)\(aq}, \(aqvoltagesetpoint\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvoltage set point temperature in Celsus (datasource)\(aq}, \(aqwatertemperature\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqwater temperature sensor for maia in Celsus (datasource)\(aq}}, \(aqmaiadimension\(aq: {\(aqdetname\(aq: {\(aqdefault\(aq: \(aqmaia\(aq, \(aqdoc\(aq: \(aqdetector (alias) name (string)\(aq}, \(aqdimname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdimension name for maia (datasource)\(aq}, \(aqdname\(aq: {\(aqdefault\(aq: \(aqdimension\(aq, \(aqdoc\(aq: \(aqdimension name group (string)\(aq}, \(aqhysteresis\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel hysteresis of dimension for maia (datasource)\(aq}, \(aqnumberofpixels\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnumber of pixels of dimension for maia (datasource)\(aq}, \(aqorigin\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel origin of dimension for maia (datasource)\(aq}, \(aqpixelpitch\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpixel pitch of dimension for maia (datasource)\(aq}, \(aqpositionsource\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqposition source of dimension for maia (datasource)\(aq}, \(aqunit\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqposition units of dimension for maia (datasource)\(aq}}, \(aqmaiaflux\(aq: {\(aqcoefficient\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux coefficient  for maia (datasource)\(aq}, \(aqdetname\(aq: {\(aqdefault\(aq: \(aqmaia\(aq, \(aqdoc\(aq: \(aqdetector (alias) name (string)\(aq}, \(aqfluxname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux name for maia (datasource)\(aq}, \(aqfname\(aq: {\(aqdefault\(aq: \(aqfluxdevice\(aq, \(aqdoc\(aq: \(aqflux name group (string)\(aq}, \(aqkeithleydevice\(aq: {\(aqdefault\(aq: \(aqkeithley\(aq, \(aqdoc\(aq: \(aqkeithley device name (string)\(aq}, \(aqsource\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux source for maia (datasource)\(aq}, \(aqunit\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqflux unit for maia (datasource)\(aq}, \(aqvfcfactor\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvfc conversion factor (datasource)\(aq}}, \(aqmsnsar\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana device name MANDATORY (string)\(aq}, \(aqvarname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnested sardana environment variable name  MANDATORY (string)\(aq}}, \(aqmssar\(aq: {\(aq__tangohost__\(aq: {\(aqdefault\(aq: \(aqlocalhost\(aq, \(aqdoc\(aq: \(aqtango host (string)\(aq}, \(aq__tangoport__\(aq: {\(aqdefault\(aq: \(aq10000\(aq, \(aqdoc\(aq: \(aqtango port (string)\(aq}, \(aqmsenv\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment (datasource)\(aq}, \(aqmssardanadevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqmacroserver sardana device name MANDATORY (string)\(aq}, \(aqvarname\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsardana environment variable name MANDATORY (string)\(aq}}, \(aqparametercopymap\(aq: {\(aqcopymap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqyaml dictionary with {output: input} copy map (string)\(aq}, \(aqparameter\(aq: {\(aqdefault\(aq: \(aqcopymap\(aq, \(aqdoc\(aq: \(aqparameter name of copymap (string)\(aq}, \(aqprogram\(aq: {\(aqdefault\(aq: \(aqnxsfileinfo_parameters\(aq, \(aqdoc\(aq: \(aqgroup name of NXparameters (string)\(aq}}, \(aqpinhole\(aq: {\(aqdiameter\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpinhole diameter (datasource)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqxname\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqhorizontal position name (string)\(aq}, \(aqxsign\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(dqhorizontal position sign, e.g. \(aq\-\(aq (string)\(dq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}, \(aqz\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqalong the beam position (datasource)\(aq}, \(aqzname\(aq: {\(aqdefault\(aq: \(aqz\(aq, \(aqdoc\(aq: \(aqalong the beam position name (string)\(aq}}, \(aqpointdet\(aq: {\(aqdata\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdiode data (datasource)\(aq}, \(aqdetname\(aq: {\(aqdefault\(aq: \(aqdetector\(aq, \(aqdoc\(aq: \(aqdetector group name (string)\(aq}}, \(aqqbpm\(aq: {\(aqdependsony\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqthe  depends_on y field value,  e.g. distance (string)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name for the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqfoil\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil type, i.e. standard <cpname>_foil (datasource)\(aq}, \(aqfoilpos\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqfoil position MANDATORY (datasource)\(aq}, \(aqfoilposdict\(aq: {\(aqdefault\(aq: \(aq{\(dqTi\(dq: 43, \(dqNi\(dq: 23, \(dqOut\(dq: 3}\(aq, \(aqdoc\(aq: \(aqfoil_type position json dictionary (string)\(aq}, \(aqx\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal position (datasource)\(aq}, \(aqxname\(aq: {\(aqdefault\(aq: \(aqx\(aq, \(aqdoc\(aq: \(aqhorizontal position name (string)\(aq}, \(aqy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical position (datasource)\(aq}, \(aqyname\(aq: {\(aqdefault\(aq: \(aqy\(aq, \(aqdoc\(aq: \(aqvertical position name (string)\(aq}}, \(aqsampledescription\(aq: {\(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsampledescriptiontext\(aq: {\(aqdescription\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqsample description or sampleId (string)\(aq}, \(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsamplehkl\(aq: {\(aqh\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqh position in hkl space (datasource)\(aq}, \(aqk\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqk position in hkl space (datasource)\(aq}, \(aql\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aql position in hkl space (datasource)\(aq}, \(aqpsi\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqpsi angle position of analyzer (datasource)\(aq}, \(aqsname\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsecop\(aq: {\(aqhost\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop host name (string)\(aq}, \(aqmessage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop command MANDATORY (string)\(aq}, \(aqport\(aq: {\(aqdefault\(aq: \(aq5000\(aq, \(aqdoc\(aq: \(aqsecop port name (string)\(aq}, \(aqtimeout\(aq: {\(aqdefault\(aq: \(aq0.0001\(aq, \(aqdoc\(aq: \(aqsecop timeout (string)\(aq}}, \(aqsecoplinks\(aq: {\(aqenvironments\(aq: {\(aqdefault\(aq: \(aqtemperature,magnetic_field\(aq, \(aqdoc\(aq: \(aqsecop environment link lists MANDATORY (string)\(aq}, \(aqmeanings\(aq: {\(aqdefault\(aq: \(aqtemperature,magnetic_field,electric_field,stress_field,pressure\(aq, \(aqdoc\(aq: \(aqsecop meanings link lists MANDATORY (string)\(aq}, \(aqsampleenvname\(aq: {\(aqdefault\(aq: \(aqsample_environment\(aq, \(aqdoc\(aq: \(aqsample environment group name (string)\(aq}, \(aqsamplename\(aq: {\(aqdefault\(aq: \(aqsample\(aq, \(aqdoc\(aq: \(aqsample group name (string)\(aq}}, \(aqsinglesecop\(aq: {\(aqhost\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop host name (string)\(aq}, \(aqmessage\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqsecop command MANDATORY (string)\(aq}, \(aqport\(aq: {\(aqdefault\(aq: \(aq5000\(aq, \(aqdoc\(aq: \(aqsecop port name (string)\(aq}, \(aqtimeout\(aq: {\(aqdefault\(aq: \(aq0.0001\(aq, \(aqdoc\(aq: \(aqsecop timeout (string)\(aq}}, \(aqslit\(aq: {\(aqbottom\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbottom blade position (datasource)\(aq}, \(aqbottomclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqbottom blade closed position (datasource)\(aq}, \(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance for the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name for the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqleft\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleft blade position (datasource)\(aq}, \(aqleftclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqleft blade closed position (datasource)\(aq}, \(aqright\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqright blade position (datasource)\(aq}, \(aqrightclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqright blade closed position (datasource)\(aq}, \(aqtop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtop blade position (datasource)\(aq}, \(aqtopclosed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtop blade closed position (datasource)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(dqtransformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)\(dq}, \(aqxgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal gap (datasource)\(aq}, \(aqxoffdependson\(aq: {\(aqdefault\(aq: \(aqy_offset\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqxoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal offset (datasource)\(aq}, \(aqxoffsetcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqhorizontal offset calibration (datasource)\(aq}, \(aqxoffsetcalibrationname\(aq: {\(aqdefault\(aq: \(aqx_offset_calibration\(aq, \(aqdoc\(aq: \(aqhorizontal offset calibration name (string)\(aq}, \(aqxoffsetname\(aq: {\(aqdefault\(aq: \(aqx_offset\(aq, \(aqdoc\(aq: \(aqhorizontal offset name (string)\(aq}, \(aqygap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertical gap (datasource)\(aq}, \(aqyoffdependson\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqyoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertiacal offset (datasource)\(aq}, \(aqyoffsetcalibration\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqvertiacal offset calibration (datasource)\(aq}, \(aqyoffsetcalibrationname\(aq: {\(aqdefault\(aq: \(aqy_offset_calibration\(aq, \(aqdoc\(aq: \(aqvertiacal offset calibration name (string)\(aq}, \(aqyoffsetname\(aq: {\(aqdefault\(aq: \(aqy_offset\(aq, \(aqdoc\(aq: \(aqvertiacal offset name (string)\(aq}}, \(aqsource\(aq: {\(aqbeamcurrent\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam current (datasource)\(aq}, \(aqbunchmode\(aq: {\(aqdefault\(aq: \(aqMulti Bunch\(aq, \(aqdoc\(aq: \(aqbunch mode (string)\(aq}, \(aqnumberofbunches\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqnumber of source bunches (datasource)\(aq}, \(aqsourceenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqring beam energy (datasource)\(aq}, \(aqsrcname\(aq: {\(aqdefault\(aq: \(aqsource\(aq, \(aqdoc\(aq: \(aqsource group name (string)\(aq}}, \(aqstarttime\(aq: {}, \(aqtango\(aq: {\(aqattribute\(aq: {\(aqdefault\(aq: \(aqPosition\(aq, \(aqdoc\(aq: \(aqtango device attribute (string)\(aq}, \(aqdevice\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqtango device MANDATORY (string)\(aq}}, \(aqundulator\(aq: {\(aqdependstop\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqthe first transformation, e.g. distance (string)\(aq}, \(aqdistance\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqdistance from the sample in m, e.g. 0 (string)\(aq}, \(aqdistancename\(aq: {\(aqdefault\(aq: \(aqdistance\(aq, \(aqdoc\(aq: \(aqdistance name from the sample in m, e.g. 0 (string)\(aq}, \(aqdistanceoffset\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aq3\-vector distance offset in m, e.g. sample\-source offset if the distance is taken from the source (string)\(aq}, \(aqenergy\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator energy (datasource)\(aq}, \(aqgap\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqseparation between opposing pairs of magnetic pole (datasource)\(aq}, \(aqgapunits\(aq: {\(aqdefault\(aq: \(aqmm\(aq, \(aqdoc\(aq: \(aqgap units (string)\(aq}, \(aqharmonic\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator harmonic (datasource)\(aq}, \(aqlength\(aq: {\(aqdefault\(aq: \(aq2\(aq, \(aqdoc\(aq: \(aqlength of insertion device in meters (string)\(aq}, \(aqshift\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator shift (datasource)\(aq}, \(aqshiftunits\(aq: {\(aqdefault\(aq: \(aqmm\(aq, \(aqdoc\(aq: \(aqshift units (string)\(aq}, \(aqspeed\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqundulator speed (datasource)\(aq}, \(aqspeedunits\(aq: {\(aqdefault\(aq: \(aq\(aq, \(aqdoc\(aq: \(aqspeed units (string)\(aq}, \(aqtaper\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(aqgap difference between upstream and downstream ends of the insertion device (datasource)\(aq}, \(aqtaperunits\(aq: {\(aqdefault\(aq: \(aqmm\(aq, \(aqdoc\(aq: \(aqgap units (string)\(aq}, \(aqtransformations\(aq: {\(aqdefault\(aq: None, \(aqdoc\(aq: \(dqtransformations group name i.e. \(aqtransformations\(aq. If it is  not set it is not created (string)\(dq}, \(aqtype\(aq: {\(aqdefault\(aq: \(aqundulator\(aq, \(aqdoc\(aq: \(aqundulator or wiggler (string)\(aq}, \(aquname\(aq: {\(aqdefault\(aq: \(aqinsertion_device\(aq, \(aqdoc\(aq: \(aqinsertion_device group name (string)\(aq}}}
(\fI\%dict\fP <\fI\%str\fP , \fI\%dict\fP <\fI\%str\fP , \fI\%str\fP > >)
standard component template variables
and its [default value, doc string]
.UNINDENT
.sp
pyeval functions
.INDENT 0.0
.IP \(bu 2
\fI\%Index\fP
.IP \(bu 2
\fI\%Module Index\fP
.IP \(bu 2
\fI\%Search Page\fP
.UNINDENT
.SH AUTHOR
Jan Kotanski
.SH COPYRIGHT
2012-2018 DESY, Jan Kotanski <jkotan@mail.desy.de>

GNU GENERAL PUBLIC LICENSE, version 3
.\" Generated by docutils manpage writer.
.
